(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     89860,       1958]
NotebookOptionsPosition[     81229,       1818]
NotebookOutlinePosition[     81568,       1833]
CellTagsIndexPosition[     81525,       1830]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 StyleBox["Don\[CloseCurlyQuote]t Compel Machines to Compute like a Human: \n\
Calculate the dimension of Snowflake Curve", "Title"],
 "\n\n",
 StyleBox["As a college student studying math, I often feel embarrassed to \
say that I have no idea how to calculate any derivatives or differentiations. \
I know how to prove their existence fairly well, but never the actual \
computations. In a proof-based math class, concrete numbers only appears in \
title of chapters and theorems. With this mindset, I encounter some \
difficulties in trying to do computations as I do proofs.",
  FontSize->20,
  FontColor->GrayLevel[0.5]]
}], "Text",
 CellChangeTimes->{{3.7705023237103643`*^9, 3.770502358274172*^9}, {
   3.770502414523829*^9, 3.77050256087994*^9}, {3.770502602829146*^9, 
   3.770502629024062*^9}, {3.770502661705296*^9, 3.7705027190606327`*^9}, {
   3.770502759463838*^9, 3.770502787631515*^9}, {3.7705028237197733`*^9, 
   3.770502827332326*^9}, {3.7705029843107157`*^9, 3.770502998719902*^9}, {
   3.770503052352889*^9, 3.770503063996566*^9}, {3.77050385576963*^9, 
   3.770503858085217*^9}, {3.770506427999888*^9, 3.770506439813778*^9}, {
   3.770506846855235*^9, 3.770506967164386*^9}, {3.770507026962428*^9, 
   3.770507085474902*^9}, {3.7705072937200003`*^9, 3.770507310310808*^9}, {
   3.7705082983181553`*^9, 3.7705082983275948`*^9}, 3.7705084450870113`*^9, {
   3.770565567828044*^9, 3.7705655678302298`*^9}, {3.770578703240984*^9, 
   3.770578978451519*^9}, {3.770579009402038*^9, 3.7705790566718884`*^9}, {
   3.7705795876485367`*^9, 3.770579610392027*^9}, {3.770579647607605*^9, 
   3.770579665892847*^9}, {3.770579758066551*^9, 3.7705797688367567`*^9}, {
   3.7705800952977543`*^9, 3.770580110208117*^9}, {3.7705806128063297`*^9, 
   3.770580634932331*^9}, {3.770580678178236*^9, 3.770580679862534*^9}, {
   3.7705807895558777`*^9, 3.770580969063079*^9}, {3.7705814034287977`*^9, 
   3.770581416986741*^9}, {3.7705814679981823`*^9, 3.770581514340864*^9}, {
   3.770581671027631*^9, 3.7705816818163013`*^9}, 3.7705817963155622`*^9, {
   3.770581987922288*^9, 3.770582044657151*^9}, {3.77058242611516*^9, 
   3.770582429967353*^9}, {3.770597776844647*^9, 3.7705977958861313`*^9}, {
   3.770597841012104*^9, 
   3.770597847296967*^9}},ExpressionUUID->"823dc315-ed88-4ec5-b858-\
c73294025028"],

Cell[CellGroupData[{

Cell["Dimensions of Fractals", "Section",
 CellChangeTimes->{{3.770597862234165*^9, 
  3.770597867054875*^9}},ExpressionUUID->"2d5a26a6-ad7e-4c97-a516-\
d6444764d742"],

Cell[TextData[StyleBox["We all have intuitions for dimension : lines are one \
dimensional, squares are two dimensional, and cubes are three dimensional. ",
 FontSize->20]], "Text",
 CellChangeTimes->{{3.7705023237103643`*^9, 3.770502358274172*^9}, {
   3.770502414523829*^9, 3.77050256087994*^9}, {3.770502602829146*^9, 
   3.770502629024062*^9}, {3.770502661705296*^9, 3.7705027190606327`*^9}, {
   3.770502759463838*^9, 3.770502787631515*^9}, {3.7705028237197733`*^9, 
   3.770502827332326*^9}, {3.7705029843107157`*^9, 3.770502998719902*^9}, {
   3.770503052352889*^9, 3.770503063996566*^9}, {3.77050385576963*^9, 
   3.770503858085217*^9}, {3.770506427999888*^9, 3.770506439813778*^9}, {
   3.770506846855235*^9, 3.770506967164386*^9}, {3.770507026962428*^9, 
   3.770507085474902*^9}, {3.7705072937200003`*^9, 3.770507310310808*^9}, {
   3.7705082983181553`*^9, 3.7705082983275948`*^9}, 3.7705084450870113`*^9, {
   3.770565567828044*^9, 3.7705655678302298`*^9}, {3.770578703240984*^9, 
   3.770578978451519*^9}, {3.770579009402038*^9, 3.7705790566718884`*^9}, {
   3.7705795876485367`*^9, 3.770579610392027*^9}, {3.770579647607605*^9, 
   3.770579665892847*^9}, {3.770579758066551*^9, 3.7705797688367567`*^9}, {
   3.7705800952977543`*^9, 3.770580110208117*^9}, {3.7705806128063297`*^9, 
   3.770580634932331*^9}, {3.770580678178236*^9, 3.770580679862534*^9}, {
   3.7705807895558777`*^9, 3.770580969063079*^9}, {3.7705814034287977`*^9, 
   3.770581416986741*^9}, {3.7705814679981823`*^9, 3.770581514340864*^9}, {
   3.770581671027631*^9, 3.7705816818163013`*^9}, 3.7705817963155622`*^9, {
   3.770581987922288*^9, 3.770582044657151*^9}, {3.77058242611516*^9, 
   3.770582429967353*^9}, {3.770597776844647*^9, 3.770597791736967*^9}, 
   3.770597871438472*^9},ExpressionUUID->"71b60f4f-b3ba-4141-a122-\
f19149dceead"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  DynamicModuleBox[{Typeset`open = False}, 
   TemplateBox[{"Expression",RowBox[{"Animate", "[", 
       DynamicBox[
        FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}],
     GridBox[{{
        RowBox[{
          TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
          TagBox["1048", "IconizedItem"]}]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
     Typeset`open]},
    "IconizedObject"]],
  Animate[
   Part[{
     Graphics[
      Line[{{1, 0}, {2, 1}, {3, 0}, {4, 1}}]], 
     Graphics[
      Circle[]], 
     Graphics3D[{Transparent, 
       Cube[]}]}, $CellContext`i], {$CellContext`i, 1, 3, 1}],
  SelectWithContents->True,
  Selectable->False]], "Input",
 CellChangeTimes->{{3.7705820507155123`*^9, 3.770582165755474*^9}, {
  3.770582200345058*^9, 3.770582225045122*^9}, {3.770582266680172*^9, 
  3.770582385368663*^9}, {3.770597903836051*^9, 
  3.770597920323831*^9}},ExpressionUUID->"95a522e5-22ff-437e-8a8e-\
7f27f9d9cce2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 3, 1}}, Typeset`size$$ = {
    360., {177., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$7931617$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$7931617$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Part[{
         Graphics[
          Line[{{1, 0}, {2, 1}, {3, 0}, {4, 1}}]], 
         Graphics[
          Circle[{1, 1}, 0.25]], 
         Graphics3D[{Transparent, 
           Cube[]}]}, $CellContext`i$$], 
      "Specifications" :> {{$CellContext`i$$, 1, 3, 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {214., 220.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.770582283333852*^9, 3.770582301136819*^9}, {
  3.770582333368223*^9, 3.770582378683271*^9}},
 CellLabel->
  "Out[590]=",ExpressionUUID->"a8681c48-8603-4103-bf14-1f194e3c86f1"]
}, Open  ]],

Cell[TextData[{
 "\n",
 StyleBox["But there are curves such that there's no intuitive way to \
describe their dimension. For example, the ",
  FontSize->20,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  NamespaceBox["LinguisticAssistant",
   DynamicModuleBox[{Typeset`query$$ = "Snowflake curve", Typeset`boxes$$ = 
    TemplateBox[{"\"snowflake curve\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PopularCurve\"", ",", "\"SnowflakeCurve\""}], "]"}], 
      "\"Entity[\\\"PopularCurve\\\", \\\"SnowflakeCurve\\\"]\"", 
      "\"popular curve\""}, "Entity"], 
    Typeset`allassumptions$$ = {{
     "type" -> "SubCategory", "word" -> "Snowflake curve", "template" -> 
      "Assuming ${desc1}. Use ${desc2} instead", "count" -> "2", 
      "Values" -> {{
        "name" -> "SnowflakeCurve", "desc" -> "snowflake curve", "input" -> 
         "*DPClash.PopularCurveE.Snowflake+curve-_*SnowflakeCurve-"}, {
        "name" -> "Olympics2014SnowflakeCurve", "desc" -> 
         "Sochi 2014 Paralympics Snowflake\[Hyphen]like curve", "input" -> 
         "*DPClash.PopularCurveE.Snowflake+curve-_*Olympics2014SnowflakeCurve-\
"}}}}, Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
    Typeset`querystate$$ = {
    "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
     0.488787`6.140664640191716, "Messages" -> {}}}, 
    DynamicBox[ToBoxes[
      AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
       Dynamic[Typeset`query$$], 
       Dynamic[Typeset`boxes$$], 
       Dynamic[Typeset`allassumptions$$], 
       Dynamic[Typeset`assumptions$$], 
       Dynamic[Typeset`open$$], 
       Dynamic[Typeset`querystate$$]], StandardForm],
     ImageSizeCache->{156., {7., 16.}},
     TrackedSymbols:>{
      Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
       Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
    DynamicModuleValues:>{},
    UndoTrackedVariables:>{Typeset`open$$}],
   BaseStyle->{"Deploy"},
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True]],
  CellChangeTimes->{{3.770581805131531*^9, 3.770581808255706*^9}, {
    3.770581864636216*^9, 3.770581920171857*^9}, 3.77059853483066*^9},
  FontSize->14,ExpressionUUID->"7c984f2b-f6f4-4004-ad22-345c93bb680d"],
 StyleBox[", a closed curve with finite area but infinite perimeter. Here we \
can examine the upper part of the entire snowflake in different precisions:",
  FontSize->20,
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.7705023237103643`*^9, 3.770502358274172*^9}, {
   3.770502414523829*^9, 3.77050256087994*^9}, {3.770502602829146*^9, 
   3.770502629024062*^9}, {3.770502661705296*^9, 3.7705027190606327`*^9}, {
   3.770502759463838*^9, 3.770502787631515*^9}, {3.7705028237197733`*^9, 
   3.770502827332326*^9}, {3.7705029843107157`*^9, 3.770502998719902*^9}, {
   3.770503052352889*^9, 3.770503063996566*^9}, {3.77050385576963*^9, 
   3.770503858085217*^9}, {3.770506427999888*^9, 3.770506439813778*^9}, {
   3.770506846855235*^9, 3.770506967164386*^9}, {3.770507026962428*^9, 
   3.770507085474902*^9}, {3.7705072937200003`*^9, 3.770507310310808*^9}, {
   3.7705082983181553`*^9, 3.7705082983275948`*^9}, 3.7705084450870113`*^9, {
   3.770565567828044*^9, 3.7705655678302298`*^9}, {3.770578703240984*^9, 
   3.770578978451519*^9}, {3.770579009402038*^9, 3.7705790566718884`*^9}, {
   3.7705795876485367`*^9, 3.770579610392027*^9}, {3.770579647607605*^9, 
   3.770579665892847*^9}, {3.770579758066551*^9, 3.7705797688367567`*^9}, {
   3.7705800952977543`*^9, 3.770580110208117*^9}, {3.7705806128063297`*^9, 
   3.770580634932331*^9}, {3.770580678178236*^9, 3.770580679862534*^9}, {
   3.7705807895558777`*^9, 3.770580969063079*^9}, {3.7705814034287977`*^9, 
   3.770581416986741*^9}, {3.7705814679981823`*^9, 3.770581514340864*^9}, {
   3.770581671027631*^9, 3.7705816818163013`*^9}, 3.7705817963155622`*^9, {
   3.770581987922288*^9, 3.77058204784993*^9}, {3.7705985432187433`*^9, 
   3.7705985440349207`*^9}, {3.770598600349506*^9, 
   3.770598665453415*^9}},ExpressionUUID->"27636f91-6965-4e92-bc09-\
3afed610f96b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"graphs", " ", "=", " ", 
   RowBox[{"Graphics", " ", "/@", " ", 
    RowBox[{"KochCurve", " ", "/@", " ", 
     RowBox[{"Range", "[", "8", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"graphs", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "8", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.770598314169344*^9, 3.770598387764347*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"8f7e1965-73b6-4006-a701-4fca674c92b3"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 8, 1}}, Typeset`size$$ = {360., {55., 59.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$5800$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$5800$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Part[$CellContext`graphs, $CellContext`n$$], 
      "Specifications" :> {{$CellContext`n$$, 1, 8, 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {91., 97.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.770598480464793*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"711d4b5d-5660-44ca-a394-80aa11f3da72"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Hausdorff Dimension", "Section",
 CellChangeTimes->{{3.770598683880432*^9, 
  3.770598695045947*^9}},ExpressionUUID->"2a800c94-d861-484c-973c-\
d29e817900b2"],

Cell[TextData[{
 StyleBox["One way to study the dimension of such curves is using the ",
  FontSize->20],
 Cell[BoxData[
  FormBox[
   NamespaceBox["LinguisticAssistant",
    DynamicModuleBox[{Typeset`query$$ = "Hausdorff dimension", 
     Typeset`boxes$$ = TemplateBox[{"\"Hausdorff dimension\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"MathWorld\"", ",", "\"HausdorffDimension\""}], "]"}], 
       "\"Entity[\\\"MathWorld\\\", \\\"HausdorffDimension\\\"]\"", 
       "\"MathWorld topic\""}, "Entity"], 
     Typeset`allassumptions$$ = {{
      "type" -> "MultiClash", "word" -> "", "template" -> 
       "Assuming ${word1} is referring to ${desc1}. Use \"${word2}\" as \
${desc2}. Use \"${word3}\" as ${desc3}.", "count" -> "3", 
       "Values" -> {{
         "name" -> "MathWorld", "word" -> "the input", "desc" -> 
          " referring to a mathematical definition", "input" -> 
          "*MC.%7E-_*MathWorld-"}, {
         "name" -> "MinorPlanetPropertyClass", "word" -> "dimension", "desc" -> 
          "physical properties of a minor planet", "input" -> 
          "*MC.%7E-_*MinorPlanetPropertyClass-"}, {
         "name" -> "MinorPlanetProperty", "word" -> "dimension", "desc" -> 
          "dimensions of a minor planet", "input" -> 
          "*MC.%7E-_*MinorPlanetProperty-"}}}}, Typeset`assumptions$$ = {}, 
     Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      1.311234`6.569225195361761, "Messages" -> {}}}, 
     DynamicBox[ToBoxes[
       AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
        Dynamic[Typeset`query$$], 
        Dynamic[Typeset`boxes$$], 
        Dynamic[Typeset`allassumptions$$], 
        Dynamic[Typeset`assumptions$$], 
        Dynamic[Typeset`open$$], 
        Dynamic[Typeset`querystate$$]], StandardForm],
      ImageSizeCache->{195., {7., 17.}},
      TrackedSymbols:>{
       Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
        Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
     DynamicModuleValues:>{},
     UndoTrackedVariables:>{Typeset`open$$}],
    BaseStyle->{"Deploy"},
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "76c66a58-1bb2-4321-b1bf-ba377770de26"],
 ":",
 StyleBox["\nWe can cover the curves with balls of a fixed radius ",
  FontSize->20],
 Cell[BoxData[
  FormBox["r", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "bb19e3ce-ca08-41c4-b236-08cb38f5d2b6"],
 StyleBox[". Below is a sample cover of the snowflake curve:",
  FontSize->20]
}], "Text",
 CellChangeTimes->{{3.7705023237103643`*^9, 3.770502358274172*^9}, {
   3.770502414523829*^9, 3.77050256087994*^9}, {3.770502602829146*^9, 
   3.770502629024062*^9}, {3.770502661705296*^9, 3.7705027190606327`*^9}, {
   3.770502759463838*^9, 3.770502787631515*^9}, {3.7705028237197733`*^9, 
   3.770502827332326*^9}, {3.7705029843107157`*^9, 3.770502998719902*^9}, {
   3.770503052352889*^9, 3.770503063996566*^9}, {3.77050385576963*^9, 
   3.770503858085217*^9}, {3.770506427999888*^9, 3.770506439813778*^9}, {
   3.770506846855235*^9, 3.770506967164386*^9}, {3.770507026962428*^9, 
   3.770507085474902*^9}, {3.7705072937200003`*^9, 3.770507310310808*^9}, {
   3.7705082983181553`*^9, 3.7705082983275948`*^9}, 3.7705084450870113`*^9, {
   3.770565567828044*^9, 3.7705655678302298`*^9}, {3.770578703240984*^9, 
   3.770578978451519*^9}, {3.770579009402038*^9, 3.7705790566718884`*^9}, {
   3.7705795876485367`*^9, 3.770579591486557*^9}, {3.770579792700881*^9, 
   3.770580006099328*^9}, {3.7705801513281813`*^9, 3.770580327363489*^9}, 
   3.770598671737246*^9, 3.770598834115889*^9, {3.770598868152214*^9, 
   3.770599057624261*^9}, {3.7705994486931963`*^9, 
   3.770599460877112*^9}},ExpressionUUID->"5e167a4a-ad28-4289-9190-\
a9392f19d8f1"],

Cell[BoxData[
 RowBox[{"[", "SampleGraph", "]"}]], "Input",
 CellChangeTimes->{{3.770599020707328*^9, 
  3.770599025171509*^9}},ExpressionUUID->"ea446dc7-0fe1-4d3c-94be-\
93ef6d839337"],

Cell[TextData[{
 StyleBox["Then we analyze the sum of these diameters, each raised to a power \
of ",
  FontSize->20],
 Cell[BoxData[
  FormBox["s", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "28f5054c-bdd5-4995-b5ac-310fb8ae9a7c"],
 StyleBox[". For each radius ",
  FontSize->20],
 Cell[BoxData[
  FormBox["r", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5de8f40e-a412-44b9-9675-c28f43e617a0"],
 StyleBox[", we take the minimum of the sum in all possible coverings.",
  FontSize->20]
}], "Text",
 CellChangeTimes->{{3.7705023237103643`*^9, 3.770502358274172*^9}, {
   3.770502414523829*^9, 3.77050256087994*^9}, {3.770502602829146*^9, 
   3.770502629024062*^9}, {3.770502661705296*^9, 3.7705027190606327`*^9}, {
   3.770502759463838*^9, 3.770502787631515*^9}, {3.7705028237197733`*^9, 
   3.770502827332326*^9}, {3.7705029843107157`*^9, 3.770502998719902*^9}, {
   3.770503052352889*^9, 3.770503063996566*^9}, {3.77050385576963*^9, 
   3.770503858085217*^9}, {3.770506427999888*^9, 3.770506439813778*^9}, {
   3.770506846855235*^9, 3.770506967164386*^9}, {3.770507026962428*^9, 
   3.770507085474902*^9}, {3.7705072937200003`*^9, 3.770507310310808*^9}, {
   3.7705082983181553`*^9, 3.7705082983275948`*^9}, 3.7705084450870113`*^9, {
   3.770565567828044*^9, 3.7705655678302298`*^9}, {3.770578703240984*^9, 
   3.770578978451519*^9}, {3.770579009402038*^9, 3.7705790566718884`*^9}, {
   3.7705795876485367`*^9, 3.770579591486557*^9}, {3.770579792700881*^9, 
   3.770580006099328*^9}, {3.7705801513281813`*^9, 3.770580327363489*^9}, 
   3.770598671737246*^9, 3.770598834115889*^9, {3.770598868152214*^9, 
   3.770599027697192*^9}, 3.770599071036319*^9, {3.770599191178256*^9, 
   3.7705991917958927`*^9}},ExpressionUUID->"6ad5ffcf-c645-4606-beba-\
4e4943a7970d"],

Cell[BoxData[
 RowBox[{"[", 
  RowBox[{
  "Notation", " ", "Package", " ", "For", " ", "the", " ", "Formula"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.770580334931952*^9, 
  3.770580368973218*^9}},ExpressionUUID->"85841228-2963-4275-b9c0-\
5106d59d2196"],

Cell[TextData[StyleBox["For each minimum corresponding to a radius, we take \
the limit as the radius goes to zero.",
 FontSize->20]], "Text",
 CellChangeTimes->{{3.7705023237103643`*^9, 3.770502358274172*^9}, {
   3.770502414523829*^9, 3.77050256087994*^9}, {3.770502602829146*^9, 
   3.770502629024062*^9}, {3.770502661705296*^9, 3.7705027190606327`*^9}, {
   3.770502759463838*^9, 3.770502787631515*^9}, {3.7705028237197733`*^9, 
   3.770502827332326*^9}, {3.7705029843107157`*^9, 3.770502998719902*^9}, {
   3.770503052352889*^9, 3.770503063996566*^9}, {3.77050385576963*^9, 
   3.770503858085217*^9}, {3.770506427999888*^9, 3.770506439813778*^9}, {
   3.770506846855235*^9, 3.770506967164386*^9}, {3.770507026962428*^9, 
   3.770507085474902*^9}, {3.7705072937200003`*^9, 3.770507310310808*^9}, {
   3.7705082983181553`*^9, 3.7705082983275948`*^9}, 3.7705084450870113`*^9, {
   3.770565567828044*^9, 3.7705655678302298`*^9}, {3.770578703240984*^9, 
   3.770578978451519*^9}, {3.770579009402038*^9, 3.7705790566718884`*^9}, {
   3.7705795876485367`*^9, 3.770579591486557*^9}, {3.770579792700881*^9, 
   3.770580006099328*^9}, {3.7705801513281813`*^9, 3.7705803173151627`*^9}, {
   3.770580380752643*^9, 
   3.770580395207263*^9}},ExpressionUUID->"cafcff00-dff2-4d36-8c65-\
cac6882aa67a"],

Cell[BoxData[
 RowBox[{"[", 
  RowBox[{
  "Notation", " ", "Package", " ", "For", " ", "the", " ", "Formula"}], 
  "]"}]], "Input",ExpressionUUID->"e1e403b9-102f-4046-8996-98ebcd89547f"],

Cell[TextData[{
 StyleBox["For some values of ",
  FontSize->20],
 Cell[BoxData[
  FormBox["s", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6211dfbe-fb16-4e81-87e1-4a0c4ffc259e"],
 StyleBox[", this sum converges to a finite value, and for other values of ",
  FontSize->20],
 Cell[BoxData[
  FormBox["s", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "72c324bc-e6bc-4c0f-a82f-634efb38db85"],
 StyleBox[", this sum diverges.",
  FontSize->20],
 " ",
 StyleBox["It is not hard to show that there exists a crucial value ",
  FontSize->20],
 Cell[BoxData[
  FormBox[
   RowBox[{"s_", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d570db1b-e5af-4d25-8a13-a48431faf98f"],
 StyleBox[" such that the limit goes to infinity for all ",
  FontSize->20],
 Cell[BoxData[
  FormBox["s", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "7f30f6bf-dcb1-4685-ba74-2349d678ed07"],
 StyleBox[" above ",
  FontSize->20],
 Cell[BoxData[
  FormBox[
   RowBox[{"s_", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "059210d8-b7f4-4b85-8325-be05566dd061"],
 StyleBox[" and the limit goes to ",
  FontSize->20],
 Cell[BoxData[
  FormBox["0", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "2c418906-dd33-4361-9b38-7bdb8d7fe80e"],
 StyleBox[" for all ",
  FontSize->20],
 Cell[BoxData[
  FormBox["s", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "baafb6d8-0b79-435b-b5cb-584091e72fa1"],
 StyleBox[" below ",
  FontSize->20],
 Cell[BoxData[
  FormBox[
   RowBox[{"s_", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "55b35135-4100-46fe-b5cc-59630483d085"],
 StyleBox[". If we write the sums as a function of s, we will get a graph \
like this:",
  FontSize->20]
}], "Text",
 CellChangeTimes->{{3.7705023237103643`*^9, 3.770502358274172*^9}, {
   3.770502414523829*^9, 3.77050256087994*^9}, {3.770502602829146*^9, 
   3.770502629024062*^9}, {3.770502661705296*^9, 3.7705027190606327`*^9}, {
   3.770502759463838*^9, 3.770502787631515*^9}, {3.7705028237197733`*^9, 
   3.770502827332326*^9}, {3.7705029843107157`*^9, 3.770502998719902*^9}, {
   3.770503052352889*^9, 3.770503063996566*^9}, {3.77050385576963*^9, 
   3.770503858085217*^9}, {3.770506427999888*^9, 3.770506439813778*^9}, {
   3.770506846855235*^9, 3.770506967164386*^9}, {3.770507026962428*^9, 
   3.770507085474902*^9}, {3.7705072937200003`*^9, 3.770507310310808*^9}, {
   3.7705082983181553`*^9, 3.7705082983275948`*^9}, 3.7705084450870113`*^9, {
   3.770565567828044*^9, 3.7705655678302298`*^9}, {3.770578703240984*^9, 
   3.770578978451519*^9}, {3.770579009402038*^9, 3.7705790566718884`*^9}, {
   3.7705795876485367`*^9, 3.770579591486557*^9}, {3.770579792700881*^9, 
   3.770580006099328*^9}, {3.7705801513281813`*^9, 3.7705803173151627`*^9}, {
   3.770580397415361*^9, 3.770580603090757*^9}, {3.770581052507943*^9, 
   3.770581376184901*^9}, {3.770582496370163*^9, 3.770582696671248*^9}, {
   3.7705827471436567`*^9, 3.770582770868236*^9}, {3.77058298033442*^9, 
   3.77058298111064*^9}, {3.770584652775227*^9, 3.770584657529216*^9}, {
   3.770599088904097*^9, 3.7705992401208267`*^9}, {3.770599663577538*^9, 
   3.770599693468565*^9}},ExpressionUUID->"6675bc88-6046-4670-80a9-\
0c8d4db52911"],

Cell[BoxData[
 RowBox[{"[", 
  RowBox[{"Graph", " ", "for", " ", "s"}], "]"}]], "Input",
 CellChangeTimes->{{3.7705996977706633`*^9, 
  3.770599702313603*^9}},ExpressionUUID->"4acee646-f559-4f5d-a3a2-\
85f6081c02a8"],

Cell[TextData[{
 StyleBox["We define the ",
  FontSize->20],
 StyleBox["Hausdorff dimension",
  FontSize->20,
  FontWeight->"Bold"],
 StyleBox[" of the curve to be this unique critical value. ",
  FontSize->20]
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.7705023237103643`*^9, 3.770502358274172*^9}, {
   3.770502414523829*^9, 3.77050256087994*^9}, {3.770502602829146*^9, 
   3.770502629024062*^9}, {3.770502661705296*^9, 3.7705027190606327`*^9}, {
   3.770502759463838*^9, 3.770502787631515*^9}, {3.7705028237197733`*^9, 
   3.770502827332326*^9}, {3.7705029843107157`*^9, 3.770502998719902*^9}, {
   3.770503052352889*^9, 3.770503063996566*^9}, {3.77050385576963*^9, 
   3.770503858085217*^9}, {3.770506427999888*^9, 3.770506439813778*^9}, {
   3.770506846855235*^9, 3.770506967164386*^9}, {3.770507026962428*^9, 
   3.770507085474902*^9}, {3.7705072937200003`*^9, 3.770507310310808*^9}, {
   3.7705082983181553`*^9, 3.7705082983275948`*^9}, 3.7705084450870113`*^9, {
   3.770565567828044*^9, 3.7705655678302298`*^9}, {3.770578703240984*^9, 
   3.770578978451519*^9}, {3.770579009402038*^9, 3.7705790566718884`*^9}, {
   3.7705795876485367`*^9, 3.770579591486557*^9}, {3.770579792700881*^9, 
   3.770580006099328*^9}, {3.7705801513281813`*^9, 3.7705803173151627`*^9}, {
   3.770580397415361*^9, 3.770580603090757*^9}, {3.770581052507943*^9, 
   3.770581376184901*^9}, {3.770582496370163*^9, 3.770582696671248*^9}, {
   3.7705827471436567`*^9, 3.770582770868236*^9}, {3.77058298033442*^9, 
   3.77058298111064*^9}, {3.770584652775227*^9, 3.770584657529216*^9}, {
   3.770599088904097*^9, 3.7705992401208267`*^9}, {3.770599663577538*^9, 
   3.770599743199641*^9}},ExpressionUUID->"a24fe610-dced-4df4-9691-\
3909ba209238"],

Cell[TextData[StyleBox["It' s easy to check that the Hausdorff dimension of \
line segments, squares, and cubes corresponds with our intuitive expectation \
for dimensions.",
 FontSize->20]], "Text",
 CellChangeTimes->{{3.770599723861195*^9, 
  3.7705997270752163`*^9}},ExpressionUUID->"2175e118-8c05-4ccf-b5b2-\
f4a315416781"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate Dimension of Snowflakes", "Section",
 CellChangeTimes->{{3.77059924627592*^9, 
  3.770599256893285*^9}},ExpressionUUID->"dd4247ce-3041-4c98-aa00-\
efde76f02bba"],

Cell[TextData[{
 StyleBox["Then does Hausdorff dimension exists for snowflake curves? If so, \
how can we compute it? ",
  FontSize->20],
 "\n",
 StyleBox["Spoiler alert!",
  FontSize->20,
  FontColor->RGBColor[1., 0.5000076295109483, 0.]],
 StyleBox[" I have learned in school that the snowflake curve has a dimension \
of ",
  FontSize->20],
 Cell[BoxData[
  FormBox[
   RowBox[{"log4", "/", "log3"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "7aecccb7-9acc-424a-89ef-2caf8cdf6718"],
 StyleBox[" . The proof has two directions and a lemma, taking up about half \
a page in total. It\[CloseCurlyQuote]s not long and there's nothing \
complicated, but it requires some human creativity to come up with the number \
",
  FontSize->20],
 Cell[BoxData[
  FormBox[
   RowBox[{"log4", "/", "log3"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "82664d84-e7c0-4e71-bd2b-348d1f91e47b"],
 StyleBox[" in the first place. \n\nWhat should we do if we want a more \
automated way to calculate it? It will cost too much human energy to come up \
with a clever construction for every single fractal out there in the world. \
As a stubborn student, I have my mind in calculating the dimension according \
to the definition. And here is how I do it:",
  FontSize->20]
}], "Text",
 CellChangeTimes->{{3.7705023237103643`*^9, 3.770502358274172*^9}, {
   3.770502414523829*^9, 3.77050256087994*^9}, {3.770502602829146*^9, 
   3.770502629024062*^9}, {3.770502661705296*^9, 3.7705027190606327`*^9}, {
   3.770502759463838*^9, 3.770502787631515*^9}, {3.7705028237197733`*^9, 
   3.770502827332326*^9}, {3.7705029843107157`*^9, 3.770502998719902*^9}, {
   3.770503052352889*^9, 3.770503063996566*^9}, {3.77050385576963*^9, 
   3.770503858085217*^9}, {3.770506427999888*^9, 3.770506439813778*^9}, {
   3.770506846855235*^9, 3.770506967164386*^9}, {3.770507026962428*^9, 
   3.770507085474902*^9}, {3.7705072937200003`*^9, 3.770507310310808*^9}, {
   3.7705082983181553`*^9, 3.7705082983275948`*^9}, 3.7705084450870113`*^9, {
   3.770565567828044*^9, 3.7705655678302298`*^9}, {3.770578703240984*^9, 
   3.770578978451519*^9}, {3.770579009402038*^9, 3.7705790566718884`*^9}, {
   3.7705795876485367`*^9, 3.770579591486557*^9}, {3.770579792700881*^9, 
   3.770580006099328*^9}, {3.7705801513281813`*^9, 3.7705803173151627`*^9}, {
   3.770580397415361*^9, 3.770580603090757*^9}, {3.770581052507943*^9, 
   3.770581376184901*^9}, {3.770582496370163*^9, 3.770582696671248*^9}, {
   3.7705827471436567`*^9, 3.770582770868236*^9}, {3.77058298033442*^9, 
   3.77058298111064*^9}, {3.770584652775227*^9, 3.770584657529216*^9}, {
   3.770599088904097*^9, 3.770599226684902*^9}, {3.770599259017013*^9, 
   3.770599299583395*^9}, {3.7705993944346333`*^9, 3.7705995233004093`*^9}, {
   3.770599556221793*^9, 3.77059956305529*^9}, 
   3.77059959772362*^9},ExpressionUUID->"437d39bf-760c-41b8-80d5-\
ccccbe188324"],

Cell[TextData[{
 StyleBox["I just generate",
  FontSize->20],
 StyleBox[" random covers",
  FontSize->20,
  FontWeight->"Bold"],
 StyleBox[" of the snowflake curve and check if the limits ",
  FontSize->20],
 StyleBox["converge to 0 or not",
  FontSize->20,
  FontWeight->"Bold"],
 StyleBox[".",
  FontSize->20]
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.7705023237103643`*^9, 3.770502358274172*^9}, {
   3.770502414523829*^9, 3.77050256087994*^9}, {3.770502602829146*^9, 
   3.770502629024062*^9}, {3.770502661705296*^9, 3.7705027190606327`*^9}, {
   3.770502759463838*^9, 3.770502787631515*^9}, {3.7705028237197733`*^9, 
   3.770502827332326*^9}, {3.7705029843107157`*^9, 3.770502998719902*^9}, {
   3.770503052352889*^9, 3.770503063996566*^9}, {3.77050385576963*^9, 
   3.770503858085217*^9}, {3.770506427999888*^9, 3.770506439813778*^9}, {
   3.770506846855235*^9, 3.770506967164386*^9}, {3.770507026962428*^9, 
   3.770507085474902*^9}, {3.7705072937200003`*^9, 3.770507310310808*^9}, {
   3.7705082983181553`*^9, 3.7705082983275948`*^9}, 3.7705084450870113`*^9, {
   3.770565567828044*^9, 3.7705655678302298`*^9}, {3.770578703240984*^9, 
   3.770578978451519*^9}, {3.770579009402038*^9, 3.7705790566718884`*^9}, {
   3.7705795876485367`*^9, 3.770579591486557*^9}, {3.770579792700881*^9, 
   3.770580006099328*^9}, {3.7705801513281813`*^9, 3.7705803173151627`*^9}, {
   3.770580397415361*^9, 3.770580603090757*^9}, {3.770581052507943*^9, 
   3.770581376184901*^9}, {3.770582496370163*^9, 3.770582696671248*^9}, {
   3.7705827471436567`*^9, 3.770582770868236*^9}, {3.77058298033442*^9, 
   3.77058298111064*^9}, {3.770584652775227*^9, 3.770584657529216*^9}, {
   3.770599088904097*^9, 3.770599226684902*^9}, {3.770599259017013*^9, 
   3.770599299583395*^9}, {3.7705993944346333`*^9, 3.7705995233004093`*^9}, {
   3.770599556221793*^9, 3.77059956305529*^9}, {3.770599612623427*^9, 
   3.770599628691934*^9}},ExpressionUUID->"4e4f0e2c-f31d-4f35-8626-\
911e91b5fb14"],

Cell[TextData[{
 StyleBox["Here is a brief account of the algorithm:\n",
  FontSize->20],
 StyleBox["Variables to keep track of : ",
  FontSize->20,
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["\n\tregion that has already been covered (union of all circles \
that has been selected)\n\tnumber of failed attempts to select balls\n\t\
number of balls selected\n",
  FontSize->20],
 StyleBox["Initial state:",
  FontSize->20,
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["\n\tregion covered = empty\n\tnumber of failed attempts = 0\n\t\
number of balls = 0\n",
  FontSize->20],
 StyleBox["Iterations:",
  FontSize->20,
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["\n\tif the number of failed attempts is large, we terminate and \
return the number of balls\n\telse we fix a random point on the curve:\n\t\t\
if the point has already been covered\n\t\t\tincrement the number of failed \
attempts by 1 and restart the iteration\n\t\telse we set the number of failed \
attempts to 0, add a ball centered at this random point, and restart \
iteration",
  FontSize->20]
}], "Text",
 CellChangeTimes->{{3.770599614973549*^9, 3.7705996231406937`*^9}, 
   3.7705997924543552`*^9, {3.770603460635128*^9, 
   3.770603772147531*^9}},ExpressionUUID->"542a72a8-ac2a-48f8-8b5b-\
37e668d5c994"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find a random cover", "Section",
 CellChangeTimes->{{3.770599801066359*^9, 
  3.770599869699586*^9}},ExpressionUUID->"216317f7-6842-49c6-96e2-\
d70c9aa5a35f"],

Cell[TextData[StyleBox["I will now walk through an example to show how to \
find random covers of the curve. Balls in each random cover share a fixed \
radius. For ease of computation, I set the radius to be 1/15 in my example.",
 FontSize->20]], "Text",
 CellChangeTimes->{{3.770599614973549*^9, 3.7705996231406937`*^9}, 
   3.770599814442864*^9, {3.770600442052289*^9, 3.770600781733531*^9}, 
   3.770600815261627*^9, {3.770600892142777*^9, 
   3.770600965198688*^9}},ExpressionUUID->"c0ccdc36-c2a4-4a2b-997c-\
b3a85f0f917e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"radius", " ", "=", " ", 
   RowBox[{"1", "/", "15"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.770584611260139*^9, 3.770584620020256*^9}, 
   3.770601372754377*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"4e621b62-fd3b-4cc2-bb7c-6bf06f36e414"],

Cell[TextData[StyleBox["Then since the radius is 1/15, it is sufficient to \
work with a snowflake curve of order 4. ",
 FontSize->20]], "Text",
 CellChangeTimes->{{3.770600783617547*^9, 
  3.770600813022758*^9}},ExpressionUUID->"49af0f6b-d5a1-40d1-afdb-\
f604f372c223"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"order", " ", "=", " ", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"curve", " ", "=", " ", 
      RowBox[{"KochCurve", "[", "order", "]"}]}], ")"}], " ", "//", " ", 
    "Graphics"}], ",", " ", 
   RowBox[{
    RowBox[{"Circle", "[", 
     RowBox[{
      InterpretationBox[
       DynamicModuleBox[{Typeset`open = False}, 
        TemplateBox[{"List","ListIcon",GridBox[{{
             RowBox[{
               TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
               TagBox["List", "IconizedItem"]}]}, {
             RowBox[{
               TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
               TagBox["2", "IconizedItem"]}]}, {
             RowBox[{
               TagBox["\"Byte count: \"", "IconizedLabel"], 
               "\[InvisibleSpace]", 
               TagBox["88", "IconizedItem"]}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
          Typeset`open]},
         "IconizedObject"]],
       {0.5, 0.2886751345948129},
       SelectWithContents->True,
       Selectable->False], ",", 
      RowBox[{"1", "/", "15"}]}], "]"}], " ", "//", " ", "Graphics"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.770584627772292*^9, 3.7705846300396767`*^9}, {
   3.770600396849106*^9, 3.7706003971646423`*^9}, {3.770600714650071*^9, 
   3.7706007149203873`*^9}, 3.770601369674047*^9, {3.770601452374928*^9, 
   3.7706014525381813`*^9}, {3.770601520121066*^9, 3.770601528546139*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"510e6629-ced2-4c8b-956b-27791c179ebe"],

Cell[BoxData[
 GraphicsBox[{LineBox[CompressedData["
1:eJxdVg9I3VUUdgWOoDVZIKyJ1iLbqAhWA4O5a5YgLJBGusWG0UhYLbYZCzaE
kdvEshht7FG5GCqZuGY513K1dM90s57m/J+brqnPpz7/vEkjLWjQ+91zvu/H
7/148Pj47jn3nHO/e859bNe+rQX3xcXFLVsWF+f8x36j4cH/6rM/MsC7n61s
OrZ40myeOjt6NFRihP8ihq8i/urBTbfKU77mevCCfWpfS5zUXhj9nTP7nvlg
eu27FWa7dfCdMcqLfQPXB/x9df++ed5kePw3xOz/A3Fm0QPzT3zfGBP/j+ST
7f4/E/+00Ty9Nb7ZpOv6JOWxv8R3RXmfse4/85u9nviv6PrqGPtqA/8PVQ4M
TeR/Q17yr6c9MPznlfne6lt3QfNv0f3qNf9fiBsnS7MC/lauBy/7XzTxZ/b+
vvLjNuJc+101T77s3/l81SUj9btGXurXTny3dW3BaPia2ab+wSNeqe9vxHb7
VQGuP2wTDJCX/DuJo8GdKq7pMCs99elUPVTTPkMx/O/X+nt5H+2B4R/6SVbe
e/5dxLb83V3Uj5zPdfJyPt3Ejxc4FejmevAvevTbQz29ZwPsof5XH3Qi6I3R
f6/ZpLjFMT/RG6P/Xu4v599HnG8PqJ/xyPn3k8+z5z9AfK8+OxrCAPWfqzzq
J/oYpP5fsQEMUv/goXfYpyuGf+gfPM4f9sDwDz2L/gapd9HfH8QzjvxWD3E9
eOj3xIaFA3sODxG/cDyYdjw4RP2Dl/gu0x4Y/hfvzbzmW9NMXuL1Mz5gxI/1
3vz8Mfn7WZ/gcFlqUaCFvNyfVtoDw39HWkXVU6Vt5EU/V2kPDP8XfBeTR15q
Jy/5/0p7YPg//Veg/JO4APMDj/yBUR+sBy/3uSOmvh2s/5Gc0cT0pk7tHzfI
y/2+Sfyho+66G6Zc/YNP1f3l/rs4NXr58jOHuV7u/zB5uf8jjL/NpjfC9UnK
Y/89sgHxwze3RCt0i/GDl/Puoj0w/L9z7u+T84euk5fz76Y98Cr1X3usZHnO
mh6dH3+Sl/bi4vPO8W68zfXgRU892r9uE+vUNynPfZpVc6jX9DvtZcMoeelf
Lq7ZYRVA/+Cxv/Q/Fy/aBMa4XvrfGHnpfy627enUGOsDfknr16H2wEvq/6jW
Hzz0Bntg+Ic+C5XH+T9i++84ccQpX/64+VLXS/91+betAF2cHr09ieuD9A8e
+yc48tsRJJ5IsxeA8V+y/dvl37AXaIJ6s+Z3g9QneOh5uU3QxVY+TRNc/61z
vAsuv83e/xDjP2IPOGQatD/kKb9Z+wfs0U/gH/0HPPpTrtrnKS5W/+Oe/hbS
/u2nPfoh/C9p/4zX/MAj//2KUZ9/dL23fpf1fRQ0CYqDWv912v/BZ+h8yFd7
o7hM/W/X+ZLv2b+e8QEj/td1fZ3mBx75A6M+CZ75GDKZOj9RH7x/4B/vHy/v
oz3mNfzj/YDz9c5/F3fbBEMmW9fLfJgkL/PBxY8mrr8/p3FS3zslBjzeOzI/
Jvkesu0vacoUavynUxwHU5qvT+fHFO3t9S0GX0Ie+8v8mSZudqbDlmnGL/PH
5WX+uHiFk15imO8l8Hh/yXwKMx47XorCfL95+Wra4/0K/yv0fMHj/QJ7YPjP
Vf3I/AvHvK9niJ3il2bN8L0NHu8dW56DM9Rz7Vnnm+H7R8aPy9v2lzlL/KoV
+Cz1Dx76lfnq4go7nmep/wN2wM2Rl/nnYju+zBz1Dx76f1/tof9K9Q/9e3kf
7aF/+Pe+/+d4/jKfXfy5XADqR+bzPHmZ/y6ess/veeofPPQi8ztC/dvjT4tQ
/7usQCPUv8zvCO2t+ZkI9Q8e+8v8v0Ns5b/7DuOX+e/y8i0Q/w8RsM7w
    "]], 
   CircleBox[{0.5, 0.2886751345948129}, NCache[
    Rational[1, 15], 0.06666666666666667]]}]], "Output",
 CellChangeTimes->{3.770601529515049*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"187ca0b6-5145-4325-a5bc-26bc5f9c0a37"]
}, Open  ]],

Cell[TextData[StyleBox["In order 4, the length of each segment is 1/3^4, much \
smaller than the radius. In this way, we can view the snowflake curve as \
approximately a perfect one. From the image above, we can see that smaller \
spikes are negligible for a ball of radius 1/15.\n\nFor each selection of \
random point on the curve, we need to check if the point has already been \
covered by previous balls. Let region be the union of all previous balls, and \
we initiate region to be a small ball on the left most of the graph:",
 FontSize->20]], "Text",
 CellChangeTimes->{{3.770600809414317*^9, 3.7706008112713823`*^9}, {
   3.770600986527529*^9, 3.7706010869788857`*^9}, {3.7706012102846413`*^9, 
   3.770601295209876*^9}, 
   3.77060155267734*^9},ExpressionUUID->"5a902480-6d3a-48d0-85e8-\
a064023024d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"regionCovered", " ", "=", " ", 
  RowBox[{"Ball", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"1", "/", "300"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770503862584976*^9, 3.770503866783132*^9}, {
   3.770503968430129*^9, 3.77050396991113*^9}, {3.7705043861278276`*^9, 
   3.770504386317273*^9}, {3.770506672803088*^9, 3.770506686269899*^9}, 
   3.7705067565210114`*^9, {3.7705072830805273`*^9, 3.770507289398746*^9}, {
   3.770507691467577*^9, 3.770507700727792*^9}, {3.7705077332681503`*^9, 
   3.7705077507152348`*^9}, {3.770507915028698*^9, 3.770508004568223*^9}, {
   3.770508073525242*^9, 3.770508075524507*^9}, 3.7705082983338327`*^9, {
   3.770508372298121*^9, 3.770508372841051*^9}, {3.770508495592383*^9, 
   3.770508503689316*^9}, {3.770568425586301*^9, 3.770568443495028*^9}, {
   3.7705829462273197`*^9, 3.770582946741996*^9}, {3.770583130000266*^9, 
   3.7705831301786633`*^9}, {3.770583162025333*^9, 3.770583163573669*^9}, {
   3.770584606280672*^9, 3.770584633589704*^9}, 3.770586359093173*^9, {
   3.770602275275559*^9, 3.7706022764873657`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"7c40a594-df87-4f58-995d-fbe738a65bd3"],

Cell[BoxData[
 RowBox[{"Ball", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   FractionBox["1", "300"]}], "]"}]], "Output",
 CellChangeTimes->{3.770602286927412*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"1d1c1c0d-9edf-4105-a2f3-9ee525d64822"]
}, Open  ]],

Cell[TextData[StyleBox["Since the initial region is much smaller than the \
balls we are going to select, we can view this region as empty.",
 FontSize->20]], "Text",
 CellChangeTimes->{{3.7706010958728037`*^9, 
  3.770601129193556*^9}},ExpressionUUID->"c58f2b1b-7d30-4f46-9451-\
ad331163ab36"],

Cell[CellGroupData[{

Cell["Step 1: Find a random point on the curve", "Subsection",
 CellChangeTimes->{{3.7705999837781563`*^9, 3.7706000212636337`*^9}, {
  3.770602361502511*^9, 
  3.77060236595887*^9}},ExpressionUUID->"f56a6bb6-396b-4392-9679-\
b4200c592856"],

Cell[TextData[StyleBox["Since each line segment in the curve is of equal \
length, to randomly select a point from the entire curve, we can randomly \
select a segment first. In order 4, there are a total of 4^n segments. Thus, \
the index of the segment can be selected as",
 FontSize->20]], "Text",
 CellChangeTimes->{{3.770503327770939*^9, 3.770503451296012*^9}, {
   3.770565567836269*^9, 3.770565567838434*^9}, 3.770583030581715*^9, {
   3.770601591201684*^9, 3.7706016021869307`*^9}, {3.77060166010233*^9, 
   3.770601699366678*^9}},ExpressionUUID->"3e2fcc86-24d7-4c84-8962-\
12e06228c0c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomSegmentIndex", " ", "=", " ", 
  RowBox[{"RandomSample", "[", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"4", "^", "order"}]}], "]"}], ",", "1"}], "]"}]}]], "Code",
 CellChangeTimes->{
  3.770560871434544*^9, 3.770560940074223*^9, {3.770583060305965*^9, 
   3.7705830604981947`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"e3b585c6-610a-4b26-8fcd-cac03751144b"],

Cell[BoxData[
 RowBox[{"{", "232", "}"}]], "Output",
 CellChangeTimes->{{3.77056847203566*^9, 3.770568476339571*^9}, 
   3.770583067552937*^9, 3.770583137496235*^9, 3.770583173568132*^9, {
   3.770583253271432*^9, 3.770583264808144*^9}, {3.770583307438682*^9, 
   3.770583322221636*^9}, 3.770601725106213*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"a28a6222-ad97-4a62-b474-f5fa6d7c8e47"]
}, Open  ]],

Cell[TextData[StyleBox["We now have the following segment (Can you see the \
short segment marked by red?):",
 FontSize->20]], "Text",
 CellChangeTimes->{{3.77060163306118*^9, 3.770601646434552*^9}, {
  3.770601704944461*^9, 3.770601714630372*^9}, {3.770601765261166*^9, 
  3.77060177708844*^9}, {3.770601813761051*^9, 
  3.770601814049645*^9}},ExpressionUUID->"452365aa-44c4-44ee-ba5a-\
ff7cb8f13009"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vertices", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"List", " ", "@@", " ", "curve"}], ",", "1"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"startPoint", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
    "vertices", "\[LeftDoubleBracket]", "randomSegmentIndex", 
     "\[RightDoubleBracket]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endPoint", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"vertices", "\[LeftDoubleBracket]", 
     RowBox[{"randomSegmentIndex", "+", "1"}], "\[RightDoubleBracket]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", "curve", "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{"startPoint", ",", "endPoint"}], "}"}], "]"}], ",", " ", 
      "Red", ",", "Thick"}], "]"}], "]"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.770504427407155*^9, 3.770504427894533*^9}, {
   3.770504478658943*^9, 3.770504503636664*^9}, {3.7705045514322157`*^9, 
   3.7705045596791897`*^9}, {3.770504639276249*^9, 3.770504667395615*^9}, {
   3.770583053424055*^9, 3.770583057240623*^9}, {3.770583287241116*^9, 
   3.770583316001871*^9}, 3.770601337354899*^9, {3.770601735083766*^9, 
   3.7706017526772633`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"9e6337b3-e40d-4d7c-b9c2-eb5e14550c58"],

Cell[BoxData[
 GraphicsBox[{LineBox[CompressedData["
1:eJxdVg9I3VUUdgWOoDVZIKyJ1iLbqAhWA4O5a5YgLJBGusWG0UhYLbYZCzaE
kdvEshht7FG5GCqZuGY513K1dM90s57m/J+brqnPpz7/vEkjLWjQ+91zvu/H
7/148Pj47jn3nHO/e859bNe+rQX3xcXFLVsWF+f8x36j4cH/6rM/MsC7n61s
OrZ40myeOjt6NFRihP8ihq8i/urBTbfKU77mevCCfWpfS5zUXhj9nTP7nvlg
eu27FWa7dfCdMcqLfQPXB/x9df++ed5kePw3xOz/A3Fm0QPzT3zfGBP/j+ST
7f4/E/+00Ty9Nb7ZpOv6JOWxv8R3RXmfse4/85u9nviv6PrqGPtqA/8PVQ4M
TeR/Q17yr6c9MPznlfne6lt3QfNv0f3qNf9fiBsnS7MC/lauBy/7XzTxZ/b+
vvLjNuJc+101T77s3/l81SUj9btGXurXTny3dW3BaPia2ab+wSNeqe9vxHb7
VQGuP2wTDJCX/DuJo8GdKq7pMCs99elUPVTTPkMx/O/X+nt5H+2B4R/6SVbe
e/5dxLb83V3Uj5zPdfJyPt3Ejxc4FejmevAvevTbQz29ZwPsof5XH3Qi6I3R
f6/ZpLjFMT/RG6P/Xu4v599HnG8PqJ/xyPn3k8+z5z9AfK8+OxrCAPWfqzzq
J/oYpP5fsQEMUv/goXfYpyuGf+gfPM4f9sDwDz2L/gapd9HfH8QzjvxWD3E9
eOj3xIaFA3sODxG/cDyYdjw4RP2Dl/gu0x4Y/hfvzbzmW9NMXuL1Mz5gxI/1
3vz8Mfn7WZ/gcFlqUaCFvNyfVtoDw39HWkXVU6Vt5EU/V2kPDP8XfBeTR15q
Jy/5/0p7YPg//Veg/JO4APMDj/yBUR+sBy/3uSOmvh2s/5Gc0cT0pk7tHzfI
y/2+Sfyho+66G6Zc/YNP1f3l/rs4NXr58jOHuV7u/zB5uf8jjL/NpjfC9UnK
Y/89sgHxwze3RCt0i/GDl/Puoj0w/L9z7u+T84euk5fz76Y98Cr1X3usZHnO
mh6dH3+Sl/bi4vPO8W68zfXgRU892r9uE+vUNynPfZpVc6jX9DvtZcMoeelf
Lq7ZYRVA/+Cxv/Q/Fy/aBMa4XvrfGHnpfy627enUGOsDfknr16H2wEvq/6jW
Hzz0Bntg+Ic+C5XH+T9i++84ccQpX/64+VLXS/91+betAF2cHr09ieuD9A8e
+yc48tsRJJ5IsxeA8V+y/dvl37AXaIJ6s+Z3g9QneOh5uU3QxVY+TRNc/61z
vAsuv83e/xDjP2IPOGQatD/kKb9Z+wfs0U/gH/0HPPpTrtrnKS5W/+Oe/hbS
/u2nPfoh/C9p/4zX/MAj//2KUZ9/dL23fpf1fRQ0CYqDWv912v/BZ+h8yFd7
o7hM/W/X+ZLv2b+e8QEj/td1fZ3mBx75A6M+CZ75GDKZOj9RH7x/4B/vHy/v
oz3mNfzj/YDz9c5/F3fbBEMmW9fLfJgkL/PBxY8mrr8/p3FS3zslBjzeOzI/
Jvkesu0vacoUavynUxwHU5qvT+fHFO3t9S0GX0Ie+8v8mSZudqbDlmnGL/PH
5WX+uHiFk15imO8l8Hh/yXwKMx47XorCfL95+Wra4/0K/yv0fMHj/QJ7YPjP
Vf3I/AvHvK9niJ3il2bN8L0NHu8dW56DM9Rz7Vnnm+H7R8aPy9v2lzlL/KoV
+Cz1Dx76lfnq4go7nmep/wN2wM2Rl/nnYju+zBz1Dx76f1/tof9K9Q/9e3kf
7aF/+Pe+/+d4/jKfXfy5XADqR+bzPHmZ/y6ess/veeofPPQi8ztC/dvjT4tQ
/7usQCPUv8zvCO2t+ZkI9Q8e+8v8v0Ns5b/7DuOX+e/y8i0Q/w8RsM7w
    "]], 
   {RGBColor[1, 0, 0], Thickness[Large], 
    LineBox[{{0.8765432098765431, 0.06415002990995844}, {0.8888888888888888, 
     0.06415002990995844}}]}}]], "Output",
 CellChangeTimes->{
  3.7705684784595213`*^9, 3.770583065272214*^9, 3.77058313914706*^9, 
   3.7705831750988493`*^9, 3.77058323870758*^9, {3.770583284131673*^9, 
   3.770583323669181*^9}, 3.770601348955703*^9, {3.770601732368918*^9, 
   3.770601753537101*^9}},
 CellLabel->"Out[30]=",ExpressionUUID->"c89c2514-c31a-4475-999b-e2f307e0020e"]
}, Open  ]],

Cell[TextData[StyleBox["Now we should randomly select a point on the segment \
(Can you see the block dot on the red segment?):",
 FontSize->20]], "Text",
 CellChangeTimes->{{3.77050720935026*^9, 3.7705072271732397`*^9}, {
   3.7705655678436537`*^9, 3.770565567845765*^9}, 3.770583335783463*^9, {
   3.770601782699148*^9, 3.7706017864932823`*^9}, {3.770601818236109*^9, 
   3.7706018305394*^9}},ExpressionUUID->"dd4133e0-1377-4b9f-996d-\
e2f6536fd6fa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"randomLocationOnSegment", " ", "=", " ", 
   RowBox[{"RandomReal", "[", "]"}]}], ";"}], "\n", 
 RowBox[{"randomCenter", " ", "=", " ", 
  RowBox[{
   RowBox[{"startPoint", "*", "randomLocationOnSegment"}], " ", "+", 
   RowBox[{"endPoint", " ", "*", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "randomLocationOnSegment"}], 
     ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", "curve", "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{"startPoint", ",", "endPoint"}], "}"}], "]"}], ",", " ", 
      "Red", ",", "Thick"}], "]"}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
      RowBox[{"Point", "[", "randomCenter", "]"}]}], "}"}], "]"}]}], 
  "]"}]}], "Code",
 CellChangeTimes->{{3.7705043222212276`*^9, 3.7705043420208178`*^9}, {
  3.770504690894409*^9, 3.770504712440659*^9}, {3.7705048828254232`*^9, 
  3.770504887906377*^9}, {3.770506190054256*^9, 3.7705062114522667`*^9}, {
  3.77050624953283*^9, 3.770506337935314*^9}, {3.77060179618265*^9, 
  3.770601800770494*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"b248dd0d-7795-4a36-b2b3-2680d4f030e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8871750063261553`", ",", "0.06415002990995844`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.770568504651272*^9, 3.7705833496038303`*^9, 
  3.770601845102103*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"23746519-e6b9-47b2-992b-8ba8240a5275"],

Cell[BoxData[
 GraphicsBox[{LineBox[CompressedData["
1:eJxdVg9I3VUUdgWOoDVZIKyJ1iLbqAhWA4O5a5YgLJBGusWG0UhYLbYZCzaE
kdvEshht7FG5GCqZuGY513K1dM90s57m/J+brqnPpz7/vEkjLWjQ+91zvu/H
7/148Pj47jn3nHO/e859bNe+rQX3xcXFLVsWF+f8x36j4cH/6rM/MsC7n61s
OrZ40myeOjt6NFRihP8ihq8i/urBTbfKU77mevCCfWpfS5zUXhj9nTP7nvlg
eu27FWa7dfCdMcqLfQPXB/x9df++ed5kePw3xOz/A3Fm0QPzT3zfGBP/j+ST
7f4/E/+00Ty9Nb7ZpOv6JOWxv8R3RXmfse4/85u9nviv6PrqGPtqA/8PVQ4M
TeR/Q17yr6c9MPznlfne6lt3QfNv0f3qNf9fiBsnS7MC/lauBy/7XzTxZ/b+
vvLjNuJc+101T77s3/l81SUj9btGXurXTny3dW3BaPia2ab+wSNeqe9vxHb7
VQGuP2wTDJCX/DuJo8GdKq7pMCs99elUPVTTPkMx/O/X+nt5H+2B4R/6SVbe
e/5dxLb83V3Uj5zPdfJyPt3Ejxc4FejmevAvevTbQz29ZwPsof5XH3Qi6I3R
f6/ZpLjFMT/RG6P/Xu4v599HnG8PqJ/xyPn3k8+z5z9AfK8+OxrCAPWfqzzq
J/oYpP5fsQEMUv/goXfYpyuGf+gfPM4f9sDwDz2L/gapd9HfH8QzjvxWD3E9
eOj3xIaFA3sODxG/cDyYdjw4RP2Dl/gu0x4Y/hfvzbzmW9NMXuL1Mz5gxI/1
3vz8Mfn7WZ/gcFlqUaCFvNyfVtoDw39HWkXVU6Vt5EU/V2kPDP8XfBeTR15q
Jy/5/0p7YPg//Veg/JO4APMDj/yBUR+sBy/3uSOmvh2s/5Gc0cT0pk7tHzfI
y/2+Sfyho+66G6Zc/YNP1f3l/rs4NXr58jOHuV7u/zB5uf8jjL/NpjfC9UnK
Y/89sgHxwze3RCt0i/GDl/Puoj0w/L9z7u+T84euk5fz76Y98Cr1X3usZHnO
mh6dH3+Sl/bi4vPO8W68zfXgRU892r9uE+vUNynPfZpVc6jX9DvtZcMoeelf
Lq7ZYRVA/+Cxv/Q/Fy/aBMa4XvrfGHnpfy627enUGOsDfknr16H2wEvq/6jW
Hzz0Bntg+Ic+C5XH+T9i++84ccQpX/64+VLXS/91+betAF2cHr09ieuD9A8e
+yc48tsRJJ5IsxeA8V+y/dvl37AXaIJ6s+Z3g9QneOh5uU3QxVY+TRNc/61z
vAsuv83e/xDjP2IPOGQatD/kKb9Z+wfs0U/gH/0HPPpTrtrnKS5W/+Oe/hbS
/u2nPfoh/C9p/4zX/MAj//2KUZ9/dL23fpf1fRQ0CYqDWv912v/BZ+h8yFd7
o7hM/W/X+ZLv2b+e8QEj/td1fZ3mBx75A6M+CZ75GDKZOj9RH7x/4B/vHy/v
oz3mNfzj/YDz9c5/F3fbBEMmW9fLfJgkL/PBxY8mrr8/p3FS3zslBjzeOzI/
Jvkesu0vacoUavynUxwHU5qvT+fHFO3t9S0GX0Ie+8v8mSZudqbDlmnGL/PH
5WX+uHiFk15imO8l8Hh/yXwKMx47XorCfL95+Wra4/0K/yv0fMHj/QJ7YPjP
Vf3I/AvHvK9niJ3il2bN8L0NHu8dW56DM9Rz7Vnnm+H7R8aPy9v2lzlL/KoV
+Cz1Dx76lfnq4go7nmep/wN2wM2Rl/nnYju+zBz1Dx76f1/tof9K9Q/9e3kf
7aF/+Pe+/+d4/jKfXfy5XADqR+bzPHmZ/y6ess/veeofPPQi8ztC/dvjT4tQ
/7usQCPUv8zvCO2t+ZkI9Q8e+8v8v0Ns5b/7DuOX+e/y8i0Q/w8RsM7w
    "]], 
   {RGBColor[1, 0, 0], Thickness[Large], 
    LineBox[{{0.8765432098765431, 0.06415002990995844}, {0.8888888888888888, 
     0.06415002990995844}}]}, 
   {PointSize[Medium], 
    PointBox[{0.8871750063261553, 0.06415002990995844}]}}]], "Output",
 CellChangeTimes->{3.770568504651272*^9, 3.7705833496038303`*^9, 
  3.770601845103673*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"a9644866-7a8b-4029-9844-bf716d238ea4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 2: Check if the point has already been covered", "Subsection",
 CellChangeTimes->{{3.770600035366539*^9, 3.7706000441301126`*^9}, {
  3.770602375021913*^9, 
  3.770602378983111*^9}},ExpressionUUID->"9535214f-2c09-41fc-8afe-\
f57e60189794"],

Cell[TextData[StyleBox["On this first iteration of the loop, the region that \
has been covered is empty, so the point has not been covered for sure:",
 FontSize->20]], "Text",
 CellChangeTimes->{{3.770507544722492*^9, 3.7705075620162983`*^9}, {
   3.77056556784857*^9, 3.770565567850738*^9}, 3.7705833718038607`*^9, {
   3.77058340838365*^9, 3.7705834094809637`*^9}, {3.77060185689705*^9, 
   3.770601927237069*^9}},ExpressionUUID->"7687a6ee-0f16-4f47-bb0f-\
edf361283ff8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionMember", "[", 
  RowBox[{"regionCovered", ",", "randomCenter"}], "]"}]], "Code",
 CellChangeTimes->{{3.7705075708868713`*^9, 3.7705075847318363`*^9}, {
  3.7706022669466257`*^9, 3.770602268021193*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"940321c3-980a-4e2e-b14c-d1538f60df3b"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.7705685210687847`*^9, 3.7706022986432047`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"39e07d31-c97b-4285-83c9-20b1ed950cbe"]
}, Open  ]],

Cell[TextData[StyleBox["For later iterations, if the above test returns true, \
it means that the point we selected has been covered. Then we will go back, \
select a second random point, and test if the newly selected one pass the \
test. If we fail the test consecutively for a large number of times, there is \
a large chance that the curve has been covered almost everywhere. In this \
case, we will terminate the iteration and return the cover we\
\[CloseCurlyQuote]ve found.\n\nSince we have passed the test in the current \
iteration, we will just add our newly found ball to regionCovered and go back \
to step 1.",
 FontSize->20]], "Text",
 CellChangeTimes->{{3.7705072353308992`*^9, 3.770507274563959*^9}, {
   3.770507485798234*^9, 3.770507495937402*^9}, {3.7705075323698807`*^9, 
   3.770507567050551*^9}, {3.770507768804625*^9, 3.770507809279057*^9}, 
   3.770508298349485*^9, {3.770565567852529*^9, 3.7705655678545837`*^9}, {
   3.770583395067219*^9, 3.770583442454399*^9}, {3.770601936792103*^9, 
   3.7706022560845737`*^9}, {3.770602306107914*^9, 3.770602319431343*^9}, {
   3.770602459903919*^9, 
   3.770602497007017*^9}},ExpressionUUID->"a8498689-d513-4d0e-944b-\
7ff03c762deb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"regionCovered", " ", "=", " ", 
   RowBox[{"RegionUnion", "[", 
    RowBox[{"region", ",", 
     RowBox[{"Ball", "[", 
      RowBox[{"randomCenter", ",", "radius"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", "curve", "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{"startPoint", ",", "endPoint"}], "}"}], "]"}], ",", " ", 
      "Red", ",", "Thick"}], "]"}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
      RowBox[{"Point", "[", "randomCenter", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Circle", "[", 
     RowBox[{"randomCenter", ",", "radius"}], "]"}], "]"}]}], "]"}]}], "Code",\

 CellChangeTimes->{{3.770506732665243*^9, 3.77050674897946*^9}, 
   3.770508298356913*^9, {3.7705083439143248`*^9, 3.770508344777301*^9}, {
   3.770602403251581*^9, 3.7706024053510838`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"9997a255-d671-4804-ba75-59e9ea4a9516"],

Cell[BoxData[
 GraphicsBox[{LineBox[CompressedData["
1:eJxdVg9I3VUUdgWOoDVZIKyJ1iLbqAhWA4O5a5YgLJBGusWG0UhYLbYZCzaE
kdvEshht7FG5GCqZuGY513K1dM90s57m/J+brqnPpz7/vEkjLWjQ+91zvu/H
7/148Pj47jn3nHO/e859bNe+rQX3xcXFLVsWF+f8x36j4cH/6rM/MsC7n61s
OrZ40myeOjt6NFRihP8ihq8i/urBTbfKU77mevCCfWpfS5zUXhj9nTP7nvlg
eu27FWa7dfCdMcqLfQPXB/x9df++ed5kePw3xOz/A3Fm0QPzT3zfGBP/j+ST
7f4/E/+00Ty9Nb7ZpOv6JOWxv8R3RXmfse4/85u9nviv6PrqGPtqA/8PVQ4M
TeR/Q17yr6c9MPznlfne6lt3QfNv0f3qNf9fiBsnS7MC/lauBy/7XzTxZ/b+
vvLjNuJc+101T77s3/l81SUj9btGXurXTny3dW3BaPia2ab+wSNeqe9vxHb7
VQGuP2wTDJCX/DuJo8GdKq7pMCs99elUPVTTPkMx/O/X+nt5H+2B4R/6SVbe
e/5dxLb83V3Uj5zPdfJyPt3Ejxc4FejmevAvevTbQz29ZwPsof5XH3Qi6I3R
f6/ZpLjFMT/RG6P/Xu4v599HnG8PqJ/xyPn3k8+z5z9AfK8+OxrCAPWfqzzq
J/oYpP5fsQEMUv/goXfYpyuGf+gfPM4f9sDwDz2L/gapd9HfH8QzjvxWD3E9
eOj3xIaFA3sODxG/cDyYdjw4RP2Dl/gu0x4Y/hfvzbzmW9NMXuL1Mz5gxI/1
3vz8Mfn7WZ/gcFlqUaCFvNyfVtoDw39HWkXVU6Vt5EU/V2kPDP8XfBeTR15q
Jy/5/0p7YPg//Veg/JO4APMDj/yBUR+sBy/3uSOmvh2s/5Gc0cT0pk7tHzfI
y/2+Sfyho+66G6Zc/YNP1f3l/rs4NXr58jOHuV7u/zB5uf8jjL/NpjfC9UnK
Y/89sgHxwze3RCt0i/GDl/Puoj0w/L9z7u+T84euk5fz76Y98Cr1X3usZHnO
mh6dH3+Sl/bi4vPO8W68zfXgRU892r9uE+vUNynPfZpVc6jX9DvtZcMoeelf
Lq7ZYRVA/+Cxv/Q/Fy/aBMa4XvrfGHnpfy627enUGOsDfknr16H2wEvq/6jW
Hzz0Bntg+Ic+C5XH+T9i++84ccQpX/64+VLXS/91+betAF2cHr09ieuD9A8e
+yc48tsRJJ5IsxeA8V+y/dvl37AXaIJ6s+Z3g9QneOh5uU3QxVY+TRNc/61z
vAsuv83e/xDjP2IPOGQatD/kKb9Z+wfs0U/gH/0HPPpTrtrnKS5W/+Oe/hbS
/u2nPfoh/C9p/4zX/MAj//2KUZ9/dL23fpf1fRQ0CYqDWv912v/BZ+h8yFd7
o7hM/W/X+ZLv2b+e8QEj/td1fZ3mBx75A6M+CZ75GDKZOj9RH7x/4B/vHy/v
oz3mNfzj/YDz9c5/F3fbBEMmW9fLfJgkL/PBxY8mrr8/p3FS3zslBjzeOzI/
Jvkesu0vacoUavynUxwHU5qvT+fHFO3t9S0GX0Ie+8v8mSZudqbDlmnGL/PH
5WX+uHiFk15imO8l8Hh/yXwKMx47XorCfL95+Wra4/0K/yv0fMHj/QJ7YPjP
Vf3I/AvHvK9niJ3il2bN8L0NHu8dW56DM9Rz7Vnnm+H7R8aPy9v2lzlL/KoV
+Cz1Dx76lfnq4go7nmep/wN2wM2Rl/nnYju+zBz1Dx76f1/tof9K9Q/9e3kf
7aF/+Pe+/+d4/jKfXfy5XADqR+bzPHmZ/y6ess/veeofPPQi8ztC/dvjT4tQ
/7usQCPUv8zvCO2t+ZkI9Q8e+8v8v0Ns5b/7DuOX+e/y8i0Q/w8RsM7w
    "]], 
   {RGBColor[1, 0, 0], Thickness[Large], 
    LineBox[{{0.8765432098765431, 0.06415002990995844}, {0.8888888888888888, 
     0.06415002990995844}}]}, 
   {PointSize[Medium], PointBox[{0.8871750063261553, 0.06415002990995844}]}, 
   CircleBox[{0.8871750063261553, 0.06415002990995844}, NCache[
    Rational[1, 15], 0.06666666666666667]]}]], "Output",
 CellChangeTimes->{3.770568528567322*^9, 3.770583446784122*^9, 
  3.770602301749013*^9, 3.770602444182116*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"3366ed2f-afd6-47f6-820b-9995ffd8c547"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Repeat until termination", "Subsection",
 CellChangeTimes->{{3.770600063280224*^9, 
  3.7706000717241993`*^9}},ExpressionUUID->"1d5a597b-e354-4e22-bf21-\
b4628a99844e"],

Cell[TextData[StyleBox["We rewrite the computations above in the following \
manner so that it is easier to change the radius and loop for random covers:",
 
 FontSize->20]], "Text",
 CellChangeTimes->{{3.7705089902695017`*^9, 3.77050902794985*^9}, {
  3.770509113253963*^9, 3.770509162140709*^9}, {3.7705834721300297`*^9, 
  3.770583476578485*^9}, {3.770583515716651*^9, 3.77058356726762*^9}, {
  3.770602518446074*^9, 3.770602521597851*^9}, {3.7706025947981052`*^9, 
  3.770602632950396*^9}},ExpressionUUID->"4b52f8d5-d227-425f-8f6c-\
f079088f2d67"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"randomIndex", " ", ":=", " ", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", 
       RowBox[{
        RowBox[{"4", "^", "order"}], "-", "1"}]}], "]"}], ",", "1"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"randomLocation", " ", ":=", " ", 
   RowBox[{"RandomReal", "[", "]"}]}], ";"}], "\n", 
 RowBox[{"vertices", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"List", " ", "@@", " ", "curve"}], ",", "1"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"determineCenter", "[", 
   RowBox[{"index_", ",", " ", "location_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{
     "vertices", "\[LeftDoubleBracket]", "index", "\[RightDoubleBracket]"}], 
     "]"}], "*", "location"}], " ", "+", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"vertices", "\[LeftDoubleBracket]", 
      RowBox[{"index", "+", "1"}], "\[RightDoubleBracket]"}], "]"}], " ", "*",
     " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "location"}], ")"}]}]}]}]}], "Code",
 CellChangeTimes->{{3.770560972570299*^9, 3.7705610159498672`*^9}, {
  3.7705610509289618`*^9, 3.770561082619134*^9}, {3.7705611132691593`*^9, 
  3.770561159315858*^9}, {3.770561197645569*^9, 3.7705611993237333`*^9}, {
  3.770566862333377*^9, 3.770566887797596*^9}, {3.770586451735773*^9, 
  3.770586472822137*^9}},ExpressionUUID->"18c659fb-640c-4633-bf63-\
74baaab60c62"],

Cell[TextData[StyleBox["Since we are limited in power of computation, we will \
not try to find random covers with radius less than 1/250. It is safe to \
perform all computations on a curve of order 6.",
 FontSize->20]], "Text",
 CellChangeTimes->{{3.770602652612238*^9, 
  3.7706027523073874`*^9}},ExpressionUUID->"ddb6b808-b3cf-4f0d-969d-\
2f454317600a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"order", " ", "=", " ", "6"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"vertices", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"List", " ", "@@", " ", 
      RowBox[{"KochCurve", "[", "order", "]"}]}], ",", "1"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"randomIndex", " ", ":=", " ", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"4", "^", "order"}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"randomLocation", " ", ":=", " ", 
   RowBox[{"RandomReal", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"determineCenter", "[", 
    RowBox[{"index_", ",", " ", "location_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
      "vertices", "\[LeftDoubleBracket]", "index", "\[RightDoubleBracket]"}], 
      "]"}], "*", "location"}], " ", "+", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"vertices", "\[LeftDoubleBracket]", 
       RowBox[{"index", "+", "1"}], "\[RightDoubleBracket]"}], "]"}], " ", 
     "*", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "location"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"randomCover", "[", "ra_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"regionCovered", " ", "=", " ", 
       RowBox[{"Ball", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"1", "/", "300"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
      "         ", 
      RowBox[{"radius", " ", "=", " ", "ra"}], ",", "\n", "         ", 
      RowBox[{"randomCount", " ", "=", " ", "0"}], ",", " ", 
      "\[IndentingNewLine]", "\t\t ", 
      RowBox[{"circleCount", " ", "=", " ", "0"}]}], "}"}], ",", "\n", 
    "\t\t ", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"randomCount", " ", "<", " ", "50"}], ",", " ", 
       "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"randomCenter", " ", "=", " ", 
           RowBox[{"determineCenter", "[", 
            RowBox[{"randomIndex", ",", " ", "randomLocation"}], "]"}]}], 
          "}"}], ",", " ", "\n", "\t\t\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"RegionMember", "[", 
            RowBox[{"region", ",", " ", "randomCenter"}], "]"}], ",", " ", 
           "\n", "\t\t\t\t\t", 
           RowBox[{"randomCount", "++"}], ",", " ", "\n", 
           "                    ", 
           RowBox[{
            RowBox[{"randomCount", " ", "=", " ", "0"}], ";", " ", 
            RowBox[{"circleCount", "++"}], ";", " ", 
            RowBox[{"regionCovered", " ", "=", " ", 
             RowBox[{"RegionUnion", "[", 
              RowBox[{"regionCovered", ",", " ", 
               RowBox[{"Ball", "[", 
                RowBox[{"randomCenter", ",", " ", "radius"}], "]"}]}], 
              "]"}]}]}]}], "]"}]}], "]"}]}], "]"}], ";", " ", "\n", 
     "         ", "circleCount"}]}], "\n", "         ", "]"}]}]}], "Code",
 CellChangeTimes->{{3.770559887960552*^9, 3.770559999787677*^9}, {
   3.770560602976893*^9, 3.770560802137031*^9}, {3.770561241120584*^9, 
   3.770561267986199*^9}, {3.770561330849578*^9, 3.770561331626812*^9}, {
   3.770561376324222*^9, 3.770561380483938*^9}, {3.7705615544436293`*^9, 
   3.770561577865839*^9}, {3.770561646792468*^9, 3.770561659225114*^9}, 
   3.7705627168906403`*^9, {3.770562755028779*^9, 3.770562756601945*^9}, {
   3.770563596676713*^9, 3.770563596933036*^9}, {3.7705636869812317`*^9, 
   3.770563723100967*^9}, {3.770563872419619*^9, 3.7705638748760242`*^9}, {
   3.7705639182086477`*^9, 3.770563918888782*^9}, {3.7705641901656837`*^9, 
   3.770564247911635*^9}, {3.7705642798432293`*^9, 3.77056428859761*^9}, 
   3.770564391326777*^9, {3.7705655128466587`*^9, 3.770565554612192*^9}, {
   3.770565642994071*^9, 3.7705656641880407`*^9}, {3.770565747594255*^9, 
   3.770565845257867*^9}, {3.7705658910876427`*^9, 3.770565901708219*^9}, {
   3.770566010644917*^9, 3.7705660744942083`*^9}, {3.770566230403364*^9, 
   3.7705662716806097`*^9}, {3.770566348128911*^9, 3.770566394132348*^9}, {
   3.770566795115823*^9, 3.770566803544825*^9}, {3.7705669033548326`*^9, 
   3.770566914889291*^9}, {3.770567075013967*^9, 3.770567077519844*^9}, {
   3.770567217486619*^9, 3.770567249441249*^9}, {3.7705673525706587`*^9, 
   3.7705673636088743`*^9}, {3.7705674273367977`*^9, 
   3.7705674436893578`*^9}, {3.770567648191725*^9, 3.770567652369028*^9}, {
   3.770568110801867*^9, 3.770568113817533*^9}, {3.770568206032737*^9, 
   3.7705682505565367`*^9}, {3.770568991077277*^9, 3.7705689912598867`*^9}, {
   3.770569322173435*^9, 3.7705693223584833`*^9}, {3.7705695199168377`*^9, 
   3.770569559598078*^9}, {3.7705704826835423`*^9, 3.770570518225874*^9}, {
   3.7705708342596703`*^9, 3.770570851827959*^9}, {3.7705708909326563`*^9, 
   3.770570919060527*^9}, 3.770571179395802*^9, {3.77057144357213*^9, 
   3.770571455824464*^9}, {3.7705715558619432`*^9, 3.7705715591569977`*^9}, {
   3.770571637594277*^9, 3.770571686788745*^9}, {3.770572888782441*^9, 
   3.7705729132135477`*^9}, {3.770583663248674*^9, 3.770583680731546*^9}, {
   3.770586382866741*^9, 3.7705864148758698`*^9}, {3.7705871638624973`*^9, 
   3.770587177426507*^9}, {3.7706029468025217`*^9, 3.7706029667942543`*^9}, {
   3.770603252134737*^9, 3.77060325283455*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"c9d21330-b394-4929-9b8f-44f67a5a7e60"],

Cell[TextData[StyleBox["We can now get the following cover in which each ball \
has radius 1/50. With the dynamically displayed variable \
\[OpenCurlyDoubleQuote]regionCovered\[CloseCurlyDoubleQuote], you can see \
blue balls popping up as we move forward in the algorithm.",
 FontSize->20]], "Text",
 CellChangeTimes->{{3.7706028262134867`*^9, 3.770602893640798*^9}, {
  3.770602974776803*^9, 3.7706029754680233`*^9}, {3.77060301410674*^9, 
  3.770603056471554*^9}},ExpressionUUID->"d96d8724-8747-49f7-b9d3-\
63d8537c0eff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dynamic", "[", 
   RowBox[{"Region", "[", "regionCovered", "]"}], "]"}], ";", 
  RowBox[{"randomCover", "[", 
   RowBox[{"1", "/", "50"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770570904419743*^9, 3.770570949558857*^9}, {
  3.770571010794022*^9, 3.770571055811262*^9}, {3.770571589924966*^9, 
  3.770571621080532*^9}, {3.7705836181194963`*^9, 3.77058363862052*^9}, {
  3.770602878202656*^9, 3.770602882422268*^9}, {3.7706029142295218`*^9, 
  3.770602942111765*^9}, {3.7706029906471977`*^9, 3.770602997308385*^9}, {
  3.770603263368444*^9, 3.77060326355031*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"96dd5190-995b-4220-b2b5-1642cb79704a"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.770570946941996*^9, 3.770570950337192*^9}, {
   3.7705710178055468`*^9, 3.770571068819579*^9}, {3.770571591810279*^9, 
   3.7705716223654957`*^9}, {3.770571669478045*^9, 3.770571712036172*^9}, 
   3.770572947757412*^9, {3.770583630764779*^9, 3.770583693373073*^9}, {
   3.770602885486986*^9, 3.770602931577778*^9}, 3.770603078424643*^9, 
   3.770603265722341*^9, 3.770604019735284*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"27f0d15c-c2f2-420c-9fcf-9efe61ba0be5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"regionCovered", " ", "=", " ", 
  RowBox[{"Ball", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"1", "/", "300"}]}], "]"}]}]], "Input",
 CellLabel->"In[70]:=",ExpressionUUID->"3f555b30-b1f2-4e22-887a-1fc82639ff37"],

Cell[BoxData[
 RowBox[{"Ball", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   FractionBox["1", "300"]}], "]"}]], "Output",
 CellChangeTimes->{3.7706040502857857`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"116c0eb2-bc7e-4fe0-92f0-8dc826acf9ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"Region", "[", "regionCovered", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7705709551751537`*^9, 3.770570968891667*^9}, {
  3.770571386635997*^9, 3.77057138774818*^9}, {3.770603084889303*^9, 
  3.770603095241508*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"38e90ba1-ef60-4d0f-a480-f3b54d5bbad1"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Region[$CellContext`regionCovered], StandardForm],
  ImageSizeCache->{360., {177., 182.}}]], "Output",
 CellChangeTimes->{{3.770603081861703*^9, 3.7706030962814207`*^9}},
 CellLabel->"Out[60]=",ExpressionUUID->"e7d4f25f-f12c-47dc-93f0-ca699c91683d"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.770569445665403*^9, 
  3.7705694533999*^9}},ExpressionUUID->"0402cf1d-6856-4768-952a-5b7ecf0041de"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find limits of sums", "Section",
 CellChangeTimes->{{3.77059988375729*^9, 3.770599906340954*^9}, 
   3.7706002332891493`*^9},ExpressionUUID->"e6327f04-3614-4655-bcbf-\
5a23e94db0b5"],

Cell[TextData[StyleBox["With the following functions, we can calculate the \
limit of sums.",
 FontSize->20]], "Text",
 CellChangeTimes->{{3.770603135571824*^9, 3.770603144854988*^9}, {
  3.770603327123138*^9, 
  3.770603334237363*^9}},ExpressionUUID->"a0b33e5a-ec62-481b-a33a-\
19cc6e1057f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"minimumCover", "[", 
   RowBox[{"ra_", ",", " ", "numberOfSample_"}], "]"}], ":=", " ", 
  RowBox[{"Min", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"randomCover", "[", "ra", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "numberOfSample", ",", "1"}], "}"}]}], 
    "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7705687785638742`*^9, 3.770568909925659*^9}, {
  3.770569464999058*^9, 3.770569471344508*^9}, {3.770571245807535*^9, 
  3.770571290795658*^9}, {3.77057141792548*^9, 3.770571424078293*^9}, {
  3.770571482060718*^9, 3.7705714836467133`*^9}, {3.770571752079513*^9, 
  3.7705717589695587`*^9}, {3.770572583580236*^9, 3.770572603360298*^9}, {
  3.770572918120577*^9, 3.770572934334839*^9}, {3.770576162177155*^9, 
  3.770576162364443*^9}, {3.770583733873448*^9, 3.770583734068695*^9}, {
  3.770603147611442*^9, 
  3.7706031701744823`*^9}},ExpressionUUID->"43c772f7-f7a6-4035-94a8-\
9b6dda80b01c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"limitCover", "[", 
   RowBox[{
   "s_", ",", "lowRange_", ",", " ", "highRange_", ",", " ", "distance_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"minimumCover", "[", 
      RowBox[{"1", "/", "diam"}], "]"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "*", 
        RowBox[{"1", "/", "diam"}]}], ")"}], "^", "s"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"diam", ",", "lowRange", ",", "highRange", ",", "distance"}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770567894328034*^9, 3.7705679334419813`*^9}, {
  3.77056892449687*^9, 3.770569046912333*^9}, {3.770569317914632*^9, 
  3.770569331493526*^9}, {3.770569421740155*^9, 3.770569483996099*^9}, {
  3.770571964792618*^9, 3.7705720067760363`*^9}, {3.770572230060635*^9, 
  3.7705722367014513`*^9}, {3.770572354819201*^9, 3.770572385354219*^9}, {
  3.77057260665865*^9, 3.770572607886269*^9}, {3.770573269649662*^9, 
  3.770573287020648*^9}, {3.7705760130639257`*^9, 3.770576042089538*^9}, {
  3.770583746476184*^9, 3.770583758119817*^9}, {3.770602798948131*^9, 
  3.7706027990929003`*^9}, {3.770603187651867*^9, 3.770603238205385*^9}, {
  3.770603275622074*^9, 3.770603285155401*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"b69b3b70-60a3-4284-942a-3bf9ad2f2035"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.770572284952235*^9, 3.770572310886739*^9}, {
   3.7705776095747433`*^9, 3.770577614623826*^9}, {3.770583795367099*^9, 
   3.7705837959973583`*^9}, 
   3.77058531231464*^9},ExpressionUUID->"2f552a97-6926-469a-a5b2-\
db8a61efb5fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["67", "25"], ",", 
   FractionBox["5", "2"], ",", 
   FractionBox["388", "115"], ",", 
   FractionBox["539", "160"], ",", 
   FractionBox["767", "205"], ",", 
   FractionBox["997", "250"]}], "}"}]], "Output",
 CellChangeTimes->{3.770578270829413*^9, 3.7705837832660313`*^9, 
  3.7705848671499157`*^9},
 CellLabel->
  "Out[689]=",ExpressionUUID->"64859b69-9a39-4dbe-8d6e-883edb824715"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`ra, StandardForm],
  ImageSizeCache->{16., {1., 7.}}]], "Output",
 CellChangeTimes->{3.770578270829413*^9, 3.7705837832660313`*^9, 
  3.770584867249914*^9},
 CellLabel->
  "Out[690]=",ExpressionUUID->"75d3370b-ec87-40e3-878e-6cb837f2f0b8"]
}, Open  ]],

Cell["Here are two ", "Text",
 CellChangeTimes->{{3.7706033205544167`*^9, 
  3.7706033247693367`*^9}},ExpressionUUID->"592a639c-a5d5-44d4-972b-\
7ac83a0fcfda"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"limitCover", "[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.770578295251663*^9, 3.770578301873671*^9}, {
  3.770585277484288*^9, 
  3.7705853167974863`*^9}},ExpressionUUID->"98b5b77c-6faa-4239-a430-\
36628da5c662"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{1., 2.68}, {2., 2.5}, {3., 3.373913043478261}, {4., 
       3.36875}, {5., 3.7414634146341466`}, {6., 3.988}}]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 2.4173333333333336`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 6.}, {2.4173333333333336`, 3.988}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.770578304261579*^9, 3.770585288115183*^9},
 CellLabel->
  "Out[691]=",ExpressionUUID->"581e8b70-b1b4-4b32-b2f5-7ce82b94c746"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"limitCover", "[", "2", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", 
  RowBox[{"Region", "[", "region", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7705774640951023`*^9, 3.770577473483706*^9}, {
  3.770577587812593*^9, 3.770577592044964*^9}, {3.7705853224217777`*^9, 
  3.770585326063241*^9}},
 CellLabel->
  "In[692]:=",ExpressionUUID->"26c40d08-b48d-4576-a8c3-66ef58ac4303"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{1.4627352259443547`, 0.07429050977916449}, {2., 
       0.03979591836734694}, {3., 0.02820415879017013}, {4., 0.020625}, {5., 
       0.016799524092801905`}, {6., 0.0164}}]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 6.}, {0, 0.07429050977916449}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.770577474474742*^9, 3.770577592970848*^9, 
  3.770586320972281*^9},
 CellLabel->
  "Out[692]=",ExpressionUUID->"d4911f93-7df9-43bc-8c44-3f1a442ddcf1"]
}, Open  ]],

Cell[TextData[{
 "Now we know that the Hausdorff dimension of the Koch Snowflake curve must \
be between 1 and 2. With this algorithIt will probably take a million years \
to give a convincing result that there is indeed a jump of the sum at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", " ", "=", " ", 
    RowBox[{"log3", "/", "log4", " "}]}], TraditionalForm]],ExpressionUUID->
  "cc006e76-d301-4756-860b-9b8eedc288bf"]
}], "Text",
 CellChangeTimes->{
  3.770586493042418*^9, {3.7705866175758257`*^9, 3.770586619687961*^9}, 
   3.770586699492004*^9, {3.770586904731385*^9, 3.7705869086759663`*^9}, {
   3.770603970612166*^9, 
   3.77060397106168*^9}},ExpressionUUID->"97a56632-2b7d-47ce-bd30-\
3ef7bf2fd898"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Why we should not compel machines to compute like human", "Section",
 CellChangeTimes->{{3.770603373437087*^9, 
  3.770603386780754*^9}},ExpressionUUID->"80ebe587-e95e-4c89-a116-\
881e42eb8aba"],

Cell["\<\
The human way and the computer way are different. The proof for the existence \
does not exceed a page, but the \
\>", "Text",
 CellChangeTimes->{{3.770508417233444*^9, 3.770508417241593*^9}, {
   3.770578542129841*^9, 3.770578579325645*^9}, 
   3.770586499500332*^9},ExpressionUUID->"89b5847b-9d60-4130-8912-\
1291a67ef9d2"],

Cell[BoxData[""], "Code",
 CellChangeTimes->{{3.770506650069768*^9, 
  3.770506657205896*^9}},ExpressionUUID->"ce61d17b-f18b-4275-be0d-\
0b55bbdd5798"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{147, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2324, 36, 245, "Text",ExpressionUUID->"823dc315-ed88-4ec5-b858-c73294025028"],
Cell[CellGroupData[{
Cell[2907, 60, 167, 3, 67, "Section",ExpressionUUID->"2d5a26a6-ad7e-4c97-a516-d6444764d742"],
Cell[3077, 65, 1823, 25, 41, "Text",ExpressionUUID->"71b60f4f-b3ba-4141-a122-f19149dceead"],
Cell[CellGroupData[{
Cell[4925, 94, 1157, 30, 35, "Input",ExpressionUUID->"95a522e5-22ff-437e-8a8e-7f27f9d9cce2"],
Cell[6085, 126, 2228, 47, 453, "Output",ExpressionUUID->"a8681c48-8603-4103-bf14-1f194e3c86f1"]
}, Open  ]],
Cell[8328, 176, 4082, 75, 95, "Text",ExpressionUUID->"27636f91-6965-4e92-bc09-3afed610f96b"],
Cell[CellGroupData[{
Cell[12435, 255, 579, 13, 52, "Input",ExpressionUUID->"8f7e1965-73b6-4006-a701-4fca674c92b3"],
Cell[13017, 270, 1985, 40, 207, "Output",ExpressionUUID->"711d4b5d-5660-44ca-a394-80aa11f3da72"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15051, 316, 168, 3, 67, "Section",ExpressionUUID->"2a800c94-d861-484c-973c-d29e817900b2"],
Cell[15222, 321, 3909, 76, 72, "Text",ExpressionUUID->"5e167a4a-ad28-4289-9190-a9392f19d8f1"],
Cell[19134, 399, 185, 4, 30, "Input",ExpressionUUID->"ea446dc7-0fe1-4d3c-94be-93ef6d839337"],
Cell[19322, 405, 1815, 34, 41, "Text",ExpressionUUID->"6ad5ffcf-c645-4606-beba-4e4943a7970d"],
Cell[21140, 441, 257, 7, 30, "Input",ExpressionUUID->"85841228-2963-4275-b9c0-5106d59d2196"],
Cell[21400, 450, 1291, 19, 41, "Text",ExpressionUUID->"cafcff00-dff2-4d36-8c65-cac6882aa67a"],
Cell[22694, 471, 186, 4, 30, "Input",ExpressionUUID->"e1e403b9-102f-4046-8996-98ebcd89547f"],
Cell[22883, 477, 3346, 79, 70, "Text",ExpressionUUID->"6675bc88-6046-4670-80a9-0c8d4db52911"],
Cell[26232, 558, 216, 5, 30, "Input",ExpressionUUID->"4acee646-f559-4f5d-a3a2-85f6081c02a8"],
Cell[26451, 565, 1745, 30, 61, "Text",ExpressionUUID->"a24fe610-dced-4df4-9691-3909ba209238"],
Cell[28199, 597, 327, 6, 41, "Text",ExpressionUUID->"2175e118-8c05-4ccf-b5b2-f4a315416781"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28563, 608, 177, 3, 67, "Section",ExpressionUUID->"dd4247ce-3041-4c98-aa00-efde76f02bba"],
Cell[28743, 613, 2929, 55, 186, "Text",ExpressionUUID->"437d39bf-760c-41b8-80d5-ccccbe188324"],
Cell[31675, 670, 1993, 37, 61, "Text",ExpressionUUID->"4e4f0e2c-f31d-4f35-8626-911e91b5fb14"],
Cell[33671, 709, 1278, 30, 447, "Text",ExpressionUUID->"542a72a8-ac2a-48f8-8b5b-37e668d5c994"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34986, 744, 164, 3, 67, "Section",ExpressionUUID->"216317f7-6842-49c6-96e2-d70c9aa5a35f"],
Cell[35153, 749, 527, 8, 70, "Text",ExpressionUUID->"c0ccdc36-c2a4-4a2b-997c-b3a85f0f917e"],
Cell[35683, 759, 277, 6, 30, "Input",ExpressionUUID->"4e621b62-fd3b-4cc2-bb7c-6bf06f36e414"],
Cell[35963, 767, 270, 5, 41, "Text",ExpressionUUID->"49af0f6b-d5a1-40d1-afdb-f604f372c223"],
Cell[CellGroupData[{
Cell[36258, 776, 1774, 41, 55, "Input",ExpressionUUID->"510e6629-ced2-4c8b-956b-27791c179ebe"],
Cell[38035, 819, 2177, 37, 154, "Output",ExpressionUUID->"187ca0b6-5145-4325-a5bc-26bc5f9c0a37"]
}, Open  ]],
Cell[40227, 859, 813, 12, 157, "Text",ExpressionUUID->"5a902480-6d3a-48d0-85e8-a064023024d0"],
Cell[CellGroupData[{
Cell[41065, 875, 1216, 20, 30, "Input",ExpressionUUID->"7c40a594-df87-4f58-995d-fbe738a65bd3"],
Cell[42284, 897, 275, 7, 51, "Output",ExpressionUUID->"1d1c1c0d-9edf-4105-a2f3-9ee525d64822"]
}, Open  ]],
Cell[42574, 907, 294, 5, 41, "Text",ExpressionUUID->"c58f2b1b-7d30-4f46-9451-ad331163ab36"],
Cell[CellGroupData[{
Cell[42893, 916, 240, 4, 54, "Subsection",ExpressionUUID->"f56a6bb6-396b-4392-9679-b4200c592856"],
Cell[43136, 922, 596, 9, 70, "Text",ExpressionUUID->"3e2fcc86-24d7-4c84-8962-12e06228c0c7"],
Cell[CellGroupData[{
Cell[43757, 935, 427, 10, 52, "Code",ExpressionUUID->"e3b585c6-610a-4b26-8fcd-cac03751144b"],
Cell[44187, 947, 388, 6, 34, "Output",ExpressionUUID->"a28a6222-ad97-4a62-b474-f5fa6d7c8e47"]
}, Open  ]],
Cell[44590, 956, 402, 7, 41, "Text",ExpressionUUID->"452365aa-44c4-44ee-ba5a-ff7cb8f13009"],
Cell[CellGroupData[{
Cell[45017, 967, 1450, 35, 110, "Code",ExpressionUUID->"9e6337b3-e40d-4d7c-b9c2-eb5e14550c58"],
Cell[46470, 1004, 2454, 42, 131, "Output",ExpressionUUID->"c89c2514-c31a-4475-999b-e2f307e0020e"]
}, Open  ]],
Cell[48939, 1049, 452, 7, 41, "Text",ExpressionUUID->"dd4133e0-1377-4b9f-996d-e2f6536fd6fa"],
Cell[CellGroupData[{
Cell[49416, 1060, 1328, 32, 91, "Code",ExpressionUUID->"b248dd0d-7795-4a36-b2b3-2680d4f030e9"],
Cell[50747, 1094, 283, 6, 34, "Output",ExpressionUUID->"23746519-e6b9-47b2-992b-8ba8240a5275"],
Cell[51033, 1102, 2367, 41, 131, "Output",ExpressionUUID->"a9644866-7a8b-4029-9844-bf716d238ea4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53449, 1149, 250, 4, 54, "Subsection",ExpressionUUID->"9535214f-2c09-41fc-8afe-f57e60189794"],
Cell[53702, 1155, 474, 7, 41, "Text",ExpressionUUID->"7687a6ee-0f16-4f47-bb0f-edf361283ff8"],
Cell[CellGroupData[{
Cell[54201, 1166, 310, 5, 52, "Code",ExpressionUUID->"940321c3-980a-4e2e-b14c-d1538f60df3b"],
Cell[54514, 1173, 179, 2, 34, "Output",ExpressionUUID->"39e07d31-c97b-4285-83c9-20b1ed950cbe"]
}, Open  ]],
Cell[54708, 1178, 1197, 18, 157, "Text",ExpressionUUID->"a8498689-d513-4d0e-944b-7ff03c762deb"],
Cell[CellGroupData[{
Cell[55930, 1200, 1159, 30, 72, "Code",ExpressionUUID->"9997a255-d671-4804-ba75-59e9ea4a9516"],
Cell[57092, 1232, 2491, 42, 132, "Output",ExpressionUUID->"3366ed2f-afd6-47f6-820b-9995ffd8c547"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59632, 1280, 174, 3, 54, "Subsection",ExpressionUUID->"1d5a597b-e354-4e22-bf21-b4628a99844e"],
Cell[59809, 1285, 551, 9, 41, "Text",ExpressionUUID->"4b52f8d5-d227-425f-8f6c-f079088f2d67"],
Cell[60363, 1296, 1486, 38, 110, "Code",ExpressionUUID->"18c659fb-640c-4633-bf63-74baaab60c62"],
Cell[61852, 1336, 357, 6, 70, "Text",ExpressionUUID->"ddb6b808-b3cf-4f0d-969d-2f454317600a"],
Cell[62212, 1344, 5581, 116, 357, "Code",ExpressionUUID->"c9d21330-b394-4929-9b8f-44f67a5a7e60"],
Cell[67796, 1462, 524, 8, 70, "Text",ExpressionUUID->"d96d8724-8747-49f7-b9d3-63d8537c0eff"],
Cell[CellGroupData[{
Cell[68345, 1474, 678, 12, 30, "Input",ExpressionUUID->"96dd5190-995b-4220-b2b5-1642cb79704a"],
Cell[69026, 1488, 522, 7, 34, "Output",ExpressionUUID->"27f0d15c-c2f2-420c-9fcf-9efe61ba0be5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69585, 1500, 283, 7, 30, "Input",ExpressionUUID->"3f555b30-b1f2-4e22-887a-1fc82639ff37"],
Cell[69871, 1509, 277, 7, 51, "Output",ExpressionUUID->"116c0eb2-bc7e-4fe0-92f0-8dc826acf9ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70185, 1521, 349, 6, 30, "Input",ExpressionUUID->"38e90ba1-ef60-4d0f-a480-f3b54d5bbad1"],
Cell[70537, 1529, 287, 5, 376, "Output",ExpressionUUID->"e7d4f25f-f12c-47dc-93f0-ca699c91683d"]
}, Open  ]],
Cell[70839, 1537, 148, 2, 30, "Input",ExpressionUUID->"0402cf1d-6856-4768-952a-5b7ecf0041de"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71036, 1545, 188, 3, 67, "Section",ExpressionUUID->"e6327f04-3614-4655-bcbf-5a23e94db0b5"],
Cell[71227, 1550, 293, 6, 41, "Text",ExpressionUUID->"a0b33e5a-ec62-481b-a33a-19cc6e1057f7"],
Cell[71523, 1558, 974, 20, 30, "Input",ExpressionUUID->"43c772f7-f7a6-4035-94a8-9b6dda80b01c"],
Cell[72500, 1580, 1331, 28, 30, "Input",ExpressionUUID->"b69b3b70-60a3-4284-942a-3bf9ad2f2035"],
Cell[CellGroupData[{
Cell[73856, 1612, 278, 5, 30, "Input",ExpressionUUID->"2f552a97-6926-469a-a5b2-db8a61efb5fb"],
Cell[74137, 1619, 439, 12, 51, "Output",ExpressionUUID->"64859b69-9a39-4dbe-8d6e-883edb824715"],
Cell[74579, 1633, 286, 6, 34, "Output",ExpressionUUID->"75d3370b-ec87-40e3-878e-6cb837f2f0b8"]
}, Open  ]],
Cell[74880, 1642, 159, 3, 35, "Text",ExpressionUUID->"592a639c-a5d5-44d4-972b-7ac83a0fcfda"],
Cell[CellGroupData[{
Cell[75064, 1649, 279, 6, 30, "Input",ExpressionUUID->"98b5b77c-6faa-4239-a430-36628da5c662"],
Cell[75346, 1657, 1927, 50, 239, "Output",ExpressionUUID->"581e8b70-b1b4-4b32-b2f5-7ce82b94c746"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77310, 1712, 454, 9, 52, "Input",ExpressionUUID->"26c40d08-b48d-4576-a8c3-66ef58ac4303"],
Cell[77767, 1723, 1992, 52, 242, "Output",ExpressionUUID->"d4911f93-7df9-43bc-8c44-3f1a442ddcf1"]
}, Open  ]],
Cell[79774, 1778, 710, 15, 58, "Text",ExpressionUUID->"97a56632-2b7d-47ce-bd30-3ef7bf2fd898"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80521, 1798, 200, 3, 67, "Section",ExpressionUUID->"80ebe587-e95e-4c89-a116-881e42eb8aba"],
Cell[80724, 1803, 335, 7, 35, "Text",ExpressionUUID->"89b5847b-9d60-4130-8912-1291a67ef9d2"],
Cell[81062, 1812, 151, 3, 52, "Code",ExpressionUUID->"ce61d17b-f18b-4275-be0d-0b55bbdd5798"]
}, Open  ]]
}
]
*)

