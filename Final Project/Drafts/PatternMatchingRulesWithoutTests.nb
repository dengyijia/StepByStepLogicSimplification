(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    313343,       7100]
NotebookOptionsPosition[    301988,       6936]
NotebookOutlinePosition[    302325,       6951]
CellTagsIndexPosition[    302282,       6948]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.771013112344411*^9, 3.771013127485777*^9}, {
  3.7710132613102922`*^9, 3.771013286418309*^9}, {3.771013318014811*^9, 
  3.7710133183254004`*^9}},
 CellLabel->
  "In[516]:=",ExpressionUUID->"664bef8e-7fed-422c-9b6e-ba252071622d"],

Cell[CellGroupData[{

Cell["Conversion between formats", "Subsection",
 CellChangeTimes->{{3.7710161524133472`*^9, 3.7710161821909227`*^9}, {
  3.771097048948303*^9, 
  3.771097070178618*^9}},ExpressionUUID->"fc8a6b34-7a4a-4fce-bd95-\
5a50cd83977e"],

Cell[TextData[StyleBox["Since Mathematica evaluates inputs upon entering \
them, we use the lower case version of true, false, and, or, not.",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
  3.77101629756418*^9, 3.771016361936102*^9}, {3.7711495182091627`*^9, 
  3.771149595171393*^9}},ExpressionUUID->"5cfe9ccb-73c8-4493-830a-\
6727d1b7e680"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"and", ",", "Orderless"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"or", ",", "Orderless"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7710973325510597`*^9, 3.77109736309226*^9}, {
  3.771097472997588*^9, 3.7710974736900473`*^9}},
 CellLabel->
  "In[517]:=",ExpressionUUID->"62ca0365-b5d0-4cf8-b6fe-4cc1fcb85f7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
findStep: find a potential step indicated by name of the rule and location\
\>", "Subsection",
 CellChangeTimes->{{3.7710161524133472`*^9, 3.7710161821909227`*^9}, {
  3.771149624615913*^9, 3.7711496499144363`*^9}, {3.771149789142756*^9, 
  3.7711497962851954`*^9}},ExpressionUUID->"e437783f-e4b5-400f-abaa-\
71aeab37c962"],

Cell[TextData[{
 StyleBox["findStep",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" will take one Boolean expression and return a potential step that \
can be taken to reduce the expression\nThe potential step is the first \
available step found in the order given by sequence. \nIf a step is found, a \
step object will be returned; if there\[CloseCurlyQuote]s no available steps, \
an empty list will be returned.",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
  3.77101629756418*^9, 3.771016361936102*^9}, {3.771149661218308*^9, 
  3.771149802125887*^9}},ExpressionUUID->"409cdfa9-1d09-4438-8c1c-\
83733c47e1fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"findStep", "[", "true", "]"}], " ", ":=", " ", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"findStep", "[", "false", "]"}], " ", ":=", " ", 
  RowBox[{"{", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CNFsequence", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "findDoubleNegation", ",", "findLiteral", ",", "findDeMorgan", ",", " ", 
     "findAssociative", ",", "findEquivalence", ",", " ", 
     "findOrDistributive", ",", "findNegation", ",", "findAbsorption"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DNFsequence", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "findDoubleNegation", ",", "findLiteral", ",", "findDeMorgan", ",", " ", 
     "findAssociative", ",", "findEquivalence", ",", " ", 
     "findAndDistributive", ",", "findNegation", ",", "findAbsorption"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findStep", "[", "e_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "result", "}"}], ",", 
    RowBox[{
     RowBox[{"SelectFirst", "[", 
      RowBox[{"sequence", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"result", " ", "=", " ", 
           RowBox[{
            RowBox[{"recursion", "[", "#", "]"}], "[", "e", "]"}]}], ")"}], "=!=", 
         RowBox[{"{", "}"}]}], "&"}], ",", 
       RowBox[{"{", "}"}]}], "]"}], ";", "result"}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.770980572688677*^9, 3.770980614591069*^9}, {
   3.770980749054818*^9, 3.770980752763492*^9}, 3.7709953719575043`*^9, {
   3.770998022724476*^9, 3.770998028111581*^9}, {3.7709986146464376`*^9, 
   3.770998738027267*^9}, {3.77101358920395*^9, 3.771013633290421*^9}, {
   3.771013673668323*^9, 3.771013690353525*^9}, {3.771013721687036*^9, 
   3.771013775620801*^9}, {3.771076263670562*^9, 3.7710763160525417`*^9}, {
   3.771076347330361*^9, 3.7710763715749483`*^9}, {3.771076418837842*^9, 
   3.77107646341926*^9}, {3.771076504407792*^9, 3.771076506844676*^9}, {
   3.7710765669878893`*^9, 3.771076573915875*^9}, {3.771076660836219*^9, 
   3.771076691341399*^9}, 3.771078078999159*^9, {3.7710877227663794`*^9, 
   3.7710877314988203`*^9}, {3.7710970920467176`*^9, 3.7710970941754427`*^9}, 
   3.7710976495276337`*^9, {3.771100894321596*^9, 3.771100898685191*^9}, {
   3.7711010999986362`*^9, 3.771101111215332*^9}, {3.771106435808655*^9, 
   3.771106436725724*^9}, {3.7711498067124043`*^9, 3.771149827592465*^9}, {
   3.7711509746654587`*^9, 3.771151014500874*^9}, {3.771151046408805*^9, 
   3.771151064228744*^9}, {3.771168684586693*^9, 3.77116869797609*^9}, {
   3.771168737674624*^9, 3.771168768371484*^9}, {3.77116915574465*^9, 
   3.771169181605357*^9}, {3.771169222841774*^9, 3.7711692232317457`*^9}},
 CellLabel->
  "In[656]:=",ExpressionUUID->"f60bcc8c-4d31-4016-90f8-cee06bb523c8"],

Cell[TextData[{
 StyleBox["recursion",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" will recursively apply the find function to find the first \
appearance of a given pattern in an expression",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
  3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
  3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
  3.771016435242133*^9, 3.771016453777063*^9}, {3.771065438876528*^9, 
  3.771065440730439*^9}},ExpressionUUID->"96918e48-559c-4683-adea-\
4c8afbc9f94a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"recursion", "[", "find_", "]"}], "[", "e_", "]"}], " ", ":=", " ", 
  RowBox[{"Switch", "[", 
   RowBox[{
    RowBox[{"find", "[", "e", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "}"}], ",", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"result", ",", "index"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"index", "=", " ", 
        RowBox[{"SelectFirst", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "e", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"result", "=", 
              RowBox[{
               RowBox[{"recursion", "[", "find", "]"}], "[", 
               RowBox[{
               "e", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
               "]"}]}], ")"}], "=!=", 
            RowBox[{"{", "}"}]}], "&"}], ",", 
          RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{"index", ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", "_", ",", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Most", "[", "result", "]"}], ",", 
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"Last", "[", "result", " ", "]"}], ",", "index"}], 
            "]"}]}], "]"}]}], "]"}]}]}], "]"}], ",", " ", 
    "\[IndentingNewLine]", "_", ",", 
    RowBox[{"find", "[", "e", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7709970507493277`*^9, 3.7709972928615007`*^9}, {
   3.7709973232778378`*^9, 3.770997365438614*^9}, {3.771012653656433*^9, 
   3.771012782603538*^9}, {3.7710128315345*^9, 3.771012889617255*^9}, {
   3.771013352054278*^9, 3.771013356712761*^9}, {3.771013417387548*^9, 
   3.771013486360649*^9}, {3.771014234527512*^9, 3.771014431326556*^9}, {
   3.7710145125203133`*^9, 3.771014523871687*^9}, {3.771016398012292*^9, 
   3.771016403184689*^9}, 3.771020387082439*^9, {3.771020541873007*^9, 
   3.771020576813911*^9}, {3.771020643251028*^9, 3.771020691955988*^9}, {
   3.771020751388932*^9, 3.771020826518413*^9}, {3.7710208754129667`*^9, 
   3.7710208762865753`*^9}, {3.771020983688609*^9, 3.7710209940505123`*^9}, {
   3.771021066103224*^9, 3.771021089331008*^9}, {3.7710219159403677`*^9, 
   3.7710220578245573`*^9}, {3.771022506509149*^9, 3.771022541302342*^9}, {
   3.771022936055211*^9, 3.7710229406403008`*^9}, {3.771064566561858*^9, 
   3.7710645856544657`*^9}, {3.771064808441229*^9, 3.77106488720749*^9}, {
   3.7710649483957367`*^9, 3.77106495895111*^9}, {3.7710650067389812`*^9, 
   3.7710650086133223`*^9}, {3.7710651302072887`*^9, 3.771065210291552*^9}, {
   3.771065295701535*^9, 3.771065418831204*^9}, {3.7710658603066196`*^9, 
   3.771065870460266*^9}, {3.7710659377880373`*^9, 3.771065972778335*^9}, {
   3.771084115986817*^9, 3.7710842148929987`*^9}, {3.771086374958208*^9, 
   3.771086377401174*^9}, {3.771110556160954*^9, 3.771110567545371*^9}},
 CellLabel->
  "In[525]:=",ExpressionUUID->"5ebcef0d-6d6a-435b-916f-35adde93b208"],

Cell[TextData[{
 StyleBox["findLIteral",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" will give the first occurrence of a literal, so that we can \
perform Identity, domination, or negation rule.",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
  3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
  3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
  3.771016435242133*^9, 3.771016514332366*^9}, {3.771017536733238*^9, 
  3.7710175373696012`*^9}},ExpressionUUID->"cbceafae-36fc-4845-a5b2-\
50717a1f0de3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"identify", " ", "literals"}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"identifyLiteral", "[", 
      RowBox[{"and", ",", "true"}], "]"}], "=", " ", "\"\<Identity\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"identifyLiteral", "[", 
      RowBox[{"and", ",", "false"}], "]"}], "=", " ", "\"\<Domination\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"identifyLiteral", "[", 
      RowBox[{"or", ",", "true"}], "]"}], "=", " ", "\"\<Domination\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"identifyLiteral", "[", 
      RowBox[{"or", ",", "false"}], "]"}], "=", " ", "\"\<Identity\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"identifyLiteral", "[", 
      RowBox[{"not", ",", "true"}], "]"}], "=", " ", "\"\<False\>\""}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"identifyLiteral", "[", 
      RowBox[{"not", ",", "false"}], "]"}], "=", " ", "\"\<True\>\""}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{"identifyLiteral", "[", 
     RowBox[{"_", ",", "_"}], "]"}], ":=", " ", 
    RowBox[{"{", "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"findLiteral", "[", "e_", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"identifiedRule", " ", ",", "index"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"index", " ", "=", " ", 
        RowBox[{"SelectFirst", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "e", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"identifiedRule", "=", 
              RowBox[{"identifyLiteral", "[", 
               RowBox[{
                RowBox[{
                "e", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
                ",", 
                RowBox[{
                "e", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}]}],
                "]"}]}], ")"}], "=!=", 
            RowBox[{"{", "}"}]}], "&"}], ",", 
          RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{"index", " ", ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", "_", ",", 
         RowBox[{"{", 
          RowBox[{"identifiedRule", ",", 
           RowBox[{"ToString", "[", 
            RowBox[{
            "e", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
            "]"}], ",", 
           RowBox[{"{", "index", "}"}]}], "}"}]}], "]"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.770991564757495*^9, 3.770991746154963*^9}, {
   3.770992280794609*^9, 3.770992301247472*^9}, {3.7709954151716337`*^9, 
   3.7709954586287537`*^9}, {3.771012425522346*^9, 3.771012433844263*^9}, {
   3.771013371918242*^9, 3.771013373744563*^9}, {3.771014562910371*^9, 
   3.7710145696857233`*^9}, {3.7710146668237877`*^9, 3.771014683147358*^9}, {
   3.771014815321227*^9, 3.771014861118319*^9}, {3.7710148976267138`*^9, 
   3.771015497576367*^9}, {3.771015532991219*^9, 3.771015533178095*^9}, {
   3.7710158271670313`*^9, 3.771015833805915*^9}, {3.771017420452067*^9, 
   3.771017420667231*^9}, {3.771022995310832*^9, 3.771023017307438*^9}, {
   3.771065499366905*^9, 3.771065564203404*^9}, {3.771065596627483*^9, 
   3.7710657478975267`*^9}, {3.7710659039948587`*^9, 3.77106590665384*^9}, {
   3.7710659828945637`*^9, 3.771065997215049*^9}, {3.771079590073221*^9, 
   3.771079626629974*^9}, {3.7710971345667887`*^9, 3.771097138095818*^9}, {
   3.7710971817634363`*^9, 3.771097207141502*^9}, {3.771110581471238*^9, 
   3.771110597363678*^9}, 3.771149835336783*^9},
 CellLabel->
  "In[526]:=",ExpressionUUID->"a2032300-e7bd-4dac-8bb6-ee357e0106a8"],

Cell[TextData[{
 StyleBox["findEquivalence",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" will give the first occurrence of two structurally equivalent \
parts, so that we can perform idempotent rule.",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
  3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
  3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
  3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
  3.771017543978558*^9}},ExpressionUUID->"58afb677-dd78-4763-82f2-\
96041936b1ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"identify", " ", "same", " ", "structures"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"findEquivalence", "[", "e_", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "loc", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"loc", " ", "=", 
       RowBox[{"SelectFirst", "[", 
        RowBox[{
         RowBox[{"Subsets", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "e", "]"}], "]"}], ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "e", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "===", 
           RowBox[{
            RowBox[{
            "e", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "&"}], 
         ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{"loc", " ", ",", " ", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}], ",", "_", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Idempotent\>\"", ",", 
          RowBox[{"{", "loc", "}"}]}], "}"}]}], "]"}]}]}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.770984707453258*^9, 3.770984712662614*^9}, {
   3.7709847558394623`*^9, 3.770984770608321*^9}, {3.770984802247933*^9, 
   3.770984865471922*^9}, {3.770984946285125*^9, 3.770985009319034*^9}, {
   3.7709850641149683`*^9, 3.770985068102989*^9}, {3.770985203873069*^9, 
   3.770985241660282*^9}, 3.7709917727594547`*^9, {3.770992268334543*^9, 
   3.770992270623262*^9}, {3.770992378694689*^9, 3.770992379444899*^9}, {
   3.770992711750657*^9, 3.7709927201857357`*^9}, {3.770993976304927*^9, 
   3.770993986962514*^9}, {3.7709940408509007`*^9, 3.770994141677906*^9}, {
   3.770994246403652*^9, 3.77099425138358*^9}, {3.770994353611541*^9, 
   3.770994354040341*^9}, {3.770994914030635*^9, 3.770994946147437*^9}, {
   3.7709954651567163`*^9, 3.770995505400446*^9}, {3.7709986599641542`*^9, 
   3.770998660298973*^9}, {3.7710118495388412`*^9, 3.7710118517687397`*^9}, 
   3.7710127343746433`*^9, 3.7710133767381067`*^9, {3.771014693341325*^9, 
   3.771014695977476*^9}, {3.771015632968423*^9, 3.7710156386557207`*^9}, {
   3.771016780053336*^9, 3.7710168371652517`*^9}, {3.771019836028833*^9, 
   3.771019858483499*^9}, {3.771019892392631*^9, 3.77101994466614*^9}, {
   3.771020245086034*^9, 3.771020250583447*^9}, {3.771065760523652*^9, 
   3.771065775187561*^9}, 3.7710976405783167`*^9, {3.7711106036087847`*^9, 
   3.771110613350068*^9}},
 CellLabel->
  "In[534]:=",ExpressionUUID->"08aea677-86ab-43e6-a205-d74969b263ad"],

Cell[TextData[{
 StyleBox["findNegation ",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["will give the first occurrence of two structurally negated parts, \
so that we can perform negation rule.",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
  3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
  3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
  3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
  3.771017566006816*^9}, {3.771069915938398*^9, 
  3.771069917665332*^9}},ExpressionUUID->"d9eeb8de-7142-4de0-bd5a-\
7ea8f02aff10"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"identify", " ", "negation", " ", "structures"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"findNegation", "[", "e_", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "loc", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"loc", " ", "=", 
       RowBox[{"SelectFirst", "[", 
        RowBox[{
         RowBox[{"Subsets", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "e", "]"}], "]"}], ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"e", "\[LeftDoubleBracket]", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "\[RightDoubleBracket]"}], "==", 
             RowBox[{"not", "[", 
              RowBox[{"e", "\[LeftDoubleBracket]", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "\[RightDoubleBracket]"}], "]"}]}], "||", 
            RowBox[{
             RowBox[{"not", "[", 
              RowBox[{"e", "\[LeftDoubleBracket]", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "\[RightDoubleBracket]"}], "]"}], "==", 
             RowBox[{"e", "\[LeftDoubleBracket]", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "\[RightDoubleBracket]"}]}]}], ")"}], "&"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{"loc", ",", " ", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}], ",", "_", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Negation\>\"", ",", 
          RowBox[{"ToString", "[", 
           RowBox[{
           "e", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], "]"}],
           ",", 
          RowBox[{"{", "loc", "}"}]}], "}"}]}], "]"}]}]}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.7709965749825497`*^9, 3.7709966744999657`*^9}, {
   3.770998666526845*^9, 3.7709986770774393`*^9}, {3.7710112057804003`*^9, 
   3.771011222331917*^9}, {3.7710113367379837`*^9, 3.771011378227488*^9}, 
   3.771011709124683*^9, {3.7710117411659517`*^9, 3.771011744341846*^9}, {
   3.771011820580412*^9, 3.7710118236982603`*^9}, {3.7710121386635513`*^9, 
   3.771012160128269*^9}, {3.771012448412238*^9, 3.771012449416019*^9}, 
   3.771012738087514*^9, {3.7710200449197483`*^9, 3.771020073317021*^9}, {
   3.771020236037739*^9, 3.771020239567973*^9}, {3.7710657836031227`*^9, 
   3.771065795981872*^9}, {3.77106605737679*^9, 3.771066061242422*^9}, {
   3.771087544233799*^9, 3.771087565789235*^9}, {3.7710878982217827`*^9, 
   3.7710879152157383`*^9}, {3.771097706098179*^9, 3.771097756247624*^9}, {
   3.77109801978929*^9, 3.771098021923477*^9}, {3.771110617478299*^9, 
   3.771110625876199*^9}},
 CellLabel->
  "In[535]:=",ExpressionUUID->"eb0fa907-f0db-4cb1-b787-e89bd9556215"],

Cell[TextData[{
 StyleBox["findDoubleNegation",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" will give the first occurrence of double negation, so that we can \
perform double negation rule.",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
  3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
  3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
  3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
  3.771017588232614*^9}, {3.7710177332133207`*^9, 
  3.771017737082539*^9}},ExpressionUUID->"b1ffac4e-63ed-4ac1-9fea-\
31839df7e846"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"identify", " ", "double", " ", "negations"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"findDoubleNegation", "[", "e_", "]"}], " ", ":=", " ", 
   RowBox[{"Switch", "[", 
    RowBox[{"e", ",", "\[IndentingNewLine]", 
     RowBox[{"not", "[", 
      RowBox[{"not", "[", "_", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Double Negation\>\"", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", "_", ",", 
     RowBox[{"{", "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.770985356760466*^9, 3.770985377559092*^9}, {
   3.770985902350061*^9, 3.770985923249853*^9}, {3.7709923263228703`*^9, 
   3.770992348959597*^9}, {3.7709947310975323`*^9, 3.770994791207759*^9}, {
   3.770994876306774*^9, 3.7709948952971582`*^9}, {3.7709950980629873`*^9, 
   3.770995259028986*^9}, {3.7709955494956512`*^9, 3.770995622384589*^9}, {
   3.77099565722399*^9, 3.7709956580367603`*^9}, 3.770995716632311*^9, {
   3.770995775304345*^9, 3.770995782312221*^9}, {3.770995975120625*^9, 
   3.7709959775689697`*^9}, {3.77099628923668*^9, 3.770996356934951*^9}, {
   3.7709963992901497`*^9, 3.7709964049445343`*^9}, {3.7709964552848253`*^9, 
   3.770996469759488*^9}, {3.770996501997463*^9, 3.7709965088946733`*^9}, {
   3.770997253931643*^9, 3.770997254340617*^9}, 3.771013097419403*^9, {
   3.771014714642362*^9, 3.771014716861034*^9}, 3.771077465746718*^9, {
   3.7710980447274427`*^9, 3.771098050877042*^9}},
 CellLabel->
  "In[536]:=",ExpressionUUID->"b04bc00a-77b2-4056-9ffc-2d7cdf9ba466"],

Cell[TextData[{
 StyleBox["findDeMorgan",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" will give the first occurrence of potential application of De \
Morgan\[CloseCurlyQuote]s laws",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
  3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
  3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
  3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
  3.771017588232614*^9}, {3.7710177332133207`*^9, 3.7710177618499603`*^9}, {
  3.7710233485061493`*^9, 
  3.771023415012866*^9}},ExpressionUUID->"ac130562-1d89-4a52-9c73-\
4b34380f5d35"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"findDeMorgan", "[", 
   RowBox[{"not", "[", 
    RowBox[{"and", "[", "terms__", "]"}], "]"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"\"\<De Morgan\>\"", ",", "\"\<and\>\"", ",", 
    RowBox[{"{", "}"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"findDeMorgan", "[", 
   RowBox[{"not", "[", 
    RowBox[{"or", "[", "terms__", "]"}], "]"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"\"\<De Morgan\>\"", ",", "\"\<or\>\"", ",", 
    RowBox[{"{", "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findDeMorgan", "[", "else_", "]"}], " ", ":=", " ", 
  RowBox[{"{", "}"}]}]}], "Input",
 CellChangeTimes->{{3.7710230769700317`*^9, 3.771023125607579*^9}, {
   3.7710232127075872`*^9, 3.771023237378475*^9}, 3.771023316166266*^9, {
   3.771064279509385*^9, 3.77106428672744*^9}, {3.771066128299556*^9, 
   3.771066186003768*^9}, {3.7710879803394117`*^9, 3.77108801658864*^9}, {
   3.7710881370075274`*^9, 3.7710881384640493`*^9}, {3.7710980656298513`*^9, 
   3.771098076527244*^9}, {3.7710981071228447`*^9, 3.7710981117849894`*^9}},
 CellLabel->
  "In[537]:=",ExpressionUUID->"a1955a9a-4308-449b-94e9-047bb5ca5361"],

Cell[TextData[{
 StyleBox["findDistributive",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" will give the first occurrence of potential application of \
distributive laws",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
  3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
  3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
  3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
  3.771017588232614*^9}, {3.7710177332133207`*^9, 3.7710177618499603`*^9}, {
  3.7710233485061493`*^9, 3.771023415012866*^9}, {3.7710234581244926`*^9, 
  3.771023474236335*^9}},ExpressionUUID->"baadfbad-6364-46ab-977c-\
980cc24e69a4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"findOrDistributive", "[", 
   RowBox[{"or", "[", "terms__", "]"}], "]"}], " ", ":=", "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"index", " ", "=", 
      RowBox[{"SelectFirst", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", 
          RowBox[{"{", "terms", "}"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", "terms", "}"}], "\[LeftDoubleBracket]", "#", 
             "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "0", 
            "\[RightDoubleBracket]"}], "===", "and"}], ")"}], "&"}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Switch", "[", 
     RowBox[{"index", ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}], ",", "1", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Distribution\>\"", ",", "or", ",", "2", ",", "index", ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", "_", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Distribution\>\"", ",", "or", ",", "1", ",", "index", ",", 
        RowBox[{"{", "}"}]}], "}"}]}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"findAndDistributive", "[", 
   RowBox[{"and", "[", "terms__", "]"}], "]"}], " ", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"index", " ", "=", 
      RowBox[{"SelectFirst", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", 
          RowBox[{"{", "terms", "}"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", "terms", "}"}], "\[LeftDoubleBracket]", "#", 
             "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "0", 
            "\[RightDoubleBracket]"}], "===", "or"}], ")"}], "&"}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Switch", "[", 
     RowBox[{"index", ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}], ",", "1", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Distribution\>\"", ",", "and", ",", "2", ",", "index", ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", "_", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Distribution\>\"", ",", "and", ",", "1", ",", "index", ",", 
        RowBox[{"{", "}"}]}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findOrDistributive", "[", "else_", "]"}], " ", ":=", " ", 
  RowBox[{"{", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findAndDistributive", "[", "else_", "]"}], " ", ":=", " ", 
  RowBox[{"{", "}"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQrVxa2jBV4o0ji0FWE4i+IHtKeAWQ7pLzkADRemvY
ZUH0Hy1TBRBd92maKoi+8+OdGoj+tZpBcg+QnvRzqQyI3mG1bfFeIP3D6ehW
EP1uK9MLEJ29ZiqYfuUw6w2IVjvU9Q5EW5vP+gGisw5c/w2ir3RrNJ8B0ttu
zGsD0Ye2vuwF0VN+SvaBaEmmw6vPAWmXqUc2gui9s9WPgOjZqRPBNNePTydB
dJD5qfMgOqJ0/T0Q/UVY4wGInnr8Zs8FIK1xr7IfRK8IFJS4CKTPRDNLguig
nISlIHrXNfZlIHrqxyOLngPpk15KS0G0wd4//O/B7p4jAKKXyVsogOiGfBUl
EA0A2X+t2A==
  "],
 CellLabel->
  "In[635]:=",ExpressionUUID->"762118ee-588b-4b8b-9e5e-302ff05201a2"],

Cell[TextData[{
 StyleBox["findAssociative",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" will give the first occurrence of potential application of \
associative laws",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
  3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
  3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
  3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
  3.771017588232614*^9}, {3.7710177332133207`*^9, 3.7710177618499603`*^9}, {
  3.7710233485061493`*^9, 3.771023415012866*^9}, {3.7710234581244926`*^9, 
  3.771023474236335*^9}, {3.7710700893853292`*^9, 
  3.7710700983581133`*^9}},ExpressionUUID->"c195e7e0-1ec6-4b5b-b4b1-\
aac28a526eaf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"findAssociative", "[", 
   RowBox[{"or", "[", "terms__", "]"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"index", " ", "=", 
      RowBox[{"SelectFirst", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", 
          RowBox[{"{", "terms", "}"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", "terms", "}"}], "\[LeftDoubleBracket]", "#", 
             "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "0", 
            "\[RightDoubleBracket]"}], "===", "or"}], ")"}], "&"}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Switch", "[", 
     RowBox[{"index", " ", ",", " ", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}], ",", "_", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Association\>\"", ",", 
        RowBox[{"{", "index", "}"}]}], "}"}]}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"findAssociative", "[", 
   RowBox[{"and", "[", "terms__", "]"}], "]"}], " ", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"index", " ", "=", 
      RowBox[{"SelectFirst", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", 
          RowBox[{"{", "terms", "}"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", "terms", "}"}], "\[LeftDoubleBracket]", "#", 
             "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "0", 
            "\[RightDoubleBracket]"}], "===", "and"}], ")"}], "&"}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Switch", "[", 
     RowBox[{"index", " ", ",", " ", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}], ",", "_", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Association\>\"", ",", 
        RowBox[{"{", "index", "}"}]}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findAssociative", "[", "else_", "]"}], " ", ":=", 
  RowBox[{"{", "}"}]}]}], "Input",
 CellChangeTimes->{{3.771023662726554*^9, 3.7710236740118637`*^9}, {
   3.771064224102158*^9, 3.77106424327868*^9}, {3.771067825672502*^9, 
   3.771067825923471*^9}, 3.7710679082993717`*^9, {3.771068153619413*^9, 
   3.771068199340713*^9}, {3.77109823790578*^9, 3.771098279162908*^9}, {
   3.7711012743456182`*^9, 3.771101292893713*^9}, {3.771110637322145*^9, 
   3.771110655755856*^9}},
 CellLabel->
  "In[544]:=",ExpressionUUID->"425c3aea-2897-4720-9998-84666cf73776"],

Cell[TextData[{
 StyleBox["findAbsorption",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" will give the first occurrence of potential application of \
absorption (DO WE NEED THIS?)",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
  3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
  3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
  3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
  3.771017588232614*^9}, {3.7710177332133207`*^9, 3.7710177618499603`*^9}, {
  3.7710233485061493`*^9, 3.771023415012866*^9}, {3.7710234581244926`*^9, 
  3.771023474236335*^9}, {3.771070221644784*^9, 
  3.771070240994492*^9}},ExpressionUUID->"a3bd9b47-7851-4a30-b5ef-\
81dabccc358f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"findElementInTerm", "[", 
   RowBox[{"ele_", ",", "terms_"}], "]"}], ":=", 
  RowBox[{"SelectFirst", "[", 
   RowBox[{"terms", ",", 
    RowBox[{
     RowBox[{"ele", "\[Equal]", " ", "#"}], "&"}], ",", 
    RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findElementsInOrTerm", "[", 
   RowBox[{"eles_", ",", 
    RowBox[{"or", "[", "terms__", "]"}]}], "]"}], ":=", " ", 
  RowBox[{"SelectFirst", "[", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "eles", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"findElementInTerm", "[", 
       RowBox[{
        RowBox[{
        "eles", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", "terms", "}"}]}], "]"}], "=!=", 
      RowBox[{"{", "}"}]}], "&"}], ",", 
    RowBox[{"{", "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.771151996259465*^9, 3.771152149922484*^9}, {
   3.7711524400388308`*^9, 3.771152540604372*^9}, {3.771152615169681*^9, 
   3.7711527791584177`*^9}, {3.771153188493896*^9, 3.771153188638775*^9}, 
   3.771153340127449*^9},
 CellLabel->
  "In[547]:=",ExpressionUUID->"dc15280b-9ab1-4dc4-a1d5-0f9770e9ea2d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"findAbsorption", "[", 
   RowBox[{"and", "[", "terms__", "]"}], "]"}], " ", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eIndex", ",", "tIndex"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tIndex", "=", 
      RowBox[{"SelectFirst", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", 
          RowBox[{"{", "terms", "}"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", "terms", "}"}], "\[LeftDoubleBracket]", 
            RowBox[{"#", ",", "0"}], "\[RightDoubleBracket]"}], "\[Equal]", 
           " ", "or"}], "&&", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"eIndex", " ", "=", 
             RowBox[{"findElementsInOrTerm", "[", 
              RowBox[{
               RowBox[{"{", "terms", "}"}], ",", 
               RowBox[{
                RowBox[{"{", "terms", "}"}], "\[LeftDoubleBracket]", "#", 
                "\[RightDoubleBracket]"}]}], "]"}]}], ")"}], "=!=", 
           RowBox[{"{", "}"}]}]}], "&"}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{"tIndex", ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}], ",", "_", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Absorption\>\"", ",", "tIndex", ",", "eIndex", ",", 
         RowBox[{"{", "}"}]}], "}"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findAbsorption", "[", "else_", "]"}], " ", ":=", " ", 
  RowBox[{"{", "}"}]}]}], "Input",
 CellChangeTimes->{{3.7710237965313063`*^9, 3.771023803430291*^9}, {
   3.771023891640092*^9, 3.771023891971923*^9}, {3.771064174898272*^9, 
   3.77106418992575*^9}, {3.771067151610568*^9, 3.771067187795834*^9}, {
   3.771067295356801*^9, 3.7710673203754253`*^9}, {3.77106735233179*^9, 
   3.771067385385818*^9}, {3.771067539050202*^9, 3.771067642140925*^9}, {
   3.7710695359026537`*^9, 3.7710695711668587`*^9}, 3.77106965288503*^9, {
   3.7710769315748653`*^9, 3.771076946112379*^9}, {3.7711508067809668`*^9, 
   3.771150913521076*^9}, {3.771151638268508*^9, 3.7711518069508038`*^9}, {
   3.771151880297722*^9, 3.771151989611814*^9}, {3.771152099663226*^9, 
   3.7711521073834877`*^9}, {3.7711521759354*^9, 3.771152324007291*^9}, {
   3.771152785705201*^9, 3.7711527866308937`*^9}, {3.771152868354751*^9, 
   3.771152872963068*^9}, {3.771152915749528*^9, 3.7711529169573727`*^9}, {
   3.771152974531556*^9, 3.771152975269939*^9}, {3.771153428767901*^9, 
   3.771153612195266*^9}, {3.771153650684321*^9, 3.771153653982745*^9}},
 CellLabel->
  "In[549]:=",ExpressionUUID->"23c31092-215a-4b54-8fd3-aea5f116e1c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
FindTransformation: given a potential step, apply it to the expression\
\>", "Subsection",
 CellChangeTimes->{{3.7710161524133472`*^9, 3.7710161821909227`*^9}, {
  3.771070293404805*^9, 
  3.771070301098194*^9}},ExpressionUUID->"6614ac33-d494-4bb0-95d8-\
696b01008f6d"],

Cell[TextData[{
 StyleBox["applyTransformation",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" will take a step in the format given by findTransformation and \
apply the step to the given expression",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
  3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
  3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
  3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
  3.771017588232614*^9}, {3.7710177332133207`*^9, 3.7710177618499603`*^9}, {
  3.7710233485061493`*^9, 3.771023415012866*^9}, {3.7710234581244926`*^9, 
  3.771023474236335*^9}, {3.771070221644784*^9, 3.771070240994492*^9}, {
  3.771070349276322*^9, 
  3.771070396532852*^9}},ExpressionUUID->"0b413272-d19e-4fec-88f5-\
7f754b5205fb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"applyStep", "[", 
   RowBox[{"e_", ",", 
    RowBox[{"{", "}"}]}], "]"}], ":=", 
  RowBox[{"{", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"applyStep", "[", 
   RowBox[{"e_", ",", "trans_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Switch", "[", 
   RowBox[{
    RowBox[{"First", "[", "trans", "]"}], ",", "\[IndentingNewLine]", 
    "\"\<Identity\>\"", ",", 
    RowBox[{"applyIdentity", "[", 
     RowBox[{"e", ",", "trans"}], "]"}], ",", "\[IndentingNewLine]", 
    "\"\<Domination\>\"", ",", 
    RowBox[{"applyDomination", "[", 
     RowBox[{"e", ",", "trans"}], "]"}], ",", "\[IndentingNewLine]", 
    "\"\<True\>\"", ",", 
    RowBox[{"applyTrue", "[", 
     RowBox[{"e", ",", "trans"}], "]"}], ",", "\[IndentingNewLine]", 
    "\"\<False\>\"", ",", 
    RowBox[{"applyFalse", "[", 
     RowBox[{"e", ",", "trans"}], "]"}], ",", "\[IndentingNewLine]", 
    "\"\<Idempotent\>\"", ",", 
    RowBox[{"applyIdempotent", "[", 
     RowBox[{"e", ",", "trans"}], "]"}], ",", "\[IndentingNewLine]", 
    "\"\<Negation\>\"", ",", 
    RowBox[{"applyNegation", "[", 
     RowBox[{"e", ",", "trans"}], "]"}], ",", "\[IndentingNewLine]", 
    "\"\<Double Negation\>\"", ",", 
    RowBox[{"applyDoubleNegation", "[", 
     RowBox[{"e", ",", "trans"}], "]"}], ",", "\[IndentingNewLine]", 
    "\"\<De Morgan\>\"", ",", " ", 
    RowBox[{"applyDeMorgan", "[", 
     RowBox[{"e", ",", "trans"}], "]"}], ",", "\[IndentingNewLine]", 
    "\"\<Distribution\>\"", ",", 
    RowBox[{"applyDistributive", "[", 
     RowBox[{"e", ",", "trans"}], "]"}], ",", "\[IndentingNewLine]", 
    "\"\<Association\>\"", ",", 
    RowBox[{"applyAssociative", "[", 
     RowBox[{"e", ",", "trans"}], "]"}], ",", "\[IndentingNewLine]", 
    "\"\<Absorption\>\"", ",", 
    RowBox[{"applyAbsorption", "[", 
     RowBox[{"e", ",", "trans"}], "]"}], ",", "\[IndentingNewLine]", "_", 
    ",", "\"\<can't find rule\>\""}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.771069716884012*^9, 3.771069883997912*^9}, {
   3.771069970050687*^9, 3.7710700292169847`*^9}, {3.771070065243783*^9, 
   3.771070073700658*^9}, {3.7710701253823147`*^9, 3.771070133473336*^9}, {
   3.771071048588986*^9, 3.771071049123081*^9}, {3.771077143983238*^9, 
   3.771077160860466*^9}, {3.771077962613071*^9, 3.771077972145493*^9}, {
   3.7710808588471813`*^9, 3.7710808797689753`*^9}, {3.77108283085061*^9, 
   3.771082836915634*^9}, {3.771083033677281*^9, 3.771083044267714*^9}, {
   3.7710836751013737`*^9, 3.771083677565989*^9}, 3.771088433796735*^9, {
   3.77108989385114*^9, 3.771089907995324*^9}, {3.77109944455604*^9, 
   3.7710994450003757`*^9}, {3.7710996888285923`*^9, 3.77109969475565*^9}, {
   3.771101443708247*^9, 3.771101444888981*^9}, {3.771106450180827*^9, 
   3.771106450657586*^9}, {3.771107479599202*^9, 3.771107480537546*^9}, {
   3.771149878941915*^9, 3.771149884993433*^9}, {3.771154037709647*^9, 
   3.7711540557970953`*^9}, {3.771154605954088*^9, 3.771154608597262*^9}, {
   3.771168911883086*^9, 3.771168912045905*^9}},
 CellLabel->
  "In[629]:=",ExpressionUUID->"7067600c-7be7-4994-a62f-ae34228338b3"],

Cell[TextData[{
 StyleBox["these helper functions",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" add options to replace or extract entire expressions",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
  3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
  3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
  3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
  3.771017588232614*^9}, {3.7710177332133207`*^9, 3.7710177618499603`*^9}, {
  3.7710233485061493`*^9, 3.771023415012866*^9}, {3.7710234581244926`*^9, 
  3.771023474236335*^9}, {3.771070221644784*^9, 3.771070240994492*^9}, {
  3.771070349276322*^9, 3.771070396532852*^9}, {3.771070466211644*^9, 
  3.771070510899382*^9}, {3.771087395076209*^9, 
  3.771087436349955*^9}},ExpressionUUID->"52339c3e-f2d8-416b-bf3c-\
3cdb61fc504e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"replacePart", "[", 
   RowBox[{"e_", ",", 
    RowBox[{"{", "}"}], ",", "new_"}], "]"}], ":=", " ", 
  "new"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"replacePart", "[", 
   RowBox[{"e_", ",", "loc_", ",", "new_"}], "]"}], ":=", " ", 
  RowBox[{"ReplacePart", "[", 
   RowBox[{"e", ",", 
    RowBox[{"loc", "\[Rule]", "new"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7710861874086523`*^9, 3.7710862283968573`*^9}, {
  3.771086392507057*^9, 3.7710863937761707`*^9}, {3.7710864359373283`*^9, 
  3.771086447127178*^9}, {3.771086491272346*^9, 3.771086558111211*^9}},
 CellLabel->
  "In[555]:=",ExpressionUUID->"aa4c1922-644a-40c7-bd8a-40119305c437"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"extract", "[", 
   RowBox[{"e_", ",", 
    RowBox[{"{", "}"}]}], "]"}], ":=", " ", "e"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"extract", "[", 
   RowBox[{"e_", ",", "loc_"}], "]"}], ":=", " ", 
  RowBox[{"Extract", "[", 
   RowBox[{"e", ",", "loc"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.771086943439569*^9, 3.771086980366029*^9}},
 CellLabel->
  "In[557]:=",ExpressionUUID->"7dd26ac3-9937-4af4-a837-b71584c300e6"],

Cell[TextData[{
 StyleBox["reduceSingle",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" removes the And/Or wrapper if there are 0 or 1 terms left",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
   3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
   3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
   3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
   3.771017588232614*^9}, {3.7710177332133207`*^9, 3.7710177618499603`*^9}, {
   3.7710233485061493`*^9, 3.771023415012866*^9}, {3.7710234581244926`*^9, 
   3.771023474236335*^9}, {3.771070221644784*^9, 3.771070240994492*^9}, {
   3.771070349276322*^9, 3.771070396532852*^9}, {3.771070466211644*^9, 
   3.771070510899382*^9}, {3.7710823199277153`*^9, 3.7710823246458282`*^9}, 
   3.771154158656398*^9},ExpressionUUID->"8ea7d019-fe19-48f6-9c3a-\
8ac01a084aaa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"reduceSingle", "[", "e_", "]"}], ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "e", "]"}], "\[LessEqual]", "1"}], ",", 
    RowBox[{"e", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
    "e"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771082069884561*^9, 3.7710821146704397`*^9}, {
  3.771082146402027*^9, 3.771082166814931*^9}},
 CellLabel->
  "In[559]:=",ExpressionUUID->"b18aea46-5290-45c2-bb7d-2e38a645c228"],

Cell[TextData[{
 StyleBox["applyIdentity",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" removes the given literal from the And/Or expression",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
   3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
   3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
   3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
   3.771017588232614*^9}, {3.7710177332133207`*^9, 3.7710177618499603`*^9}, {
   3.7710233485061493`*^9, 3.771023415012866*^9}, {3.7710234581244926`*^9, 
   3.771023474236335*^9}, {3.771070221644784*^9, 3.771070240994492*^9}, {
   3.771070349276322*^9, 3.771070396532852*^9}, {3.771070466211644*^9, 
   3.771070510899382*^9}, {3.771082332468927*^9, 3.7710823503038177`*^9}, 
   3.771154157175849*^9},ExpressionUUID->"db3f1214-15ad-4093-a60f-\
ac88cd700d51"],

Cell[BoxData[
 RowBox[{
  RowBox[{"applyIdentity", "[", 
   RowBox[{"e_", ",", 
    RowBox[{"{", 
     RowBox[{"_", ",", "_", ",", "loc_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"\"\<Identity\>\"", ",", 
    RowBox[{"replacePart", "[", 
     RowBox[{"e", ",", 
      RowBox[{"Most", "[", "loc", "]"}], ",", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"extract", "[", 
           RowBox[{"e", ",", 
            RowBox[{"Most", "[", "loc", "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"Last", "[", "loc", "]"}], "}"}]}], "]"}], " ", "//", " ", 
        "reduceSingle"}], ")"}]}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771070600268106*^9, 3.771070603586211*^9}, {
   3.771070681766149*^9, 3.771070697140252*^9}, {3.771070899531735*^9, 
   3.771070979288178*^9}, {3.771071116517167*^9, 3.7710711187131233`*^9}, {
   3.771079391048622*^9, 3.771079397616768*^9}, {3.771081213786212*^9, 
   3.771081238569627*^9}, {3.771081627354477*^9, 3.771081627422978*^9}, {
   3.771081898108033*^9, 3.771081981778482*^9}, {3.771082182047853*^9, 
   3.771082214738393*^9}, {3.771082353719236*^9, 3.771082355398979*^9}, 
   3.7710866143785563`*^9, {3.771086710149043*^9, 3.771086729194693*^9}, {
   3.771086784165573*^9, 3.771086789755002*^9}, {3.7710868901102552`*^9, 
   3.771086905734733*^9}, {3.771086987890416*^9, 3.771086988956649*^9}, {
   3.77110454360115*^9, 3.771104554925516*^9}},
 CellLabel->
  "In[560]:=",ExpressionUUID->"92fd511b-3094-4297-bdde-fe37b8eed635"],

Cell[TextData[{
 StyleBox["applyIdentity",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" replaces the And/Or expression with True or False ",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
   3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
   3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
   3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
   3.771017588232614*^9}, {3.7710177332133207`*^9, 3.7710177618499603`*^9}, {
   3.7710233485061493`*^9, 3.771023415012866*^9}, {3.7710234581244926`*^9, 
   3.771023474236335*^9}, {3.771070221644784*^9, 3.771070240994492*^9}, {
   3.771070349276322*^9, 3.771070396532852*^9}, {3.771070466211644*^9, 
   3.771070510899382*^9}, {3.771082332468927*^9, 3.7710823503038177`*^9}, 
   3.7710824531923656`*^9, 
   3.7711541552954607`*^9},ExpressionUUID->"483716ad-d538-4e70-9be6-\
26f0bb41c5fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"applyDomination", "[", 
   RowBox[{"e_", ",", 
    RowBox[{"{", 
     RowBox[{"_", ",", "\"\<and\>\"", ",", "loc_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"replacePart", "[", 
   RowBox[{"e", ",", 
    RowBox[{"Most", "[", "loc", "]"}], ",", " ", "false"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"applyDomination", "[", 
   RowBox[{"e_", ",", 
    RowBox[{"{", 
     RowBox[{"_", ",", "\"\<or\>\"", ",", "loc_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"replacePart", "[", 
   RowBox[{"e", ",", 
    RowBox[{"Most", "[", "loc", "]"}], ",", " ", "true"}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.7710709955501223`*^9, 3.7710710187245407`*^9}, {
  3.7710808250954657`*^9, 3.771080834735112*^9}, {3.771080930047481*^9, 
  3.771080945470973*^9}, {3.7710809930231256`*^9, 3.771081097790291*^9}, {
  3.77108115561383*^9, 3.771081181681798*^9}, {3.771082455720992*^9, 
  3.77108245792155*^9}, {3.771086620644936*^9, 3.7710866236168747`*^9}, {
  3.77108712647742*^9, 3.77108712925228*^9}, {3.7710997191295767`*^9, 
  3.77109972360608*^9}, {3.771100240226829*^9, 3.7711002420480967`*^9}},
 CellLabel->
  "In[561]:=",ExpressionUUID->"8fa2ae9a-50e8-4381-81d1-8095389b57ab"],

Cell[TextData[{
 StyleBox["applyTrue/applyFalse",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" replaces the Not expression with True or False",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
   3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
   3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
   3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
   3.771017588232614*^9}, {3.7710177332133207`*^9, 3.7710177618499603`*^9}, {
   3.7710233485061493`*^9, 3.771023415012866*^9}, {3.7710234581244926`*^9, 
   3.771023474236335*^9}, {3.771070221644784*^9, 3.771070240994492*^9}, {
   3.771070349276322*^9, 3.771070396532852*^9}, {3.771070466211644*^9, 
   3.771070510899382*^9}, {3.771082332468927*^9, 3.7710823503038177`*^9}, 
   3.7710824531923656`*^9, {3.7710825111944304`*^9, 3.771082540403534*^9}, 
   3.7711541540622997`*^9},ExpressionUUID->"6746a5b6-1bd1-49e8-9e76-\
ff322efc46bb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"applyTrue", "[", 
   RowBox[{"e_", ",", 
    RowBox[{"{", 
     RowBox[{"_", ",", "_", ",", "loc_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"replacePart", "[", 
   RowBox[{"e", ",", 
    RowBox[{"Most", "[", "loc", "]"}], ",", "true"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"applyFalse", "[", 
   RowBox[{"e_", ",", 
    RowBox[{"{", 
     RowBox[{"_", ",", "_", ",", "loc_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"replacePart", "[", 
   RowBox[{"e", ",", 
    RowBox[{"Most", "[", "loc", "]"}], ",", "false"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7710710264792233`*^9, 3.7710710404144506`*^9}, {
  3.7710711840020123`*^9, 3.771071184328507*^9}, {3.7710825523559217`*^9, 
  3.771082587460547*^9}, {3.771082725890422*^9, 3.771082785098908*^9}, {
  3.771086626405919*^9, 3.771086629351994*^9}, {3.77108716379816*^9, 
  3.771087169344492*^9}, {3.771100276221551*^9, 3.7711002796645803`*^9}, {
  3.7711082842860107`*^9, 3.771108285836521*^9}},
 CellLabel->
  "In[563]:=",ExpressionUUID->"8a762784-d42f-4a9c-a2c9-20e40eac5d29"],

Cell[TextData[{
 StyleBox["applyIdempotent",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" removes a duplicate expression, remove the entire And/Or wrapper \
if there are 0 or 1 terms left",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
   3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
   3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
   3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
   3.771017588232614*^9}, {3.7710177332133207`*^9, 3.7710177618499603`*^9}, {
   3.7710233485061493`*^9, 3.771023415012866*^9}, {3.7710234581244926`*^9, 
   3.771023474236335*^9}, {3.771070221644784*^9, 3.771070240994492*^9}, {
   3.771070349276322*^9, 3.771070396532852*^9}, {3.771070466211644*^9, 
   3.771070510899382*^9}, {3.771082332468927*^9, 3.7710823503038177`*^9}, 
   3.7710824531923656`*^9, {3.7710825111944304`*^9, 3.771082540403534*^9}, {
   3.771083011754135*^9, 3.7710830228866796`*^9}, {3.771154150440117*^9, 
   3.7711541523292923`*^9}},ExpressionUUID->"541f7c9c-3335-4548-b5e9-\
b1d1e2ffa5b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"applyIdempotent", "[", 
   RowBox[{"e_", ",", 
    RowBox[{"{", 
     RowBox[{"_", ",", "loc_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"replacePart", "[", 
   RowBox[{"e", ",", 
    RowBox[{"Most", "[", "loc", "]"}], ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"extract", "[", 
         RowBox[{"e", ",", 
          RowBox[{"Most", "[", "loc", "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Last", "[", "loc", "]"}], "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}], "}"}]}], "]"}], " ", "//", " ", 
      "reduceSingle"}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7710710967471457`*^9, 3.771071158836544*^9}, 
   3.771071193704659*^9, 3.771083027386051*^9, {3.771083146456582*^9, 
   3.7710831843609953`*^9}, {3.7710832241659822`*^9, 3.7710832406985598`*^9}, 
   3.7710866316449547`*^9, {3.771087216246017*^9, 3.771087217591999*^9}, {
   3.771087269057877*^9, 3.7710872763216476`*^9}},
 CellLabel->
  "In[565]:=",ExpressionUUID->"16cf8ca5-252d-4c8f-9be6-0bca73a24552"],

Cell[TextData[{
 StyleBox["applyNegation",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" replaces the And/Or expression with True or False",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
   3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
   3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
   3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
   3.771017588232614*^9}, {3.7710177332133207`*^9, 3.7710177618499603`*^9}, {
   3.7710233485061493`*^9, 3.771023415012866*^9}, {3.7710234581244926`*^9, 
   3.771023474236335*^9}, {3.771070221644784*^9, 3.771070240994492*^9}, {
   3.771070349276322*^9, 3.771070396532852*^9}, {3.771070466211644*^9, 
   3.771070510899382*^9}, {3.771082332468927*^9, 3.7710823503038177`*^9}, 
   3.7710824531923656`*^9, {3.7710825111944304`*^9, 3.771082540403534*^9}, {
   3.771083011754135*^9, 3.7710830228866796`*^9}, {3.771083371708887*^9, 
   3.771083383941738*^9}, 
   3.771154149295814*^9},ExpressionUUID->"e09281b9-9a93-4dcc-afa7-\
9ba04559d58c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"applyNegation", "[", 
   RowBox[{"e_", ",", 
    RowBox[{"{", 
     RowBox[{"_", ",", "\"\<and\>\"", ",", "loc_"}], "}"}]}], "]"}], ":=", 
  " ", 
  RowBox[{"replacePart", "[", 
   RowBox[{"e", ",", 
    RowBox[{"Most", "[", "loc", "]"}], ",", " ", "false"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"applyNegation", "[", 
   RowBox[{"e_", ",", 
    RowBox[{"{", 
     RowBox[{"_", ",", "\"\<or\>\"", ",", "loc_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"replacePart", "[", 
   RowBox[{"e", ",", 
    RowBox[{"Most", "[", "loc", "]"}], ",", " ", "true"}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.771071161638982*^9, 3.7710711912598963`*^9}, {
  3.771083376502655*^9, 3.771083378958591*^9}, {3.7710835811739817`*^9, 
  3.77108365463857*^9}, {3.7710837340621843`*^9, 3.771083742786244*^9}, {
  3.7710866338578997`*^9, 3.771086637219223*^9}, {3.771087292548555*^9, 
  3.771087329063477*^9}, {3.771100349660915*^9, 3.771100355654502*^9}},
 CellLabel->
  "In[566]:=",ExpressionUUID->"63bf0f30-27aa-4ddf-a1bc-46a0c0a21eb7"],

Cell[TextData[{
 StyleBox["applyDoubleNegation",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" removes the double negation wrapper",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
   3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
   3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
   3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
   3.771017588232614*^9}, {3.7710177332133207`*^9, 3.7710177618499603`*^9}, {
   3.7710233485061493`*^9, 3.771023415012866*^9}, {3.7710234581244926`*^9, 
   3.771023474236335*^9}, {3.771070221644784*^9, 3.771070240994492*^9}, {
   3.771070349276322*^9, 3.771070396532852*^9}, {3.771070466211644*^9, 
   3.771070510899382*^9}, {3.771082332468927*^9, 3.7710823503038177`*^9}, 
   3.7710824531923656`*^9, {3.7710825111944304`*^9, 3.771082540403534*^9}, {
   3.771083011754135*^9, 3.7710830228866796`*^9}, {3.771083371708887*^9, 
   3.771083383941738*^9}, {3.771083772468584*^9, 3.771083778314313*^9}, 
   3.771154147969159*^9},ExpressionUUID->"832d960f-a2e1-440e-ad37-\
81ff4e05edc6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"applyDoubleNegation", "[", 
   RowBox[{"e_", ",", 
    RowBox[{"{", 
     RowBox[{"_", ",", "loc_"}], "}"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"replacePart", "[", 
   RowBox[{"e", ",", "loc", ",", 
    RowBox[{"extract", "[", 
     RowBox[{"e", ",", 
      RowBox[{"Join", "[", 
       RowBox[{"loc", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "]"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.771071208552639*^9, 3.7710712196366243`*^9}, {
   3.771077133322974*^9, 3.771077136087603*^9}, {3.771077346072131*^9, 
   3.771077354922275*^9}, {3.771077854405308*^9, 3.771077935032189*^9}, {
   3.7710792809492702`*^9, 3.771079297182988*^9}, {3.771080890209795*^9, 
   3.77108089885879*^9}, {3.771083781498122*^9, 3.771083784290061*^9}, 
   3.771086640673111*^9, {3.7710873519753933`*^9, 3.7710873540302553`*^9}},
 CellLabel->
  "In[568]:=",ExpressionUUID->"524e8ca1-3c29-4afe-91d0-1d99d4901e18"],

Cell[TextData[{
 StyleBox["applyDeMorgan",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" switches And/Or and map Not to all elements",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
   3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
   3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
   3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
   3.771017588232614*^9}, {3.7710177332133207`*^9, 3.7710177618499603`*^9}, {
   3.7710233485061493`*^9, 3.771023415012866*^9}, {3.7710234581244926`*^9, 
   3.771023474236335*^9}, {3.771070221644784*^9, 3.771070240994492*^9}, {
   3.771070349276322*^9, 3.771070396532852*^9}, {3.771070466211644*^9, 
   3.771070510899382*^9}, {3.771082332468927*^9, 3.7710823503038177`*^9}, 
   3.7710824531923656`*^9, {3.7710825111944304`*^9, 3.771082540403534*^9}, {
   3.771083011754135*^9, 3.7710830228866796`*^9}, {3.771083371708887*^9, 
   3.771083383941738*^9}, {3.771083772468584*^9, 3.771083805638543*^9}, {
   3.7711541460572433`*^9, 
   3.771154146220006*^9}},ExpressionUUID->"0ab64af2-f68e-46b1-a992-\
64140045c1db"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"applyDeMorgan", "[", 
   RowBox[{"e_", ",", 
    RowBox[{"{", 
     RowBox[{"_", ",", "\"\<and\>\"", ",", "loc_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"replacePart", "[", 
   RowBox[{"e", ",", "loc", ",", 
    RowBox[{"or", " ", "@@", 
     RowBox[{"not", " ", "/@", " ", 
      RowBox[{
       RowBox[{"extract", "[", 
        RowBox[{"e", ",", "loc"}], "]"}], "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}]}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"applyDeMorgan", "[", 
   RowBox[{"e_", ",", 
    RowBox[{"{", 
     RowBox[{"_", ",", "\"\<or\>\"", ",", "loc_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"replacePart", "[", 
   RowBox[{"e", ",", "loc", ",", 
    RowBox[{"and", " ", "@@", 
     RowBox[{"not", " ", "/@", " ", 
      RowBox[{
       RowBox[{"extract", "[", 
        RowBox[{"e", ",", "loc"}], "]"}], "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}]}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7710712567347317`*^9, 3.771071276680941*^9}, 
   3.771083829206032*^9, {3.771083942055818*^9, 3.7710839496588507`*^9}, {
   3.771088054784597*^9, 3.771088108932577*^9}, {3.771088161192542*^9, 
   3.7710882784080153`*^9}, {3.771088318400962*^9, 3.771088330607789*^9}, {
   3.771088396536631*^9, 3.771088413338439*^9}, {3.7710884660593157`*^9, 
   3.771088634190102*^9}, {3.771088737894466*^9, 3.7710887891842403`*^9}, {
   3.7710888493641367`*^9, 3.771088875591661*^9}, {3.771090090112296*^9, 
   3.7710901933362494`*^9}, {3.771090679698484*^9, 3.771090697698601*^9}, {
   3.7710907951098948`*^9, 3.7710908003239*^9}, {3.77109091225237*^9, 
   3.7710909829783077`*^9}, {3.771100418929509*^9, 3.771100456687813*^9}},
 CellLabel->
  "In[569]:=",ExpressionUUID->"2c9ce2ea-2cec-40e4-ab58-d184cc206747"],

Cell[TextData[{
 StyleBox["applyDistributive",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" maps the outside And to the inside",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
   3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
   3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
   3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
   3.771017588232614*^9}, {3.7710177332133207`*^9, 3.7710177618499603`*^9}, {
   3.7710233485061493`*^9, 3.771023415012866*^9}, {3.7710234581244926`*^9, 
   3.771023474236335*^9}, {3.771070221644784*^9, 3.771070240994492*^9}, {
   3.771070349276322*^9, 3.771070396532852*^9}, {3.771070466211644*^9, 
   3.771070510899382*^9}, {3.771082332468927*^9, 3.7710823503038177`*^9}, 
   3.7710824531923656`*^9, {3.7710825111944304`*^9, 3.771082540403534*^9}, {
   3.771083011754135*^9, 3.7710830228866796`*^9}, {3.771083371708887*^9, 
   3.771083383941738*^9}, {3.771083772468584*^9, 3.771083805638543*^9}, {
   3.7711084332750273`*^9, 3.771108448680572*^9}, 3.771154144859182*^9, {
   3.77116895521852*^9, 
   3.771168955393392*^9}},ExpressionUUID->"95323f73-eff9-4f16-8f8c-\
bd9918edd730"],

Cell[BoxData[
 RowBox[{
  RowBox[{"applyDistributive", "[", 
   RowBox[{"e_", ",", 
    RowBox[{"{", 
     RowBox[{"_", ",", "oper_", ",", "left_", ",", "right_", ",", "loc_"}], 
     "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "smaller", ",", "bigger", ",", "orig", ",", "dropped", ",", "new"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"smaller", ",", "bigger"}], "}"}], "=", 
      RowBox[{"Sort", "@", 
       RowBox[{"{", 
        RowBox[{"left", ",", "right"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"orig", "=", 
      RowBox[{"extract", "[", 
       RowBox[{"e", ",", "loc"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dropped", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", "smaller", "}"}]}], "]"}], "&"}], "@", 
         RowBox[{"Drop", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", "bigger", "}"}]}], "]"}]}], "&"}], "@", " ", 
       "orig"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"new", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"oper", "[", 
         RowBox[{
          RowBox[{
          "orig", "\[LeftDoubleBracket]", "left", "\[RightDoubleBracket]"}], 
          ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{
       "orig", "\[LeftDoubleBracket]", "right", "\[RightDoubleBracket]"}]}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"replacePart", "[", 
      RowBox[{"e", ",", "loc", ",", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"dropped", ",", "new"}], "]"}], "//", "reduceSingle"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQ7eH2Nmu/xBvHYB+NXBB9I+9S0gkg7fjUJRlEd5TO
e3QOSB/5pvUERKcFsP4E0adSpMD0Fo2pIueBdNiy3RIg+pWAhyqIniLyRgdE
1/A/NgfRnxn/24Jo676mUBBtZWwRCaLrmhIlLgDpczJtYPqWWXIniL63Kh1M
Nx9aMhNETw7xWgiiuZ6ePgCi5338dgFEy73fehVESzmufgii16yd8BpE2zVb
MV4E0uw5izlA9J/qVWBa/429Goj+4meuAaI1itP0QPStKfaGIFpYK6wHRLuv
nQamHU8wrnwOpLumnt8KoitE9TnfA+lNZl58IPrW/w3iILor+RWYbuKPlQHR
TiIx8iC6Z1GqCojWYbDSANEAlD+1mQ==
  "],
 CellLabel->
  "In[644]:=",ExpressionUUID->"cf6311cd-c71b-4e23-8f96-1005981a55a8"],

Cell[TextData[{
 StyleBox["applyAssociative",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" flattens the expression",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
   3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
   3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
   3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
   3.771017588232614*^9}, {3.7710177332133207`*^9, 3.7710177618499603`*^9}, {
   3.7710233485061493`*^9, 3.771023415012866*^9}, {3.7710234581244926`*^9, 
   3.771023474236335*^9}, {3.771070221644784*^9, 3.771070240994492*^9}, {
   3.771070349276322*^9, 3.771070396532852*^9}, {3.771070466211644*^9, 
   3.771070510899382*^9}, {3.771082332468927*^9, 3.7710823503038177`*^9}, 
   3.7710824531923656`*^9, {3.7710825111944304`*^9, 3.771082540403534*^9}, {
   3.771083011754135*^9, 3.7710830228866796`*^9}, {3.771083371708887*^9, 
   3.771083383941738*^9}, {3.771083772468584*^9, 3.771083805638543*^9}, {
   3.7711084332750273`*^9, 3.771108474984097*^9}, 
   3.7711541434825983`*^9},ExpressionUUID->"e1ac3e41-cb67-4306-94be-\
82c541db8cf8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"applyAssociative", "[", 
   RowBox[{"e_", ",", 
    RowBox[{"{", 
     RowBox[{"_", ",", "loc_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"replacePart", "[", 
   RowBox[{"e", ",", 
    RowBox[{"Most", "[", "loc", "]"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"extract", "[", 
         RowBox[{"e", ",", 
          RowBox[{"Most", "[", "loc", "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Last", "[", "loc", "]"}], "}"}]}], "]"}], ",", 
      RowBox[{"extract", "[", 
       RowBox[{"e", ",", "loc"}], "]"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771071345338372*^9, 3.7710713574362783`*^9}, {
  3.771101217563476*^9, 3.771101254705679*^9}, {3.771101318528984*^9, 
  3.7711013726291847`*^9}, {3.771101428034916*^9, 3.7711014326776333`*^9}, {
  3.771101471298215*^9, 3.771101473534782*^9}, {3.771101510993054*^9, 
  3.771101520564269*^9}, {3.771101582237191*^9, 3.771101632538517*^9}, {
  3.771101762556582*^9, 3.771101781834511*^9}, {3.7711018197962523`*^9, 
  3.77110186507447*^9}, {3.77110189859766*^9, 3.7711019220467367`*^9}, {
  3.7711019525803757`*^9, 3.771101965127191*^9}, {3.771102088716773*^9, 
  3.771102090689666*^9}, {3.7711084775832*^9, 3.771108478779174*^9}, {
  3.771154096081386*^9, 3.771154099989892*^9}},
 CellLabel->
  "In[572]:=",ExpressionUUID->"eb2e9ba2-3d37-4cf6-a7b9-47e9bb50270d"],

Cell[TextData[{
 StyleBox["applyAbsorption",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" absorbs two terms into one",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.771016056920788*^9, 3.771016135942004*^9}, {
   3.771016240368211*^9, 3.771016250389551*^9}, {3.771016293011264*^9, 
   3.771016294617346*^9}, {3.771016367365562*^9, 3.77101637112563*^9}, {
   3.771016435242133*^9, 3.771016514332366*^9}, {3.77101751481997*^9, 
   3.771017588232614*^9}, {3.7710177332133207`*^9, 3.7710177618499603`*^9}, {
   3.7710233485061493`*^9, 3.771023415012866*^9}, {3.7710234581244926`*^9, 
   3.771023474236335*^9}, {3.771070221644784*^9, 3.771070240994492*^9}, {
   3.771070349276322*^9, 3.771070396532852*^9}, {3.771070466211644*^9, 
   3.771070510899382*^9}, {3.771082332468927*^9, 3.7710823503038177`*^9}, 
   3.7710824531923656`*^9, {3.7710825111944304`*^9, 3.771082540403534*^9}, {
   3.771083011754135*^9, 3.7710830228866796`*^9}, {3.771083371708887*^9, 
   3.771083383941738*^9}, {3.771083772468584*^9, 3.771083805638543*^9}, {
   3.7711084332750273`*^9, 3.771108474984097*^9}, {3.771154013943824*^9, 
   3.771154024561961*^9}},ExpressionUUID->"b4b69c60-c493-44fe-b415-\
6c8b96d86ab3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"applyAbsorption", "[", 
   RowBox[{"e_", ",", 
    RowBox[{"{", 
     RowBox[{"_", ",", "tIndex_", ",", "eIndex_", ",", "loc_"}], "}"}]}], 
   "]"}], ":=", 
  RowBox[{"replacePart", "[", 
   RowBox[{"e", ",", "loc", ",", 
    RowBox[{
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"extract", "[", 
        RowBox[{"e", ",", "loc"}], "]"}], ",", 
       RowBox[{"{", "tIndex", "}"}]}], "]"}], "//", " ", "reduceSingle"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.771154062891364*^9, 3.771154064257823*^9}, {
  3.7711542238398647`*^9, 3.7711542612713223`*^9}, {3.771154405909833*^9, 
  3.771154541638391*^9}, {3.771154698108021*^9, 3.771154700113656*^9}},
 CellLabel->
  "In[573]:=",ExpressionUUID->"117c25b1-9000-4e60-b1f2-425b2a73a461"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
stepList: given a list of steps that reduce a Boolean expression to normal \
form\
\>", "Subsection",
 CellChangeTimes->{{3.7710161524133472`*^9, 3.7710161821909227`*^9}, {
  3.771070293404805*^9, 3.771070301098194*^9}, {3.771087636589881*^9, 
  3.77108769004841*^9}},ExpressionUUID->"cc49cbd2-5397-4501-b93a-\
881194b4f229"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"first", "[", 
    RowBox[{"{", "}"}], "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"first", "[", "list_", "]"}], ":=", 
   RowBox[{"First", "[", "list", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"last", "[", 
    RowBox[{"{", "}"}], "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"last", "[", "list_", "]"}], ":=", 
   RowBox[{"Last", "[", "list", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.771109084776587*^9, 3.771109141365135*^9}},
 CellLabel->
  "In[574]:=",ExpressionUUID->"2dfb3a73-3cfa-40d5-9259-522f9b0802dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"stepList", "[", 
   RowBox[{"e_", ",", "option_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sequence", "=", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "option", ",", "\"\<CNF\>\"", ",", "CNFsequence", ",", "\"\<DNF\>\"", 
        ",", "DNFsequence", ",", "_", ",", "\"\<No such option\>\""}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"NestWhileList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"trans", "=", 
            RowBox[{"findStep", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"first", "[", "trans", "]"}], ",", 
            RowBox[{"last", "[", "trans", "]"}], ",", 
            RowBox[{"applyStep", "[", 
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              ",", "trans"}], "]"}]}], "}"}]}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Initial\>\"", ",", "\"\<\>\"", ",", "e"}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
         "=!=", 
         RowBox[{"{", "}"}]}], "&"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771089753421238*^9, 3.771089872907485*^9}, 
   3.771089923229651*^9, {3.7710900081934233`*^9, 3.771090016792576*^9}, {
   3.771100538249508*^9, 3.7711005842339993`*^9}, {3.771100729915162*^9, 
   3.771100760183967*^9}, {3.771104082586113*^9, 3.7711040868210773`*^9}, {
   3.771104269450424*^9, 3.771104330703474*^9}, {3.771104961777269*^9, 
   3.771105106087969*^9}, {3.771109008116111*^9, 3.771109038582734*^9}, {
   3.7711091451355877`*^9, 3.771109147593454*^9}, {3.77114992497423*^9, 
   3.77114993282279*^9}, {3.771169246245008*^9, 3.7711693019505777`*^9}, {
   3.771169336963846*^9, 3.77116935358709*^9}},
 CellLabel->
  "In[667]:=",ExpressionUUID->"cd9a14e9-be6d-447c-98c0-44f9930a6f35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"stepList", "[", "true", "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.771089926230461*^9, 3.7710899552718143`*^9}, {
   3.771100561557901*^9, 3.771100562111141*^9}, 3.7711104696478662`*^9},
 CellLabel->
  "In[579]:=",ExpressionUUID->"e0cbfb3b-fec7-4429-8d36-02a8c492f314"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"\<\"Initial\"\>", "\<\"\"\>", "true"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{{"Initial", "", $CellContext`true}, {{}, {}, {}}}]]], "Output",
 CellChangeTimes->{{3.771089930718027*^9, 3.771089956172366*^9}, {
   3.7711005626298237`*^9, 3.7711005865823183`*^9}, {3.771100734200495*^9, 
   3.771100747888919*^9}, 3.771104953978384*^9, 3.771108696756712*^9, 
   3.771109531965168*^9, 3.771110470273696*^9, 3.771149948348217*^9, 
   3.771155057305787*^9},
 CellLabel->
  "Out[579]//TableForm=",ExpressionUUID->"ab1c0294-31d7-49e8-b864-\
b4632e75a893"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"stepList", "[", 
   RowBox[{"not", "[", "true", "]"}], "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.771089935742405*^9, 3.771089960037856*^9}, {
   3.771100565862135*^9, 3.7711005713222857`*^9}, 3.771110461624111*^9},
 CellLabel->
  "In[580]:=",ExpressionUUID->"0c6902c3-1a53-43a1-8aa8-9bb9f8f0927e"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"\<\"Initial\"\>", "\<\"\"\>", 
     RowBox[{"not", "[", "true", "]"}]},
    {"\<\"False\"\>", GridBox[{
       {"1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "false"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{{"Initial", "", 
     $CellContext`not[$CellContext`true]}, {
    "False", {1}, $CellContext`false}, {{}, {}, {}}}]]], "Output",
 CellChangeTimes->{{3.771089939073182*^9, 3.771089960947468*^9}, {
   3.7710900196595297`*^9, 3.771090024943227*^9}, {3.771100571890575*^9, 
   3.771100587746766*^9}, 3.7711006741103163`*^9, {3.771100737362198*^9, 
   3.771100754129281*^9}, 3.77110410573253*^9, 3.771105131082655*^9, 
   3.771109532029791*^9, 3.771110462185783*^9, 3.7711499499460278`*^9, 
   3.7711550573174677`*^9},
 CellLabel->
  "Out[580]//TableForm=",ExpressionUUID->"9da430fe-c536-4746-aeae-\
2505627da153"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"stepList", "[", 
   RowBox[{
    RowBox[{"or", "[", 
     RowBox[{
      RowBox[{"and", "[", 
       RowBox[{"a", ",", "b"}], "]"}], ",", 
      RowBox[{"and", "[", 
       RowBox[{"c", ",", "d"}], "]"}]}], "]"}], ",", "\"\<CNF\>\""}], "]"}], "//",
   "TableForm"}]], "Input",
 CellChangeTimes->{{3.771105239492379*^9, 3.7711053099838552`*^9}, {
   3.771107551369616*^9, 3.771107559389266*^9}, {3.7711087729729357`*^9, 
   3.771108795585197*^9}, {3.7711088426952763`*^9, 3.771108843567053*^9}, 
   3.771109056743997*^9, {3.7711091807751417`*^9, 3.771109187879315*^9}, {
   3.771109324179902*^9, 3.771109348895989*^9}, {3.7711104519894543`*^9, 
   3.771110457976253*^9}, {3.77116931971566*^9, 3.7711693592504873`*^9}, {
   3.771184325613428*^9, 3.77118432584571*^9}},
 CellLabel->
  "In[681]:=",ExpressionUUID->"1fd68e43-6dad-4d63-a72c-5eb7aeea0e61"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"\<\"Initial\"\>", "\<\"\"\>", 
     RowBox[{"or", "[", 
      RowBox[{
       RowBox[{"and", "[", 
        RowBox[{"a", ",", "b"}], "]"}], ",", 
       RowBox[{"and", "[", 
        RowBox[{"c", ",", "d"}], "]"}]}], "]"}]},
    {"\<\"Distribution\"\>", "\<\"\"\>", 
     RowBox[{"and", "[", 
      RowBox[{
       RowBox[{"or", "[", 
        RowBox[{"a", ",", 
         RowBox[{"and", "[", 
          RowBox[{"c", ",", "d"}], "]"}]}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", 
         RowBox[{"and", "[", 
          RowBox[{"c", ",", "d"}], "]"}]}], "]"}]}], "]"}]},
    {"\<\"Distribution\"\>", GridBox[{
       {"1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], 
     RowBox[{"and", "[", 
      RowBox[{
       RowBox[{"and", "[", 
        RowBox[{
         RowBox[{"or", "[", 
          RowBox[{"a", ",", "c"}], "]"}], ",", 
         RowBox[{"or", "[", 
          RowBox[{"a", ",", "d"}], "]"}]}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", 
         RowBox[{"and", "[", 
          RowBox[{"c", ",", "d"}], "]"}]}], "]"}]}], "]"}]},
    {"\<\"Association\"\>", GridBox[{
       {"1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], 
     RowBox[{"and", "[", 
      RowBox[{
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "c"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "d"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", 
         RowBox[{"and", "[", 
          RowBox[{"c", ",", "d"}], "]"}]}], "]"}]}], "]"}]},
    {"\<\"Distribution\"\>", GridBox[{
       {"3"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], 
     RowBox[{"and", "[", 
      RowBox[{
       RowBox[{"and", "[", 
        RowBox[{
         RowBox[{"or", "[", 
          RowBox[{"b", ",", "c"}], "]"}], ",", 
         RowBox[{"or", "[", 
          RowBox[{"b", ",", "d"}], "]"}]}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "c"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "d"}], "]"}]}], "]"}]},
    {"\<\"Association\"\>", GridBox[{
       {"1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], 
     RowBox[{"and", "[", 
      RowBox[{
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "c"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "d"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", "c"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", "d"}], "]"}]}], "]"}]},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{{"Initial", "", 
     $CellContext`or[
      $CellContext`and[$CellContext`a, $CellContext`b], 
      $CellContext`and[$CellContext`c, $CellContext`d]]}, {"Distribution", {}, 
     $CellContext`and[
      $CellContext`or[$CellContext`a, 
       $CellContext`and[$CellContext`c, $CellContext`d]], 
      $CellContext`or[$CellContext`b, 
       $CellContext`and[$CellContext`c, $CellContext`d]]]}, {
    "Distribution", {1}, 
     $CellContext`and[
      $CellContext`and[
       $CellContext`or[$CellContext`a, $CellContext`c], 
       $CellContext`or[$CellContext`a, $CellContext`d]], 
      $CellContext`or[$CellContext`b, 
       $CellContext`and[$CellContext`c, $CellContext`d]]]}, {
    "Association", {1}, 
     $CellContext`and[
      $CellContext`or[$CellContext`a, $CellContext`c], 
      $CellContext`or[$CellContext`a, $CellContext`d], 
      $CellContext`or[$CellContext`b, 
       $CellContext`and[$CellContext`c, $CellContext`d]]]}, {
    "Distribution", {3}, 
     $CellContext`and[
      $CellContext`and[
       $CellContext`or[$CellContext`b, $CellContext`c], 
       $CellContext`or[$CellContext`b, $CellContext`d]], 
      $CellContext`or[$CellContext`a, $CellContext`c], 
      $CellContext`or[$CellContext`a, $CellContext`d]]}, {
    "Association", {1}, 
     $CellContext`and[
      $CellContext`or[$CellContext`a, $CellContext`c], 
      $CellContext`or[$CellContext`a, $CellContext`d], 
      $CellContext`or[$CellContext`b, $CellContext`c], 
      $CellContext`or[$CellContext`b, $CellContext`d]]}, {{}, {}, {}}}]]], \
"Output",
 CellChangeTimes->{{3.771109332155407*^9, 3.771109349479912*^9}, 
   3.771109532256597*^9, 3.771110458504776*^9, 3.771149951422819*^9, 
   3.771155057377041*^9, {3.7711689427813673`*^9, 3.771168968367572*^9}, {
   3.771169071376382*^9, 3.771169080258103*^9}, {3.77116930571614*^9, 
   3.771169359860836*^9}, 3.771184326505851*^9},
 CellLabel->
  "Out[681]//TableForm=",ExpressionUUID->"9938a377-5e55-4c6b-8e9c-\
cf3df42f4ad2"]
}, Open  ]],

Cell["\<\
Complete this
We want to reduce [original] to [CNF/DNF]. First, we can apply [rule1] to the \
[loc] term of . Then we have [result expression]. After apply [rule1] to \
[loc], we get \
\>", "Text",
 CellChangeTimes->{{3.771184374971313*^9, 3.771184450016643*^9}, {
  3.771184919602359*^9, 3.771185002493677*^9}, {3.771185107042997*^9, 
  3.7711851246319017`*^9}, {3.771195995025928*^9, 
  3.771196058551756*^9}},ExpressionUUID->"50ec7c0a-8bbc-4503-9319-\
4637f47c9ecc"],

Cell["\<\
What to do to convert this back?
- recognizing the logic [\[OpenCurlyDoubleQuote]To do something, we first do \
something\[CloseCurlyDoubleQuote] vs \[OpenCurlyDoubleQuote]Since something, \
we get something\[CloseCurlyDoubleQuote]]
- recognizing what theorem is used [explicitly mentioned, or implied]
- When human say \[OpenCurlyDoubleQuote]observe that\[CloseCurlyDoubleQuote], \
is it that obvious for machines?\
\>", "Text",
 CellChangeTimes->{{3.771196066135324*^9, 3.77119607620844*^9}, {
  3.771196260537166*^9, 3.771196268565991*^9}, {3.771196303144807*^9, 
  3.7711963659558992`*^9}, {3.771196398747319*^9, 3.7711964178182077`*^9}, {
  3.771196697284648*^9, 3.771196739512836*^9}, {3.771196993037176*^9, 
  3.771197006851528*^9}},ExpressionUUID->"39be2831-662d-47d1-825d-\
a176dc6a648f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"stepList", "[", 
   RowBox[{
    RowBox[{"or", "[", 
     RowBox[{
      RowBox[{"and", "[", 
       RowBox[{"a", ",", "b"}], "]"}], ",", 
      RowBox[{"and", "[", 
       RowBox[{"c", ",", "a"}], "]"}]}], "]"}], ",", "\"\<CNF\>\""}], "]"}], "//",
   "TableForm"}]], "Input",
 CellChangeTimes->{{3.771150615530216*^9, 3.7711506157121267`*^9}, {
  3.771166239444899*^9, 3.771166264207694*^9}, {3.77118314358002*^9, 
  3.771183167455573*^9}, {3.771197721208646*^9, 3.771197723546606*^9}},
 CellLabel->
  "In[699]:=",ExpressionUUID->"8eccbb9a-53da-4a69-bd41-3cdf562184e7"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"\<\"Initial\"\>", "\<\"\"\>", 
     RowBox[{"or", "[", 
      RowBox[{
       RowBox[{"and", "[", 
        RowBox[{"a", ",", "b"}], "]"}], ",", 
       RowBox[{"and", "[", 
        RowBox[{"a", ",", "c"}], "]"}]}], "]"}]},
    {"\<\"Distribution\"\>", "\<\"\"\>", 
     RowBox[{"and", "[", 
      RowBox[{
       RowBox[{"or", "[", 
        RowBox[{"a", ",", 
         RowBox[{"and", "[", 
          RowBox[{"a", ",", "c"}], "]"}]}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", 
         RowBox[{"and", "[", 
          RowBox[{"a", ",", "c"}], "]"}]}], "]"}]}], "]"}]},
    {"\<\"Distribution\"\>", GridBox[{
       {"1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], 
     RowBox[{"and", "[", 
      RowBox[{
       RowBox[{"and", "[", 
        RowBox[{
         RowBox[{"or", "[", 
          RowBox[{"a", ",", "a"}], "]"}], ",", 
         RowBox[{"or", "[", 
          RowBox[{"a", ",", "c"}], "]"}]}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", 
         RowBox[{"and", "[", 
          RowBox[{"a", ",", "c"}], "]"}]}], "]"}]}], "]"}]},
    {"\<\"Association\"\>", GridBox[{
       {"1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], 
     RowBox[{"and", "[", 
      RowBox[{
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "a"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "c"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", 
         RowBox[{"and", "[", 
          RowBox[{"a", ",", "c"}], "]"}]}], "]"}]}], "]"}]},
    {"\<\"Idempotent\"\>", GridBox[{
       {"1", "\<\"\"\>"},
       {"1", "2"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], 
     RowBox[{"and", "[", 
      RowBox[{"a", ",", 
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "c"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", 
         RowBox[{"and", "[", 
          RowBox[{"a", ",", "c"}], "]"}]}], "]"}]}], "]"}]},
    {"\<\"Distribution\"\>", GridBox[{
       {"3"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], 
     RowBox[{"and", "[", 
      RowBox[{"a", ",", 
       RowBox[{"and", "[", 
        RowBox[{
         RowBox[{"or", "[", 
          RowBox[{"a", ",", "b"}], "]"}], ",", 
         RowBox[{"or", "[", 
          RowBox[{"b", ",", "c"}], "]"}]}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "c"}], "]"}]}], "]"}]},
    {"\<\"Association\"\>", GridBox[{
       {"2"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], 
     RowBox[{"and", "[", 
      RowBox[{"a", ",", 
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "b"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "c"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", "c"}], "]"}]}], "]"}]},
    {"\<\"Absorption\"\>", "\<\"\"\>", 
     RowBox[{"and", "[", 
      RowBox[{"a", ",", 
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "c"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", "c"}], "]"}]}], "]"}]},
    {"\<\"Absorption\"\>", "\<\"\"\>", 
     RowBox[{"and", "[", 
      RowBox[{"a", ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", "c"}], "]"}]}], "]"}]},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{{"Initial", "", 
     $CellContext`or[
      $CellContext`and[$CellContext`a, $CellContext`b], 
      $CellContext`and[$CellContext`a, $CellContext`c]]}, {"Distribution", {}, 
     $CellContext`and[
      $CellContext`or[$CellContext`a, 
       $CellContext`and[$CellContext`a, $CellContext`c]], 
      $CellContext`or[$CellContext`b, 
       $CellContext`and[$CellContext`a, $CellContext`c]]]}, {
    "Distribution", {1}, 
     $CellContext`and[
      $CellContext`and[
       $CellContext`or[$CellContext`a, $CellContext`a], 
       $CellContext`or[$CellContext`a, $CellContext`c]], 
      $CellContext`or[$CellContext`b, 
       $CellContext`and[$CellContext`a, $CellContext`c]]]}, {
    "Association", {1}, 
     $CellContext`and[
      $CellContext`or[$CellContext`a, $CellContext`a], 
      $CellContext`or[$CellContext`a, $CellContext`c], 
      $CellContext`or[$CellContext`b, 
       $CellContext`and[$CellContext`a, $CellContext`c]]]}, {
    "Idempotent", {1, {1, 2}}, 
     $CellContext`and[$CellContext`a, 
      $CellContext`or[$CellContext`a, $CellContext`c], 
      $CellContext`or[$CellContext`b, 
       $CellContext`and[$CellContext`a, $CellContext`c]]]}, {
    "Distribution", {3}, 
     $CellContext`and[$CellContext`a, 
      $CellContext`and[
       $CellContext`or[$CellContext`a, $CellContext`b], 
       $CellContext`or[$CellContext`b, $CellContext`c]], 
      $CellContext`or[$CellContext`a, $CellContext`c]]}, {
    "Association", {2}, 
     $CellContext`and[$CellContext`a, 
      $CellContext`or[$CellContext`a, $CellContext`b], 
      $CellContext`or[$CellContext`a, $CellContext`c], 
      $CellContext`or[$CellContext`b, $CellContext`c]]}, {"Absorption", {}, 
     $CellContext`and[$CellContext`a, 
      $CellContext`or[$CellContext`a, $CellContext`c], 
      $CellContext`or[$CellContext`b, $CellContext`c]]}, {"Absorption", {}, 
     $CellContext`and[$CellContext`a, 
      $CellContext`or[$CellContext`b, $CellContext`c]]}, {{}, {}, {}}}]]], \
"Output",
 CellChangeTimes->{
  3.771150616465563*^9, 3.7711547286717873`*^9, 3.77115505744298*^9, {
   3.771166241176659*^9, 3.771166264444914*^9}, 3.771169307194036*^9, 
   3.771183167939698*^9, 3.771197729805476*^9},
 CellLabel->
  "Out[699]//TableForm=",ExpressionUUID->"a86b2eb4-f75a-4d51-8a3c-\
ec4804cd4448"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"stepListExpression", "[", "e_", "]"}], ":=", 
  RowBox[{"NestWhileList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"applyStep", "[", 
      RowBox[{"#", ",", 
       RowBox[{"findStep", "[", "#", "]"}]}], "]"}], "&"}], ",", "e", ",", 
    RowBox[{
     RowBox[{"#", "=!=", 
      RowBox[{"{", "}"}]}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771237438939329*^9, 3.7712375402321367`*^9}},
 CellLabel->
  "In[720]:=",ExpressionUUID->"1555a37e-3213-4d10-be7d-d5cbb2945a30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"stepListExpression", "[", 
   RowBox[{"or", "[", 
    RowBox[{
     RowBox[{"and", "[", 
      RowBox[{"a", ",", "b"}], "]"}], ",", 
     RowBox[{"and", "[", 
      RowBox[{"c", ",", "a"}], "]"}]}], "]"}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.7712375179098988`*^9, 3.771237548710115*^9}},
 CellLabel->
  "In[722]:=",ExpressionUUID->"2bc7d537-7ef1-4c51-88ca-4a000eb7e515"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"or", "[", 
      RowBox[{
       RowBox[{"and", "[", 
        RowBox[{"a", ",", "b"}], "]"}], ",", 
       RowBox[{"and", "[", 
        RowBox[{"a", ",", "c"}], "]"}]}], "]"}]},
    {
     RowBox[{"and", "[", 
      RowBox[{
       RowBox[{"or", "[", 
        RowBox[{"a", ",", 
         RowBox[{"and", "[", 
          RowBox[{"a", ",", "c"}], "]"}]}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", 
         RowBox[{"and", "[", 
          RowBox[{"a", ",", "c"}], "]"}]}], "]"}]}], "]"}]},
    {
     RowBox[{"and", "[", 
      RowBox[{
       RowBox[{"and", "[", 
        RowBox[{
         RowBox[{"or", "[", 
          RowBox[{"a", ",", "a"}], "]"}], ",", 
         RowBox[{"or", "[", 
          RowBox[{"a", ",", "c"}], "]"}]}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", 
         RowBox[{"and", "[", 
          RowBox[{"a", ",", "c"}], "]"}]}], "]"}]}], "]"}]},
    {
     RowBox[{"and", "[", 
      RowBox[{
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "a"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "c"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", 
         RowBox[{"and", "[", 
          RowBox[{"a", ",", "c"}], "]"}]}], "]"}]}], "]"}]},
    {
     RowBox[{"and", "[", 
      RowBox[{"a", ",", 
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "c"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", 
         RowBox[{"and", "[", 
          RowBox[{"a", ",", "c"}], "]"}]}], "]"}]}], "]"}]},
    {
     RowBox[{"and", "[", 
      RowBox[{"a", ",", 
       RowBox[{"and", "[", 
        RowBox[{
         RowBox[{"or", "[", 
          RowBox[{"a", ",", "b"}], "]"}], ",", 
         RowBox[{"or", "[", 
          RowBox[{"b", ",", "c"}], "]"}]}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "c"}], "]"}]}], "]"}]},
    {
     RowBox[{"and", "[", 
      RowBox[{"a", ",", 
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "b"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "c"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", "c"}], "]"}]}], "]"}]},
    {
     RowBox[{"and", "[", 
      RowBox[{"a", ",", 
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "c"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", "c"}], "]"}]}], "]"}]},
    {
     RowBox[{"and", "[", 
      RowBox[{"a", ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", "c"}], "]"}]}], "]"}]},
    {"\<\"\"\>"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{
    $CellContext`or[
     $CellContext`and[$CellContext`a, $CellContext`b], 
     $CellContext`and[$CellContext`a, $CellContext`c]], 
    $CellContext`and[
     $CellContext`or[$CellContext`a, 
      $CellContext`and[$CellContext`a, $CellContext`c]], 
     $CellContext`or[$CellContext`b, 
      $CellContext`and[$CellContext`a, $CellContext`c]]], 
    $CellContext`and[
     $CellContext`and[
      $CellContext`or[$CellContext`a, $CellContext`a], 
      $CellContext`or[$CellContext`a, $CellContext`c]], 
     $CellContext`or[$CellContext`b, 
      $CellContext`and[$CellContext`a, $CellContext`c]]], 
    $CellContext`and[
     $CellContext`or[$CellContext`a, $CellContext`a], 
     $CellContext`or[$CellContext`a, $CellContext`c], 
     $CellContext`or[$CellContext`b, 
      $CellContext`and[$CellContext`a, $CellContext`c]]], 
    $CellContext`and[$CellContext`a, 
     $CellContext`or[$CellContext`a, $CellContext`c], 
     $CellContext`or[$CellContext`b, 
      $CellContext`and[$CellContext`a, $CellContext`c]]], 
    $CellContext`and[$CellContext`a, 
     $CellContext`and[
      $CellContext`or[$CellContext`a, $CellContext`b], 
      $CellContext`or[$CellContext`b, $CellContext`c]], 
     $CellContext`or[$CellContext`a, $CellContext`c]], 
    $CellContext`and[$CellContext`a, 
     $CellContext`or[$CellContext`a, $CellContext`b], 
     $CellContext`or[$CellContext`a, $CellContext`c], 
     $CellContext`or[$CellContext`b, $CellContext`c]], 
    $CellContext`and[$CellContext`a, 
     $CellContext`or[$CellContext`a, $CellContext`c], 
     $CellContext`or[$CellContext`b, $CellContext`c]], 
    $CellContext`and[$CellContext`a, 
     $CellContext`or[$CellContext`b, $CellContext`c]], {}}]]], "Output",
 CellChangeTimes->{{3.771237521517621*^9, 3.7712375493740253`*^9}},
 CellLabel->
  "Out[722]//TableForm=",ExpressionUUID->"a1b298a2-595a-45ec-a5b3-\
88a3c9bb502b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Replace", "[", 
  RowBox[{
   RowBox[{"or", "[", 
    RowBox[{
     RowBox[{"and", "[", 
      RowBox[{"a", ",", "b"}], "]"}], ",", 
     RowBox[{"and", "[", 
      RowBox[{"c", ",", "a"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"or", "\[Rule]", "CircleTimes"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771237616863002*^9, 3.771237626470546*^9}, {
  3.77123769745313*^9, 3.7712377278615217`*^9}, {3.771237802105451*^9, 
  3.771237875510379*^9}, {3.771238274450479*^9, 3.7712382784759073`*^9}, {
  3.771238321900168*^9, 3.771238328639065*^9}, {3.771242136255611*^9, 
  3.7712421558610764`*^9}},
 CellLabel->
  "In[730]:=",ExpressionUUID->"fa1bae7f-1344-4456-ac70-b453767b912f"],

Cell[BoxData[
 RowBox[{"or", "[", 
  RowBox[{
   RowBox[{"and", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{"and", "[", 
    RowBox[{"a", ",", "c"}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.771238329329812*^9, {3.7712421381930227`*^9, 3.7712421562770987`*^9}},
 CellLabel->
  "Out[730]=",ExpressionUUID->"40066542-6165-4b07-9a4b-bb09499e56ee"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Things", "Section",
 CellChangeTimes->{{3.7711848622717447`*^9, 
  3.771184869030861*^9}},ExpressionUUID->"6de69abd-b9c0-41be-bb71-\
e6b18a84cbd5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"or", "[", 
   RowBox[{
    RowBox[{"and", "[", 
     RowBox[{"a", ",", "b"}], "]"}], ",", 
    RowBox[{"and", "[", 
     RowBox[{"c", ",", "d"}], "]"}]}], "]"}], "\:ff0c", 
  RowBox[{"and", "[", 
   RowBox[{
    RowBox[{"or", "[", 
     RowBox[{"a", ",", 
      RowBox[{"and", "[", 
       RowBox[{"c", ",", "d"}], "]"}]}], "]"}], ",", 
    RowBox[{"or", "[", 
     RowBox[{"b", ",", 
      RowBox[{"and", "[", 
       RowBox[{"c", ",", "d"}], "]"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7711976923801527`*^9, 
  3.771197692778249*^9}},ExpressionUUID->"d26d8791-bf86-4e9c-85a0-\
74dd92c6b6b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"CirclePlus", "[", 
     RowBox[{
      RowBox[{"CircleTimes", "[", 
       RowBox[{"a", ",", "b"}], "]"}], ",", 
      RowBox[{"CircleTimes", "[", 
       RowBox[{"a", ",", "c"}], "]"}]}], "]"}], "\[Equal]", 
    RowBox[{"CircleTimes", "[", 
     RowBox[{
      RowBox[{"CirclePlus", "[", 
       RowBox[{"a", ",", 
        RowBox[{"CircleTimes", "[", 
         RowBox[{"a", ",", "c"}], "]"}]}], "]"}], ",", 
      RowBox[{"CirclePlus", "[", 
       RowBox[{"b", ",", 
        RowBox[{"CircleTimes", "[", 
         RowBox[{"a", ",", "c"}], "]"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{"AxiomaticTheory", "[", "\"\<BooleanAxioms\>\"", "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.771166906545014*^9, 3.771166995120352*^9}, {
  3.771167051889061*^9, 3.771167086557034*^9}, {3.7711977453707523`*^9, 
  3.77119778287328*^9}},
 CellLabel->
  "In[731]:=",ExpressionUUID->"5acbacff-8651-455f-8f1e-6e89165459c8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ProofObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               Directive[
                Opacity[0.7], 
                Hue[0.6, 0.7, 0.5]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 2.}, {-1., 1.5}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQYcYIzg8zeOvp7/3x7G3+ghWbHLFMGXyDkolnPw
H5zfanlxIYMzgv9nA0jDXzi/7pJ67SV1BJ9tXt5Z/u4/cP4MYVkugye/4Xxj
MEDwL4K01/6C84tkjhfKHP8J5wsLggCCv4E1Goh+wPkBv5b4/1ryHc5//w4E
vsH5fY8tgAjB17vRpHuj6SucfwYMvsD5aW8efT0vjeD/Spxo9KHkM5zfogsy
4BOcz+K//Vm7K4JfdUwv7v+ej3D+q8l2LyfbIfhg5ac+wPlrDNStRBIQfAj4
YA8AaCdwgQ==
                  "]]]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQYc1G5x7LudtdJ+2h32iSGz/ttbegSkeovssd9X
e3VJrPx/+50nCj19+I7blz3OsJbu/2evP+l95NTNF+x38R4K6X35175d+kdF
Qtc1+/4/Dz5s1vtrn9RwqbGd+679l/VH+fvj/tgnJthbtUo/sn+hXrBRrvK3
fXBe3YoStmf22SkPribV/bLnyFrGPcntlX1dqlhtdN5P+76jcywUq17bL6lw
mBcl/tPeiT0iv7HzjX3IshOh2lt/2Cvp31i/qeStfce7dYvPuv+w17GV/bXF
+p29U+Dndsfz3+1TDNX9Ou69s285N5Wp3fu7/Qnub6t1Yt/b+6RNE56355t9
xJlO4UXb39vPlvi6q03pm71Y8aOWF2/f2xc+3fjDofarPSRYPtibGIPAZzj/
inrtJfXaT3B+ocxxIPpozwjlCwmCwEe4/EbW6A2s0R/g/AVfPOd/8XwP59+7
CwJv4XxZkHGFb+D8mA0gA17D+bNmgsBLOP/8jaOv55u/gPM/H1ZKffDyGdw9
7CDrNzyFy7PPyzvL3/0Ezv/aE7vnX+VjOP8S2H+P4Hyw8ikP4fyIRL8SjQMP
4HwI/cAeALIL6/A=
                  "]]]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 0.5}, {1., 0.}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{-1., 2.}, {-1., 1.5}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{-1., 1.5}, {0., 1.}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 1.}, {1., 0.5}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{1., 0.5}, {1., 0.}}]}}, {
               Directive[
                Hue[0.6, 0.2, 0.8], 
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.7]]]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 2.}, 0.05628067550723107], 
                 TagBox[
                  GridBox[{{"\"Axiom 1\""}, {
                    RowBox[{
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], "\[Equal]", 
                    RowBox[{"x2", "\[CirclePlus]", "x1"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Axiom 1", CirclePlus[$CellContext`x1, $CellContext`x2] == 
                   CirclePlus[$CellContext`x2, $CellContext`x1]}], 
                 "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 0.5}, 0.05628067550723107], 
                 TagBox[
                  GridBox[{{"\"Axiom 2\""}, {
                    RowBox[{
                    RowBox[{"x1", "\[CirclePlus]", 
                    RowBox[{"x2", "\[CircleTimes]", "x3"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x3"}], ")"}]}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Axiom 2", CirclePlus[$CellContext`x1, 
                    CircleTimes[$CellContext`x2, $CellContext`x3]] == 
                   CircleTimes[
                    CirclePlus[$CellContext`x1, $CellContext`x2], 
                    CirclePlus[$CellContext`x1, $CellContext`x3]]}], 
                 "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{-1., 2.}, 0.05628067550723107], 
                 TagBox[
                  GridBox[{{"\"Hypothesis 1\""}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "b"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Hypothesis 1", CirclePlus[
                    CircleTimes[$CellContext`a, $CellContext`b], 
                    CircleTimes[$CellContext`a, $CellContext`c]] == 
                   CircleTimes[
                    CirclePlus[$CellContext`a, 
                    CircleTimes[$CellContext`a, $CellContext`c]], 
                    CirclePlus[$CellContext`b, 
                    CircleTimes[$CellContext`a, $CellContext`c]]]}], 
                 "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{-1., 1.5}, 0.05628067550723107], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 1\""}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "b"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Substitution Lemma 1", CirclePlus[
                    CircleTimes[$CellContext`a, $CellContext`c], 
                    CircleTimes[$CellContext`a, $CellContext`b]] == 
                   CircleTimes[
                    CirclePlus[$CellContext`a, 
                    CircleTimes[$CellContext`a, $CellContext`c]], 
                    CirclePlus[$CellContext`b, 
                    CircleTimes[$CellContext`a, $CellContext`c]]]}], 
                 "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 1.}, 0.05628067550723107], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 2\""}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "b"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    "b"}], ")"}]}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Substitution Lemma 2", CirclePlus[
                    CircleTimes[$CellContext`a, $CellContext`c], 
                    CircleTimes[$CellContext`a, $CellContext`b]] == 
                   CircleTimes[
                    CirclePlus[$CellContext`a, 
                    CircleTimes[$CellContext`a, $CellContext`c]], 
                    CirclePlus[
                    
                    CircleTimes[$CellContext`a, $CellContext`c], \
$CellContext`b]]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 0.5}, 0.05628067550723107], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 3\""}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "b"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    "a"}], ")"}], "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    "b"}], ")"}]}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Substitution Lemma 3", CirclePlus[
                    CircleTimes[$CellContext`a, $CellContext`c], 
                    CircleTimes[$CellContext`a, $CellContext`b]] == 
                   CircleTimes[
                    CirclePlus[
                    
                    CircleTimes[$CellContext`a, $CellContext`c], \
$CellContext`a], 
                    CirclePlus[
                    
                    CircleTimes[$CellContext`a, $CellContext`c], \
$CellContext`b]]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 0.}, 0.05628067550723107], 
                 TagBox[
                  
                  GridBox[{{"\"Conclusion 1\""}, {"True"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Conclusion 1", True}], "Tooltip"]& ]}}, {
             BaseStyle -> RGBColor[0.368417, 0.506779, 0.709798], FormatType -> 
              TraditionalForm, Frame -> True, FrameStyle -> Directive[
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
              ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
              Scaled[0.15]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["7", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "b"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}]}], 
                   Short[#, 1]& ], "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               Directive[
                Opacity[0.7], 
                Hue[0.6, 0.7, 0.5]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 2.}, {-1., 1.5}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQYcYIzg8zeOvp7/3x7G3+ghWbHLFMGXyDkolnPw
H5zfanlxIYMzgv9nA0jDXzi/7pJ67SV1BJ9tXt5Z/u4/cP4MYVkugye/4Xxj
MEDwL4K01/6C84tkjhfKHP8J5wsLggCCv4E1Goh+wPkBv5b4/1ryHc5//w4E
vsH5fY8tgAjB17vRpHuj6SucfwYMvsD5aW8efT0vjeD/Spxo9KHkM5zfogsy
4BOcz+K//Vm7K4JfdUwv7v+ej3D+q8l2LyfbIfhg5ac+wPlrDNStRBIQfAj4
YA8AaCdwgQ==
                  "]]]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQYc1G5x7LudtdJ+2h32iSGz/ttbegSkeovssd9X
e3VJrPx/+50nCj19+I7blz3OsJbu/2evP+l95NTNF+x38R4K6X35175d+kdF
Qtc1+/4/Dz5s1vtrn9RwqbGd+679l/VH+fvj/tgnJthbtUo/sn+hXrBRrvK3
fXBe3YoStmf22SkPribV/bLnyFrGPcntlX1dqlhtdN5P+76jcywUq17bL6lw
mBcl/tPeiT0iv7HzjX3IshOh2lt/2Cvp31i/qeStfce7dYvPuv+w17GV/bXF
+p29U+Dndsfz3+1TDNX9Ou69s285N5Wp3fu7/Qnub6t1Yt/b+6RNE56355t9
xJlO4UXb39vPlvi6q03pm71Y8aOWF2/f2xc+3fjDofarPSRYPtibGIPAZzj/
inrtJfXaT3B+ocxxIPpozwjlCwmCwEe4/EbW6A2s0R/g/AVfPOd/8XwP59+7
CwJv4XxZkHGFb+D8mA0gA17D+bNmgsBLOP/8jaOv55u/gPM/H1ZKffDyGdw9
7CDrNzyFy7PPyzvL3/0Ezv/aE7vnX+VjOP8S2H+P4Hyw8ikP4fyIRL8SjQMP
4HwI/cAeALIL6/A=
                  "]]]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 0.5}, {1., 0.}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{-1., 2.}, {-1., 1.5}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{-1., 1.5}, {0., 1.}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 1.}, {1., 0.5}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{1., 0.5}, {1., 0.}}]}}, {
               Directive[
                Hue[0.6, 0.2, 0.8], 
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.7]]]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 2.}, 0.05628067550723107], 
                 TagBox[
                  GridBox[{{"\"Axiom 1\""}, {
                    RowBox[{
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], "\[Equal]", 
                    RowBox[{"x2", "\[CirclePlus]", "x1"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Axiom 1", CirclePlus[$CellContext`x1, $CellContext`x2] == 
                   CirclePlus[$CellContext`x2, $CellContext`x1]}], 
                 "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 0.5}, 0.05628067550723107], 
                 TagBox[
                  GridBox[{{"\"Axiom 2\""}, {
                    RowBox[{
                    RowBox[{"x1", "\[CirclePlus]", 
                    RowBox[{"x2", "\[CircleTimes]", "x3"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x3"}], ")"}]}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Axiom 2", CirclePlus[$CellContext`x1, 
                    CircleTimes[$CellContext`x2, $CellContext`x3]] == 
                   CircleTimes[
                    CirclePlus[$CellContext`x1, $CellContext`x2], 
                    CirclePlus[$CellContext`x1, $CellContext`x3]]}], 
                 "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{-1., 2.}, 0.05628067550723107], 
                 TagBox[
                  GridBox[{{"\"Hypothesis 1\""}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "b"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Hypothesis 1", CirclePlus[
                    CircleTimes[$CellContext`a, $CellContext`b], 
                    CircleTimes[$CellContext`a, $CellContext`c]] == 
                   CircleTimes[
                    CirclePlus[$CellContext`a, 
                    CircleTimes[$CellContext`a, $CellContext`c]], 
                    CirclePlus[$CellContext`b, 
                    CircleTimes[$CellContext`a, $CellContext`c]]]}], 
                 "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{-1., 1.5}, 0.05628067550723107], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 1\""}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "b"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Substitution Lemma 1", CirclePlus[
                    CircleTimes[$CellContext`a, $CellContext`c], 
                    CircleTimes[$CellContext`a, $CellContext`b]] == 
                   CircleTimes[
                    CirclePlus[$CellContext`a, 
                    CircleTimes[$CellContext`a, $CellContext`c]], 
                    CirclePlus[$CellContext`b, 
                    CircleTimes[$CellContext`a, $CellContext`c]]]}], 
                 "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 1.}, 0.05628067550723107], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 2\""}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "b"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    "b"}], ")"}]}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Substitution Lemma 2", CirclePlus[
                    CircleTimes[$CellContext`a, $CellContext`c], 
                    CircleTimes[$CellContext`a, $CellContext`b]] == 
                   CircleTimes[
                    CirclePlus[$CellContext`a, 
                    CircleTimes[$CellContext`a, $CellContext`c]], 
                    CirclePlus[
                    
                    CircleTimes[$CellContext`a, $CellContext`c], \
$CellContext`b]]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 0.5}, 0.05628067550723107], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 3\""}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "b"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    "a"}], ")"}], "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    "b"}], ")"}]}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Substitution Lemma 3", CirclePlus[
                    CircleTimes[$CellContext`a, $CellContext`c], 
                    CircleTimes[$CellContext`a, $CellContext`b]] == 
                   CircleTimes[
                    CirclePlus[
                    
                    CircleTimes[$CellContext`a, $CellContext`c], \
$CellContext`a], 
                    CirclePlus[
                    
                    CircleTimes[$CellContext`a, $CellContext`c], \
$CellContext`b]]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 0.}, 0.05628067550723107], 
                 TagBox[
                  
                  GridBox[{{"\"Conclusion 1\""}, {"True"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Conclusion 1", True}], "Tooltip"]& ]}}, {
             BaseStyle -> RGBColor[0.368417, 0.506779, 0.709798], FormatType -> 
              TraditionalForm, Frame -> True, FrameStyle -> Directive[
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
              ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
              Scaled[0.15]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["7", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "b"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}]}], 
                   Short[#, 1]& ], "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Axioms: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], 
                    "\[Equal]", 
                    
                    RowBox[{
                    "\[FormalB]", "\[CircleTimes]", "\[FormalA]"}]}]}], "&&", 
                    
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], 
                    "\[Equal]", 
                    RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalA]"}]}]}],
                     "&&", 
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"\[FormalB]", "\[CirclePlus]", 
                    OverscriptBox["\[FormalB]", "_"]}], ")"}]}], "\[Equal]", 
                    "\[FormalA]"}]}], "&&", 
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CirclePlus]", 
                    RowBox[{"\[FormalB]", "\[CircleTimes]", 
                    OverscriptBox["\[FormalB]", "_"]}]}], "\[Equal]", 
                    "\[FormalA]"}]}], "&&", 
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", 
                    "\[FormalC]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalC]"}], 
                    ")"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], 
                    "\[CirclePlus]", 
                    
                    RowBox[{"\[FormalA]", "\[CircleTimes]", 
                    "\[FormalC]"}]}]}]}], "&&", 
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], 
                    "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CirclePlus]", 
                    RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalC]"}]}], 
                    "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], 
                    ")"}], "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalC]"}], 
                    ")"}]}]}]}]}], Short[#, 1]& ], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ProofObject["EquationalLogic", CirclePlus[
     CircleTimes[$CellContext`a, $CellContext`b], 
     CircleTimes[$CellContext`a, $CellContext`c]] == CircleTimes[
     CirclePlus[$CellContext`a, 
      CircleTimes[$CellContext`a, $CellContext`c]], 
     CirclePlus[$CellContext`b, 
      CircleTimes[$CellContext`a, $CellContext`c]]], 
   And[
    ForAll[{\[FormalA], \[FormalB]}, CircleTimes[\[FormalA], \[FormalB]] == 
     CircleTimes[\[FormalB], \[FormalA]]], 
    ForAll[{\[FormalA], \[FormalB]}, CirclePlus[\[FormalA], \[FormalB]] == 
     CirclePlus[\[FormalB], \[FormalA]]], 
    ForAll[{\[FormalA], \[FormalB]}, CircleTimes[\[FormalA], 
       CirclePlus[\[FormalB], 
        OverBar[\[FormalB]]]] == \[FormalA]], 
    ForAll[{\[FormalA], \[FormalB]}, CirclePlus[\[FormalA], 
       CircleTimes[\[FormalB], 
        OverBar[\[FormalB]]]] == \[FormalA]], 
    ForAll[{\[FormalA], \[FormalB], \[FormalC]}, CircleTimes[\[FormalA], 
       CirclePlus[\[FormalB], \[FormalC]]] == CirclePlus[
       CircleTimes[\[FormalA], \[FormalB]], 
       CircleTimes[\[FormalA], \[FormalC]]]], 
    ForAll[{\[FormalA], \[FormalB], \[FormalC]}, CirclePlus[\[FormalA], 
       CircleTimes[\[FormalB], \[FormalC]]] == CircleTimes[
       CirclePlus[\[FormalA], \[FormalB]], 
       CirclePlus[\[FormalA], \[FormalC]]]]], {{"Axiom", 1} -> 
    Association[
     "Statement" -> 
      CirclePlus[$CellContext`x1, $CellContext`x2] == 
       CirclePlus[$CellContext`x2, $CellContext`x1], "Proof" -> 
      Association[]], {"Axiom", 2} -> 
    Association["Statement" -> CirclePlus[$CellContext`x1, 
         CircleTimes[$CellContext`x2, $CellContext`x3]] == CircleTimes[
         CirclePlus[$CellContext`x1, $CellContext`x2], 
         CirclePlus[$CellContext`x1, $CellContext`x3]], "Proof" -> 
      Association[]], {"Hypothesis", 1} -> 
    Association["Statement" -> CirclePlus[
         CircleTimes[$CellContext`a, $CellContext`b], 
         CircleTimes[$CellContext`a, $CellContext`c]] == CircleTimes[
         CirclePlus[$CellContext`a, 
          CircleTimes[$CellContext`a, $CellContext`c]], 
         CirclePlus[$CellContext`b, 
          CircleTimes[$CellContext`a, $CellContext`c]]], "Proof" -> 
      Association[]], {"SubstitutionLemma", 1} -> 
    Association["Statement" -> CirclePlus[
         CircleTimes[$CellContext`a, $CellContext`c], 
         CircleTimes[$CellContext`a, $CellContext`b]] == CircleTimes[
         CirclePlus[$CellContext`a, 
          CircleTimes[$CellContext`a, $CellContext`c]], 
         CirclePlus[$CellContext`b, 
          CircleTimes[$CellContext`a, $CellContext`c]]], "Proof" -> 
      Association[
       "Input" -> {"Hypothesis", 1}, "Position" -> 1, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> {-1, 1}, 
        "Rule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]] -> CirclePlus[$CellContext`x2, $CellContext`x1]), 
        "OutputExpression" -> CirclePlus[
           CircleTimes[$CellContext`a, $CellContext`c], 
           CircleTimes[$CellContext`a, $CellContext`b]] == CircleTimes[
           CirclePlus[$CellContext`a, 
            CircleTimes[$CellContext`a, $CellContext`c]], 
           CirclePlus[$CellContext`b, 
            CircleTimes[$CellContext`a, $CellContext`c]]]]], {
     "SubstitutionLemma", 2} -> Association["Statement" -> CirclePlus[
         CircleTimes[$CellContext`a, $CellContext`c], 
         CircleTimes[$CellContext`a, $CellContext`b]] == CircleTimes[
         CirclePlus[$CellContext`a, 
          CircleTimes[$CellContext`a, $CellContext`c]], 
         CirclePlus[
          CircleTimes[$CellContext`a, $CellContext`c], $CellContext`b]], 
      "Proof" -> Association[
       "Input" -> {"SubstitutionLemma", 1}, "Position" -> {2, 2}, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> {-1, 1}, 
        "Rule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]] -> CirclePlus[$CellContext`x2, $CellContext`x1]), 
        "OutputExpression" -> CirclePlus[
           CircleTimes[$CellContext`a, $CellContext`c], 
           CircleTimes[$CellContext`a, $CellContext`b]] == CircleTimes[
           CirclePlus[$CellContext`a, 
            CircleTimes[$CellContext`a, $CellContext`c]], 
           CirclePlus[
            CircleTimes[$CellContext`a, $CellContext`c], $CellContext`b]]]], {
     "SubstitutionLemma", 3} -> Association["Statement" -> CirclePlus[
         CircleTimes[$CellContext`a, $CellContext`c], 
         CircleTimes[$CellContext`a, $CellContext`b]] == CircleTimes[
         CirclePlus[
          CircleTimes[$CellContext`a, $CellContext`c], $CellContext`a], 
         CirclePlus[
          CircleTimes[$CellContext`a, $CellContext`c], $CellContext`b]], 
      "Proof" -> Association[
       "Input" -> {"SubstitutionLemma", 2}, "Position" -> {2, 1}, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> {-1, 1}, 
        "Rule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]] -> CirclePlus[$CellContext`x2, $CellContext`x1]), 
        "OutputExpression" -> CirclePlus[
           CircleTimes[$CellContext`a, $CellContext`c], 
           CircleTimes[$CellContext`a, $CellContext`b]] == CircleTimes[
           CirclePlus[
            CircleTimes[$CellContext`a, $CellContext`c], $CellContext`a], 
           CirclePlus[
            CircleTimes[$CellContext`a, $CellContext`c], $CellContext`b]]]], {
     "Conclusion", 1} -> 
    Association[
     "Statement" -> True, "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 3}, "Position" -> 2, 
        "Construct" -> {"Axiom", 2}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, 
           CircleTimes[$CellContext`x2, $CellContext`x3]]), 
        "OutputExpression" -> True]]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.771242168496435*^9},
 CellLabel->
  "Out[731]=",ExpressionUUID->"0dc98ed1-5e94-4404-88b7-ba19705ed4d3"]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.771242549276369*^9, 3.7712425768518057`*^9}, {
  3.771243429989373*^9, 
  3.7712434463482656`*^9}},ExpressionUUID->"4766412a-c5fe-43d8-959c-\
91be775847fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["ProofObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 Directive[
                  RGBColor[0.368417, 0.506779, 0.709798]], {
                  Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                  
                  ArrowBox[{{0., 2.}, {-1., 1.5}}]}, {
                  Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                  
                  ArrowBox[
                   BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQYcYIzg8zeOvp7/3x7G3+ghWbHLFMGXyDkolnPw
H5zfanlxIYMzgv9nA0jDXzi/7pJ67SV1BJ9tXt5Z/u4/cP4MYVkugye/4Xxj
MEDwL4K01/6C84tkjhfKHP8J5wsLggCCv4E1Goh+wPkBv5b4/1ryHc5//w4E
vsH5fY8tgAjB17vRpHuj6SucfwYMvsD5aW8efT0vjeD/Spxo9KHkM5zfogsy
4BOcz+K//Vm7K4JfdUwv7v+ej3D+q8l2LyfbIfhg5ac+wPlrDNStRBIQfAj4
YA8AaCdwgQ==
                    "]]]}, {
                  Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                  
                  ArrowBox[
                   BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQYc1G5x7LudtdJ+2h32iSGz/ttbegSkeovssd9X
e3VJrPx/+50nCj19+I7blz3OsJbu/2evP+l95NTNF+x38R4K6X35175d+kdF
Qtc1+/4/Dz5s1vtrn9RwqbGd+679l/VH+fvj/tgnJthbtUo/sn+hXrBRrvK3
fXBe3YoStmf22SkPribV/bLnyFrGPcntlX1dqlhtdN5P+76jcywUq17bL6lw
mBcl/tPeiT0iv7HzjX3IshOh2lt/2Cvp31i/qeStfce7dYvPuv+w17GV/bXF
+p29U+Dndsfz3+1TDNX9Ou69s285N5Wp3fu7/Qnub6t1Yt/b+6RNE56355t9
xJlO4UXb39vPlvi6q03pm71Y8aOWF2/f2xc+3fjDofarPSRYPtibGIPAZzj/
inrtJfXaT3B+ocxxIPpozwjlCwmCwEe4/EbW6A2s0R/g/AVfPOd/8XwP59+7
CwJv4XxZkHGFb+D8mA0gA17D+bNmgsBLOP/8jaOv55u/gPM/H1ZKffDyGdw9
7CDrNzyFy7PPyzvL3/0Ezv/aE7vnX+VjOP8S2H+P4Hyw8ikP4fyIRL8SjQMP
4HwI/cAeALIL6/A=
                    "]]]}, {
                  Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                  
                  ArrowBox[{{0., 0.5}, {1., 0.}}]}, {
                  Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                  
                  ArrowBox[{{-1., 2.}, {-1., 1.5}}]}, {
                  Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                  
                  ArrowBox[{{-1., 1.5}, {0., 1.}}]}, {
                  Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                  
                  ArrowBox[{{0., 1.}, {1., 0.5}}]}, {
                  Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                  
                  ArrowBox[{{1., 0.5}, {1., 0.}}]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 Directive[
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                 TagBox[
                  TooltipBox[
                   DiskBox[{0., 2.}, 0.05628067550723107], 
                   TagBox[
                    GridBox[{{"\"Axiom 1\""}, {
                    RowBox[{
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], "\[Equal]", 
                    RowBox[{"x2", "\[CirclePlus]", "x1"}]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   
                   Column[{
                    "Axiom 1", CirclePlus[$CellContext`x1, $CellContext`x2] == 
                    CirclePlus[$CellContext`x2, $CellContext`x1]}], 
                   "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[
                   DiskBox[{0., 0.5}, 0.05628067550723107], 
                   TagBox[
                    GridBox[{{"\"Axiom 2\""}, {
                    RowBox[{
                    RowBox[{"x1", "\[CirclePlus]", 
                    RowBox[{"x2", "\[CircleTimes]", "x3"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x3"}], ")"}]}]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{"Axiom 2", CirclePlus[$CellContext`x1, 
                    CircleTimes[$CellContext`x2, $CellContext`x3]] == 
                    CircleTimes[
                    CirclePlus[$CellContext`x1, $CellContext`x2], 
                    CirclePlus[$CellContext`x1, $CellContext`x3]]}], 
                   "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[
                   DiskBox[{-1., 2.}, 0.05628067550723107], 
                   TagBox[
                    GridBox[{{"\"Hypothesis 1\""}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "b"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{"Hypothesis 1", CirclePlus[
                    CircleTimes[$CellContext`a, $CellContext`b], 
                    CircleTimes[$CellContext`a, $CellContext`c]] == 
                    CircleTimes[
                    CirclePlus[$CellContext`a, 
                    CircleTimes[$CellContext`a, $CellContext`c]], 
                    CirclePlus[$CellContext`b, 
                    CircleTimes[$CellContext`a, $CellContext`c]]]}], 
                   "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[
                   DiskBox[{-1., 1.5}, 0.05628067550723107], 
                   TagBox[
                    GridBox[{{"\"Substitution Lemma 1\""}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "b"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{"Substitution Lemma 1", CirclePlus[
                    CircleTimes[$CellContext`a, $CellContext`c], 
                    CircleTimes[$CellContext`a, $CellContext`b]] == 
                    CircleTimes[
                    CirclePlus[$CellContext`a, 
                    CircleTimes[$CellContext`a, $CellContext`c]], 
                    CirclePlus[$CellContext`b, 
                    CircleTimes[$CellContext`a, $CellContext`c]]]}], 
                   "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[
                   DiskBox[{0., 1.}, 0.05628067550723107], 
                   TagBox[
                    GridBox[{{"\"Substitution Lemma 2\""}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "b"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    "b"}], ")"}]}]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{"Substitution Lemma 2", CirclePlus[
                    CircleTimes[$CellContext`a, $CellContext`c], 
                    CircleTimes[$CellContext`a, $CellContext`b]] == 
                    CircleTimes[
                    CirclePlus[$CellContext`a, 
                    CircleTimes[$CellContext`a, $CellContext`c]], 
                    CirclePlus[
                    
                    CircleTimes[$CellContext`a, $CellContext`c], \
$CellContext`b]]}], "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[
                   DiskBox[{1., 0.5}, 0.05628067550723107], 
                   TagBox[
                    GridBox[{{"\"Substitution Lemma 3\""}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "b"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    "a"}], ")"}], "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    "b"}], ")"}]}]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{"Substitution Lemma 3", CirclePlus[
                    CircleTimes[$CellContext`a, $CellContext`c], 
                    CircleTimes[$CellContext`a, $CellContext`b]] == 
                    CircleTimes[
                    CirclePlus[
                    
                    CircleTimes[$CellContext`a, $CellContext`c], \
$CellContext`a], 
                    CirclePlus[
                    
                    CircleTimes[$CellContext`a, $CellContext`c], \
$CellContext`b]]}], "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[
                   DiskBox[{1., 0.}, 0.05628067550723107], 
                   TagBox[
                    
                    GridBox[{{"\"Conclusion 1\""}, {"True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{"Conclusion 1", True}], "Tooltip"]& ]}}, {
               BaseStyle -> RGBColor[0.368417, 0.506779, 0.709798], 
                FormatType -> TraditionalForm, Frame -> True, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None,
                 ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                Scaled[0.15]}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["7", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "b"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}]}], 
                    Short[#, 1]& ], "SummaryItem"]}], "\[SpanFromLeft]"}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 Directive[
                  RGBColor[0.368417, 0.506779, 0.709798]], {
                  Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                  
                  ArrowBox[{{0., 2.}, {-1., 1.5}}]}, {
                  Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                  
                  ArrowBox[
                   BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQYcYIzg8zeOvp7/3x7G3+ghWbHLFMGXyDkolnPw
H5zfanlxIYMzgv9nA0jDXzi/7pJ67SV1BJ9tXt5Z/u4/cP4MYVkugye/4Xxj
MEDwL4K01/6C84tkjhfKHP8J5wsLggCCv4E1Goh+wPkBv5b4/1ryHc5//w4E
vsH5fY8tgAjB17vRpHuj6SucfwYMvsD5aW8efT0vjeD/Spxo9KHkM5zfogsy
4BOcz+K//Vm7K4JfdUwv7v+ej3D+q8l2LyfbIfhg5ac+wPlrDNStRBIQfAj4
YA8AaCdwgQ==
                    "]]]}, {
                  Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                  
                  ArrowBox[
                   BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQYc1G5x7LudtdJ+2h32iSGz/ttbegSkeovssd9X
e3VJrPx/+50nCj19+I7blz3OsJbu/2evP+l95NTNF+x38R4K6X35175d+kdF
Qtc1+/4/Dz5s1vtrn9RwqbGd+679l/VH+fvj/tgnJthbtUo/sn+hXrBRrvK3
fXBe3YoStmf22SkPribV/bLnyFrGPcntlX1dqlhtdN5P+76jcywUq17bL6lw
mBcl/tPeiT0iv7HzjX3IshOh2lt/2Cvp31i/qeStfce7dYvPuv+w17GV/bXF
+p29U+Dndsfz3+1TDNX9Ou69s285N5Wp3fu7/Qnub6t1Yt/b+6RNE56355t9
xJlO4UXb39vPlvi6q03pm71Y8aOWF2/f2xc+3fjDofarPSRYPtibGIPAZzj/
inrtJfXaT3B+ocxxIPpozwjlCwmCwEe4/EbW6A2s0R/g/AVfPOd/8XwP59+7
CwJv4XxZkHGFb+D8mA0gA17D+bNmgsBLOP/8jaOv55u/gPM/H1ZKffDyGdw9
7CDrNzyFy7PPyzvL3/0Ezv/aE7vnX+VjOP8S2H+P4Hyw8ikP4fyIRL8SjQMP
4HwI/cAeALIL6/A=
                    "]]]}, {
                  Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                  
                  ArrowBox[{{0., 0.5}, {1., 0.}}]}, {
                  Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                  
                  ArrowBox[{{-1., 2.}, {-1., 1.5}}]}, {
                  Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                  
                  ArrowBox[{{-1., 1.5}, {0., 1.}}]}, {
                  Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                  
                  ArrowBox[{{0., 1.}, {1., 0.5}}]}, {
                  Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                  
                  ArrowBox[{{1., 0.5}, {1., 0.}}]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 Directive[
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                 TagBox[
                  TooltipBox[
                   DiskBox[{0., 2.}, 0.05628067550723107], 
                   TagBox[
                    GridBox[{{"\"Axiom 1\""}, {
                    RowBox[{
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], "\[Equal]", 
                    RowBox[{"x2", "\[CirclePlus]", "x1"}]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   
                   Column[{
                    "Axiom 1", CirclePlus[$CellContext`x1, $CellContext`x2] == 
                    CirclePlus[$CellContext`x2, $CellContext`x1]}], 
                   "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[
                   DiskBox[{0., 0.5}, 0.05628067550723107], 
                   TagBox[
                    GridBox[{{"\"Axiom 2\""}, {
                    RowBox[{
                    RowBox[{"x1", "\[CirclePlus]", 
                    RowBox[{"x2", "\[CircleTimes]", "x3"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x3"}], ")"}]}]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{"Axiom 2", CirclePlus[$CellContext`x1, 
                    CircleTimes[$CellContext`x2, $CellContext`x3]] == 
                    CircleTimes[
                    CirclePlus[$CellContext`x1, $CellContext`x2], 
                    CirclePlus[$CellContext`x1, $CellContext`x3]]}], 
                   "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[
                   DiskBox[{-1., 2.}, 0.05628067550723107], 
                   TagBox[
                    GridBox[{{"\"Hypothesis 1\""}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "b"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{"Hypothesis 1", CirclePlus[
                    CircleTimes[$CellContext`a, $CellContext`b], 
                    CircleTimes[$CellContext`a, $CellContext`c]] == 
                    CircleTimes[
                    CirclePlus[$CellContext`a, 
                    CircleTimes[$CellContext`a, $CellContext`c]], 
                    CirclePlus[$CellContext`b, 
                    CircleTimes[$CellContext`a, $CellContext`c]]]}], 
                   "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[
                   DiskBox[{-1., 1.5}, 0.05628067550723107], 
                   TagBox[
                    GridBox[{{"\"Substitution Lemma 1\""}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "b"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{"Substitution Lemma 1", CirclePlus[
                    CircleTimes[$CellContext`a, $CellContext`c], 
                    CircleTimes[$CellContext`a, $CellContext`b]] == 
                    CircleTimes[
                    CirclePlus[$CellContext`a, 
                    CircleTimes[$CellContext`a, $CellContext`c]], 
                    CirclePlus[$CellContext`b, 
                    CircleTimes[$CellContext`a, $CellContext`c]]]}], 
                   "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[
                   DiskBox[{0., 1.}, 0.05628067550723107], 
                   TagBox[
                    GridBox[{{"\"Substitution Lemma 2\""}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "b"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    "b"}], ")"}]}]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{"Substitution Lemma 2", CirclePlus[
                    CircleTimes[$CellContext`a, $CellContext`c], 
                    CircleTimes[$CellContext`a, $CellContext`b]] == 
                    CircleTimes[
                    CirclePlus[$CellContext`a, 
                    CircleTimes[$CellContext`a, $CellContext`c]], 
                    CirclePlus[
                    
                    CircleTimes[$CellContext`a, $CellContext`c], \
$CellContext`b]]}], "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[
                   DiskBox[{1., 0.5}, 0.05628067550723107], 
                   TagBox[
                    GridBox[{{"\"Substitution Lemma 3\""}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "b"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    "a"}], ")"}], "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "c"}], "\[CirclePlus]", 
                    "b"}], ")"}]}]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{"Substitution Lemma 3", CirclePlus[
                    CircleTimes[$CellContext`a, $CellContext`c], 
                    CircleTimes[$CellContext`a, $CellContext`b]] == 
                    CircleTimes[
                    CirclePlus[
                    
                    CircleTimes[$CellContext`a, $CellContext`c], \
$CellContext`a], 
                    CirclePlus[
                    
                    CircleTimes[$CellContext`a, $CellContext`c], \
$CellContext`b]]}], "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[
                   DiskBox[{1., 0.}, 0.05628067550723107], 
                   TagBox[
                    
                    GridBox[{{"\"Conclusion 1\""}, {"True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{"Conclusion 1", True}], "Tooltip"]& ]}}, {
               BaseStyle -> RGBColor[0.368417, 0.506779, 0.709798], 
                FormatType -> TraditionalForm, Frame -> True, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None,
                 ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                Scaled[0.15]}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["7", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "b"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}]}], 
                    Short[#, 1]& ], "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Axioms: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], 
                    "\[Equal]", 
                    
                    RowBox[{"\[FormalB]", "\[CircleTimes]", 
                    "\[FormalA]"}]}]}], "&&", 
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], 
                    "\[Equal]", 
                    RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalA]"}]}]}],
                     "&&", 
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"\[FormalB]", "\[CirclePlus]", 
                    OverscriptBox["\[FormalB]", "_"]}], ")"}]}], "\[Equal]", 
                    "\[FormalA]"}]}], "&&", 
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CirclePlus]", 
                    RowBox[{"\[FormalB]", "\[CircleTimes]", 
                    OverscriptBox["\[FormalB]", "_"]}]}], "\[Equal]", 
                    "\[FormalA]"}]}], "&&", 
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    
                    RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", 
                    "\[FormalC]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalC]"}], 
                    ")"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], 
                    "\[CirclePlus]", 
                    
                    RowBox[{"\[FormalA]", "\[CircleTimes]", 
                    "\[FormalC]"}]}]}]}], "&&", 
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    
                    RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", 
                    "\[FormalC]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CirclePlus]", 
                    RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalC]"}]}], 
                    "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], 
                    ")"}], "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalC]"}], 
                    ")"}]}]}]}]}], Short[#, 1]& ], "SummaryItem"]}], 
                 "\[SpanFromLeft]"}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ProofObject["EquationalLogic", CirclePlus[
       CircleTimes[$CellContext`a, $CellContext`b], 
       CircleTimes[$CellContext`a, $CellContext`c]] == CircleTimes[
       CirclePlus[$CellContext`a, 
        CircleTimes[$CellContext`a, $CellContext`c]], 
       CirclePlus[$CellContext`b, 
        CircleTimes[$CellContext`a, $CellContext`c]]], 
     And[
      ForAll[{\[FormalA], \[FormalB]}, CircleTimes[\[FormalA], \[FormalB]] == 
       CircleTimes[\[FormalB], \[FormalA]]], 
      ForAll[{\[FormalA], \[FormalB]}, CirclePlus[\[FormalA], \[FormalB]] == 
       CirclePlus[\[FormalB], \[FormalA]]], 
      ForAll[{\[FormalA], \[FormalB]}, CircleTimes[\[FormalA], 
         CirclePlus[\[FormalB], 
          OverBar[\[FormalB]]]] == \[FormalA]], 
      ForAll[{\[FormalA], \[FormalB]}, CirclePlus[\[FormalA], 
         CircleTimes[\[FormalB], 
          OverBar[\[FormalB]]]] == \[FormalA]], 
      ForAll[{\[FormalA], \[FormalB], \[FormalC]}, CircleTimes[\[FormalA], 
         CirclePlus[\[FormalB], \[FormalC]]] == CirclePlus[
         CircleTimes[\[FormalA], \[FormalB]], 
         CircleTimes[\[FormalA], \[FormalC]]]], 
      ForAll[{\[FormalA], \[FormalB], \[FormalC]}, CirclePlus[\[FormalA], 
         CircleTimes[\[FormalB], \[FormalC]]] == CircleTimes[
         CirclePlus[\[FormalA], \[FormalB]], 
         CirclePlus[\[FormalA], \[FormalC]]]]], {{"Axiom", 1} -> 
      Association[
       "Statement" -> 
        CirclePlus[$CellContext`x1, $CellContext`x2] == 
         CirclePlus[$CellContext`x2, $CellContext`x1], "Proof" -> 
        Association[]], {"Axiom", 2} -> 
      Association["Statement" -> CirclePlus[$CellContext`x1, 
           CircleTimes[$CellContext`x2, $CellContext`x3]] == CircleTimes[
           CirclePlus[$CellContext`x1, $CellContext`x2], 
           CirclePlus[$CellContext`x1, $CellContext`x3]], "Proof" -> 
        Association[]], {"Hypothesis", 1} -> 
      Association["Statement" -> CirclePlus[
           CircleTimes[$CellContext`a, $CellContext`b], 
           CircleTimes[$CellContext`a, $CellContext`c]] == CircleTimes[
           CirclePlus[$CellContext`a, 
            CircleTimes[$CellContext`a, $CellContext`c]], 
           CirclePlus[$CellContext`b, 
            CircleTimes[$CellContext`a, $CellContext`c]]], "Proof" -> 
        Association[]], {"SubstitutionLemma", 1} -> 
      Association["Statement" -> CirclePlus[
           CircleTimes[$CellContext`a, $CellContext`c], 
           CircleTimes[$CellContext`a, $CellContext`b]] == CircleTimes[
           CirclePlus[$CellContext`a, 
            CircleTimes[$CellContext`a, $CellContext`c]], 
           CirclePlus[$CellContext`b, 
            CircleTimes[$CellContext`a, $CellContext`c]]], "Proof" -> 
        Association[
         "Input" -> {"Hypothesis", 1}, "Position" -> 1, 
          "Construct" -> {"Axiom", 1}, "Orientation" -> {-1, 1}, 
          "Rule" -> (CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]] -> CirclePlus[$CellContext`x2, $CellContext`x1]), 
          "OutputExpression" -> CirclePlus[
             CircleTimes[$CellContext`a, $CellContext`c], 
             CircleTimes[$CellContext`a, $CellContext`b]] == CircleTimes[
             CirclePlus[$CellContext`a, 
              CircleTimes[$CellContext`a, $CellContext`c]], 
             CirclePlus[$CellContext`b, 
              CircleTimes[$CellContext`a, $CellContext`c]]]]], {
       "SubstitutionLemma", 2} -> Association["Statement" -> CirclePlus[
           CircleTimes[$CellContext`a, $CellContext`c], 
           CircleTimes[$CellContext`a, $CellContext`b]] == CircleTimes[
           CirclePlus[$CellContext`a, 
            CircleTimes[$CellContext`a, $CellContext`c]], 
           CirclePlus[
            CircleTimes[$CellContext`a, $CellContext`c], $CellContext`b]], 
        "Proof" -> Association[
         "Input" -> {"SubstitutionLemma", 1}, "Position" -> {2, 2}, 
          "Construct" -> {"Axiom", 1}, "Orientation" -> {-1, 1}, 
          "Rule" -> (CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]] -> CirclePlus[$CellContext`x2, $CellContext`x1]), 
          "OutputExpression" -> CirclePlus[
             CircleTimes[$CellContext`a, $CellContext`c], 
             CircleTimes[$CellContext`a, $CellContext`b]] == CircleTimes[
             CirclePlus[$CellContext`a, 
              CircleTimes[$CellContext`a, $CellContext`c]], 
             CirclePlus[
              
              CircleTimes[$CellContext`a, $CellContext`c], \
$CellContext`b]]]], {"SubstitutionLemma", 3} -> 
      Association["Statement" -> CirclePlus[
           CircleTimes[$CellContext`a, $CellContext`c], 
           CircleTimes[$CellContext`a, $CellContext`b]] == CircleTimes[
           CirclePlus[
            CircleTimes[$CellContext`a, $CellContext`c], $CellContext`a], 
           CirclePlus[
            CircleTimes[$CellContext`a, $CellContext`c], $CellContext`b]], 
        "Proof" -> Association[
         "Input" -> {"SubstitutionLemma", 2}, "Position" -> {2, 1}, 
          "Construct" -> {"Axiom", 1}, "Orientation" -> {-1, 1}, 
          "Rule" -> (CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]] -> CirclePlus[$CellContext`x2, $CellContext`x1]), 
          "OutputExpression" -> CirclePlus[
             CircleTimes[$CellContext`a, $CellContext`c], 
             CircleTimes[$CellContext`a, $CellContext`b]] == CircleTimes[
             CirclePlus[
              CircleTimes[$CellContext`a, $CellContext`c], $CellContext`a], 
             CirclePlus[
              
              CircleTimes[$CellContext`a, $CellContext`c], \
$CellContext`b]]]], {"Conclusion", 1} -> 
      Association[
       "Statement" -> True, "Proof" -> 
        Association[
         "Input" -> {"SubstitutionLemma", 3}, "Position" -> 2, 
          "Construct" -> {"Axiom", 2}, "Orientation" -> -1, 
          "Rule" -> (CircleTimes[
             CirclePlus[
              Pattern[$CellContext`x1, 
               Blank[]], 
              Pattern[$CellContext`x2, 
               Blank[]]], 
             CirclePlus[
              Pattern[$CellContext`x1, 
               Blank[]], 
              Pattern[$CellContext`x3, 
               Blank[]]]] -> CirclePlus[$CellContext`x1, 
             CircleTimes[$CellContext`x2, $CellContext`x3]]), 
          "OutputExpression" -> True]]}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], "\[LeftDoubleBracket]", "4", 
   "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.771197800395653*^9, 3.771197882393159*^9}, {
  3.7711980685796337`*^9, 3.771198071081506*^9}, {3.7712371850321617`*^9, 
  3.771237259825593*^9}},
 CellLabel->
  "In[714]:=",ExpressionUUID->"f4e1e392-6752-4453-bb5b-93dc959bfc0b"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{{3.7711978318278923`*^9, 3.7711978832813168`*^9}, 
   3.77119807149857*^9, {3.771237189065466*^9, 3.77123726043456*^9}},
 CellLabel->
  "Out[714]=",ExpressionUUID->"385a977d-ed4f-4ea3-a5c0-7f2bef84e2f3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{
     RowBox[{"FindEquationalProof", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        "\[Equal]", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}]}], ","}], "]"}], 
     "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ","}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771237269803585*^9, 
  3.771237407780842*^9}},ExpressionUUID->"84afbebc-68de-4230-8338-\
877c0cd72188"],

Cell["\<\
We begin with the expression or[and[a,b],and[a,c]].
We apply the distributive law to the entire expression, which yields XXXXX.
\
\>", "Text",
 CellChangeTimes->{{3.771166267623502*^9, 3.771166301790573*^9}, {
  3.771237243123925*^9, 
  3.771237244164029*^9}},ExpressionUUID->"e180275a-03ec-46e8-bebd-\
373601ce1591"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"CircleTimes", "[", 
     RowBox[{
      RowBox[{"CirclePlus", "[", 
       RowBox[{"a", ",", 
        RowBox[{"CircleTimes", "[", 
         RowBox[{"a", ",", "c"}], "]"}]}], "]"}], ",", 
      RowBox[{"CirclePlus", "[", 
       RowBox[{"b", ",", 
        RowBox[{"CircleTimes", "[", 
         RowBox[{"a", ",", "c"}], "]"}]}], "]"}]}], "]"}], "\[Equal]", 
    RowBox[{"CircleTimes", "[", 
     RowBox[{
      RowBox[{"CircleTimes", "[", 
       RowBox[{
        RowBox[{"CirclePlus", "[", 
         RowBox[{"a", ",", "a"}], "]"}], ",", 
        RowBox[{"CirclePlus", "[", 
         RowBox[{"a", ",", "c"}], "]"}]}], "]"}], ",", 
      RowBox[{"CirclePlus", "[", 
       RowBox[{"b", ",", 
        RowBox[{"CircleTimes", "[", 
         RowBox[{"a", ",", "c"}], "]"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{"AxiomaticTheory", "[", "\"\<BooleanAxioms\>\"", "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.771198181269668*^9, 3.771198233298156*^9}},
 CellLabel->
  "In[709]:=",ExpressionUUID->"84bff99c-4cb4-47ca-bd13-b9b8c08f707c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ProofObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               Directive[
                Opacity[0.7], 
                Hue[0.6, 0.7, 0.5]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 1.}, {1., 0.}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{1., 1.}, {1., 0.}}]}}, {
               Directive[
                Hue[0.6, 0.2, 0.8], 
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.7]]]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 1.}, 0.04223904260875941], 
                 TagBox[
                  GridBox[{{"\"Axiom 1\""}, {
                    RowBox[{
                    RowBox[{"x1", "\[CirclePlus]", 
                    RowBox[{"x2", "\[CircleTimes]", "x3"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x3"}], ")"}]}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Axiom 1", CirclePlus[$CellContext`x1, 
                    CircleTimes[$CellContext`x2, $CellContext`x3]] == 
                   CircleTimes[
                    CirclePlus[$CellContext`x1, $CellContext`x2], 
                    CirclePlus[$CellContext`x1, $CellContext`x3]]}], 
                 "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 1.}, 0.04223904260875941], 
                 TagBox[
                  GridBox[{{"\"Hypothesis 1\""}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}], 
                    "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", "a"}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", "c"}], ")"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Hypothesis 1", CircleTimes[
                    CirclePlus[$CellContext`a, 
                    CircleTimes[$CellContext`a, $CellContext`c]], 
                    CirclePlus[$CellContext`b, 
                    CircleTimes[$CellContext`a, $CellContext`c]]] == 
                   CircleTimes[
                    CircleTimes[
                    CirclePlus[$CellContext`a, $CellContext`a], 
                    CirclePlus[$CellContext`a, $CellContext`c]], 
                    CirclePlus[$CellContext`b, 
                    CircleTimes[$CellContext`a, $CellContext`c]]]}], 
                 "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 0.}, 0.04223904260875941], 
                 TagBox[
                  
                  GridBox[{{"\"Conclusion 1\""}, {"True"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Conclusion 1", True}], "Tooltip"]& ]}}, {
             BaseStyle -> RGBColor[0.368417, 0.506779, 0.709798], FormatType -> 
              TraditionalForm, Frame -> True, FrameStyle -> Directive[
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
              ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
              Scaled[0.15]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}], 
                    "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", "a"}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", "c"}], ")"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}]}], 
                   Short[#, 1]& ], "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               Directive[
                Opacity[0.7], 
                Hue[0.6, 0.7, 0.5]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 1.}, {1., 0.}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{1., 1.}, {1., 0.}}]}}, {
               Directive[
                Hue[0.6, 0.2, 0.8], 
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.7]]]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 1.}, 0.04223904260875941], 
                 TagBox[
                  GridBox[{{"\"Axiom 1\""}, {
                    RowBox[{
                    RowBox[{"x1", "\[CirclePlus]", 
                    RowBox[{"x2", "\[CircleTimes]", "x3"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x3"}], ")"}]}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Axiom 1", CirclePlus[$CellContext`x1, 
                    CircleTimes[$CellContext`x2, $CellContext`x3]] == 
                   CircleTimes[
                    CirclePlus[$CellContext`x1, $CellContext`x2], 
                    CirclePlus[$CellContext`x1, $CellContext`x3]]}], 
                 "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 1.}, 0.04223904260875941], 
                 TagBox[
                  GridBox[{{"\"Hypothesis 1\""}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}], 
                    "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", "a"}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", "c"}], ")"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Hypothesis 1", CircleTimes[
                    CirclePlus[$CellContext`a, 
                    CircleTimes[$CellContext`a, $CellContext`c]], 
                    CirclePlus[$CellContext`b, 
                    CircleTimes[$CellContext`a, $CellContext`c]]] == 
                   CircleTimes[
                    CircleTimes[
                    CirclePlus[$CellContext`a, $CellContext`a], 
                    CirclePlus[$CellContext`a, $CellContext`c]], 
                    CirclePlus[$CellContext`b, 
                    CircleTimes[$CellContext`a, $CellContext`c]]]}], 
                 "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 0.}, 0.04223904260875941], 
                 TagBox[
                  
                  GridBox[{{"\"Conclusion 1\""}, {"True"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Conclusion 1", True}], "Tooltip"]& ]}}, {
             BaseStyle -> RGBColor[0.368417, 0.506779, 0.709798], FormatType -> 
              TraditionalForm, Frame -> True, FrameStyle -> Directive[
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
              ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
              Scaled[0.15]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}], 
                    "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", "a"}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", "c"}], ")"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}], ")"}]}]}], 
                   Short[#, 1]& ], "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Axioms: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], 
                    "\[Equal]", 
                    
                    RowBox[{
                    "\[FormalB]", "\[CircleTimes]", "\[FormalA]"}]}]}], "&&", 
                    
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], 
                    "\[Equal]", 
                    RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalA]"}]}]}],
                     "&&", 
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"\[FormalB]", "\[CirclePlus]", 
                    OverscriptBox["\[FormalB]", "_"]}], ")"}]}], "\[Equal]", 
                    "\[FormalA]"}]}], "&&", 
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CirclePlus]", 
                    RowBox[{"\[FormalB]", "\[CircleTimes]", 
                    OverscriptBox["\[FormalB]", "_"]}]}], "\[Equal]", 
                    "\[FormalA]"}]}], "&&", 
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], 
                    "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalC]"}], 
                    ")"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], 
                    "\[CirclePlus]", 
                    
                    RowBox[{"\[FormalA]", "\[CircleTimes]", 
                    "\[FormalC]"}]}]}]}], "&&", 
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], 
                    "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CirclePlus]", 
                    RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalC]"}]}], 
                    "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], 
                    ")"}], "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalC]"}], 
                    ")"}]}]}]}]}], Short[#, 1]& ], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ProofObject["EquationalLogic", CircleTimes[
     CirclePlus[$CellContext`a, 
      CircleTimes[$CellContext`a, $CellContext`c]], 
     CirclePlus[$CellContext`b, 
      CircleTimes[$CellContext`a, $CellContext`c]]] == CircleTimes[
     CircleTimes[
      CirclePlus[$CellContext`a, $CellContext`a], 
      CirclePlus[$CellContext`a, $CellContext`c]], 
     CirclePlus[$CellContext`b, 
      CircleTimes[$CellContext`a, $CellContext`c]]], 
   And[
    ForAll[{\[FormalA], \[FormalB]}, CircleTimes[\[FormalA], \[FormalB]] == 
     CircleTimes[\[FormalB], \[FormalA]]], 
    ForAll[{\[FormalA], \[FormalB]}, CirclePlus[\[FormalA], \[FormalB]] == 
     CirclePlus[\[FormalB], \[FormalA]]], 
    ForAll[{\[FormalA], \[FormalB]}, CircleTimes[\[FormalA], 
       CirclePlus[\[FormalB], 
        OverBar[\[FormalB]]]] == \[FormalA]], 
    ForAll[{\[FormalA], \[FormalB]}, CirclePlus[\[FormalA], 
       CircleTimes[\[FormalB], 
        OverBar[\[FormalB]]]] == \[FormalA]], 
    ForAll[{\[FormalA], \[FormalB], \[FormalC]}, CircleTimes[\[FormalA], 
       CirclePlus[\[FormalB], \[FormalC]]] == CirclePlus[
       CircleTimes[\[FormalA], \[FormalB]], 
       CircleTimes[\[FormalA], \[FormalC]]]], 
    ForAll[{\[FormalA], \[FormalB], \[FormalC]}, CirclePlus[\[FormalA], 
       CircleTimes[\[FormalB], \[FormalC]]] == CircleTimes[
       CirclePlus[\[FormalA], \[FormalB]], 
       CirclePlus[\[FormalA], \[FormalC]]]]], {{"Axiom", 1} -> 
    Association["Statement" -> CirclePlus[$CellContext`x1, 
         CircleTimes[$CellContext`x2, $CellContext`x3]] == CircleTimes[
         CirclePlus[$CellContext`x1, $CellContext`x2], 
         CirclePlus[$CellContext`x1, $CellContext`x3]], "Proof" -> 
      Association[]], {"Hypothesis", 1} -> 
    Association["Statement" -> CircleTimes[
         CirclePlus[$CellContext`a, 
          CircleTimes[$CellContext`a, $CellContext`c]], 
         CirclePlus[$CellContext`b, 
          CircleTimes[$CellContext`a, $CellContext`c]]] == CircleTimes[
         CircleTimes[
          CirclePlus[$CellContext`a, $CellContext`a], 
          CirclePlus[$CellContext`a, $CellContext`c]], 
         CirclePlus[$CellContext`b, 
          CircleTimes[$CellContext`a, $CellContext`c]]], "Proof" -> 
      Association[]], {"Conclusion", 1} -> 
    Association[
     "Statement" -> True, "Proof" -> 
      Association[
       "Input" -> {"Hypothesis", 1}, "Position" -> 2, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, 
           CircleTimes[$CellContext`x2, $CellContext`x3]]), 
        "OutputExpression" -> True]]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.771198243104786*^9},
 CellLabel->
  "Out[709]=",ExpressionUUID->"24800c76-b224-48c3-8e73-3f8d3c67bad3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"CircleTimes", "[", 
     RowBox[{
      RowBox[{"CircleTimes", "[", 
       RowBox[{"a", ",", 
        RowBox[{"CirclePlus", "[", 
         RowBox[{"a", ",", "c"}], "]"}]}], "]"}], ",", 
      RowBox[{"CirclePlus", "[", 
       RowBox[{"b", ",", "c"}], "]"}]}], "]"}], "\[Equal]", 
    RowBox[{"CirclePlus", "[", 
     RowBox[{
      RowBox[{"CircleTimes", "[", 
       RowBox[{"a", ",", "b"}], "]"}], ",", 
      RowBox[{"CircleTimes", "[", 
       RowBox[{"a", ",", "c"}], "]"}]}], "]"}]}], ",", 
   RowBox[{"AxiomaticTheory", "[", "\"\<BooleanAxioms\>\"", "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.771168517510812*^9, 3.771168560652955*^9}},
 CellLabel->
  "In[605]:=",ExpressionUUID->"0de1bf49-52a9-473b-accd-7fbedd8310c7"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   RowBox[{
    TagBox["ProofObject",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[
              
              GraphicsComplexBox[{{0., 4.}, {1., 5.}, {-1., 5.}, {-2., 1.}, {
               1., 4.}, {0., 3.}, {-1., 2.}, {0., 2.}, {-1., 1.}, {-1., 
               0.}}, {{
                 GrayLevel[0.55], 
                 LineBox[{1, 6}], 
                 LineBox[{2, 5}], 
                 LineBox[{3, 5}], 
                 LineBox[{4, 10}], 
                 LineBox[{5, 6}], 
                 LineBox[{6, 7}], 
                 LineBox[{6, 8}], 
                 LineBox[{7, 9}], 
                 LineBox[{8, 9}], 
                 LineBox[{9, 10}], 
                 LineBox[{3, 7}]}, {
                 PointBox[1], 
                 PointBox[2], 
                 PointBox[3], 
                 PointBox[4], 
                 PointBox[5], 
                 PointBox[6], 
                 PointBox[7], 
                 PointBox[8], 
                 PointBox[9], 
                 PointBox[10]}}], FrameTicks -> None, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], PlotRange -> All, PlotRangeClipping -> True, 
              PlotRangePadding -> Scaled[0.1], Background -> GrayLevel[0.93], 
              Axes -> False, AspectRatio -> 1, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], Frame -> True, FrameTicks -> None, 
              FrameStyle -> Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
                RowBox[{
                  TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["36", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", "c"}], ")"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", "c"}], ")"}]}], "\[Equal]", 
                    
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "b"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}]}], Short[#, 1]& ], 
                   "SummaryItem"]}], "\[SpanFromLeft]"}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[
              
              GraphicsComplexBox[{{0., 4.}, {1., 5.}, {-1., 5.}, {-2., 1.}, {
               1., 4.}, {0., 3.}, {-1., 2.}, {0., 2.}, {-1., 1.}, {-1., 
               0.}}, {{
                 GrayLevel[0.55], 
                 LineBox[{1, 6}], 
                 LineBox[{2, 5}], 
                 LineBox[{3, 5}], 
                 LineBox[{4, 10}], 
                 LineBox[{5, 6}], 
                 LineBox[{6, 7}], 
                 LineBox[{6, 8}], 
                 LineBox[{7, 9}], 
                 LineBox[{8, 9}], 
                 LineBox[{9, 10}], 
                 LineBox[{3, 7}]}, {
                 PointBox[1], 
                 PointBox[2], 
                 PointBox[3], 
                 PointBox[4], 
                 PointBox[5], 
                 PointBox[6], 
                 PointBox[7], 
                 PointBox[8], 
                 PointBox[9], 
                 PointBox[10]}}], FrameTicks -> None, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], PlotRange -> All, PlotRangeClipping -> True, 
              PlotRangePadding -> Scaled[0.1], Background -> GrayLevel[0.93], 
              Axes -> False, AspectRatio -> 1, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], Frame -> True, FrameTicks -> None, 
              FrameStyle -> Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
                RowBox[{
                  TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["36", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"a", "\[CirclePlus]", "c"}], ")"}]}], ")"}], 
                    "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"b", "\[CirclePlus]", "c"}], ")"}]}], "\[Equal]", 
                    
                    RowBox[{
                    RowBox[{"a", "\[CircleTimes]", "b"}], "\[CirclePlus]", 
                    RowBox[{"a", "\[CircleTimes]", "c"}]}]}], Short[#, 1]& ], 
                   "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Axioms: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], 
                    "\[Equal]", 
                    
                    RowBox[{
                    "\[FormalB]", "\[CircleTimes]", "\[FormalA]"}]}]}], "&&", 
                    
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], 
                    "\[Equal]", 
                    RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalA]"}]}]}],
                     "&&", 
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"\[FormalB]", "\[CirclePlus]", 
                    OverscriptBox["\[FormalB]", "_"]}], ")"}]}], "\[Equal]", 
                    "\[FormalA]"}]}], "&&", 
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CirclePlus]", 
                    RowBox[{"\[FormalB]", "\[CircleTimes]", 
                    OverscriptBox["\[FormalB]", "_"]}]}], "\[Equal]", 
                    "\[FormalA]"}]}], "&&", 
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    
                    RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", 
                    "\[FormalC]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalC]"}], 
                    ")"}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], 
                    "\[CirclePlus]", 
                    
                    RowBox[{"\[FormalA]", "\[CircleTimes]", 
                    "\[FormalC]"}]}]}]}], "&&", 
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    
                    RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", 
                    "\[FormalC]"}], "}"}]], 
                    RowBox[{
                    RowBox[{"\[FormalA]", "\[CirclePlus]", 
                    RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalC]"}]}], 
                    "\[Equal]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], 
                    ")"}], "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalC]"}], 
                    ")"}]}]}]}]}], Short[#, 1]& ], "SummaryItem"]}], 
                "\[SpanFromLeft]"}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   ProofObject["EquationalLogic", CircleTimes[
      CircleTimes[$CellContext`a, 
       CirclePlus[$CellContext`a, $CellContext`c]], 
      CirclePlus[$CellContext`b, $CellContext`c]] == CirclePlus[
      CircleTimes[$CellContext`a, $CellContext`b], 
      CircleTimes[$CellContext`a, $CellContext`c]], 
    And[
     ForAll[{\[FormalA], \[FormalB]}, CircleTimes[\[FormalA], \[FormalB]] == 
      CircleTimes[\[FormalB], \[FormalA]]], 
     ForAll[{\[FormalA], \[FormalB]}, CirclePlus[\[FormalA], \[FormalB]] == 
      CirclePlus[\[FormalB], \[FormalA]]], 
     ForAll[{\[FormalA], \[FormalB]}, CircleTimes[\[FormalA], 
        CirclePlus[\[FormalB], 
         OverBar[\[FormalB]]]] == \[FormalA]], 
     ForAll[{\[FormalA], \[FormalB]}, CirclePlus[\[FormalA], 
        CircleTimes[\[FormalB], 
         OverBar[\[FormalB]]]] == \[FormalA]], 
     ForAll[{\[FormalA], \[FormalB], \[FormalC]}, CircleTimes[\[FormalA], 
        CirclePlus[\[FormalB], \[FormalC]]] == CirclePlus[
        CircleTimes[\[FormalA], \[FormalB]], 
        CircleTimes[\[FormalA], \[FormalC]]]], 
     ForAll[{\[FormalA], \[FormalB], \[FormalC]}, CirclePlus[\[FormalA], 
        CircleTimes[\[FormalB], \[FormalC]]] == CircleTimes[
        CirclePlus[\[FormalA], \[FormalB]], 
        CirclePlus[\[FormalA], \[FormalC]]]]], {{"Axiom", 1} -> 
     Association[
      "Statement" -> $CellContext`x1 == CircleTimes[$CellContext`x1, 
          CirclePlus[$CellContext`x2, 
           OverBar[$CellContext`x2]]], "Proof" -> Association[]], {
      "Axiom", 2} -> 
     Association["Statement" -> $CellContext`x1 == CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x2, 
           OverBar[$CellContext`x2]]], "Proof" -> Association[]], {
      "Axiom", 3} -> 
     Association[
      "Statement" -> 
       CircleTimes[$CellContext`x1, $CellContext`x2] == 
        CircleTimes[$CellContext`x2, $CellContext`x1], "Proof" -> 
       Association[]], {"Axiom", 4} -> 
     Association["Statement" -> CircleTimes[$CellContext`x1, 
          CirclePlus[$CellContext`x2, $CellContext`x3]] == CirclePlus[
          CircleTimes[$CellContext`x1, $CellContext`x2], 
          CircleTimes[$CellContext`x1, $CellContext`x3]], "Proof" -> 
       Association[]], {"Axiom", 5} -> 
     Association["Statement" -> CircleTimes[
          CirclePlus[$CellContext`x1, $CellContext`x2], 
          CirclePlus[$CellContext`x1, $CellContext`x3]] == 
        CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x2, $CellContext`x3]], "Proof" -> 
       Association[]], {"Axiom", 6} -> 
     Association[
      "Statement" -> 
       CirclePlus[$CellContext`x1, $CellContext`x2] == 
        CirclePlus[$CellContext`x2, $CellContext`x1], "Proof" -> 
       Association[]], {"Hypothesis", 1} -> 
     Association["Statement" -> CircleTimes[
          CircleTimes[$CellContext`a, 
           CirclePlus[$CellContext`a, $CellContext`c]], 
          CirclePlus[$CellContext`b, $CellContext`c]] == CirclePlus[
          CircleTimes[$CellContext`a, $CellContext`b], 
          CircleTimes[$CellContext`a, $CellContext`c]], "Proof" -> 
       Association[]], {"CriticalPairLemma", 1} -> 
     Association["Statement" -> CircleTimes[
          CirclePlus[$CellContext`x1, 
           OverBar[$CellContext`x1]], $CellContext`x2] == $CellContext`x2, 
       "Proof" -> Association[
        "Construct" -> {"Axiom", 3}, "Orientation" -> {-1, 1}, "Rule" -> 
         TwoWayRule[
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CircleTimes[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]], "Side" -> 1, "Subpattern" -> CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"Axiom", 1}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 2} -> 
     Association["Statement" -> CircleTimes[$CellContext`x1, 
          CirclePlus[$CellContext`x2, 
           OverBar[$CellContext`x1]]] == 
        CircleTimes[$CellContext`x1, $CellContext`x2], "Proof" -> 
       Association[
        "Construct" -> {"Axiom", 4}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CircleTimes[$CellContext`x1, 
            CirclePlus[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
         "Subpattern" -> CirclePlus[
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]], "MatchingConstruct" -> {"Axiom", 2}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 3} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x2, 
           OverBar[$CellContext`x1]]] == 
        CirclePlus[$CellContext`x1, $CellContext`x2], "Proof" -> 
       Association[
        "Construct" -> {"Axiom", 5}, "Orientation" -> 1, 
         "Rule" -> (CircleTimes[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
         "Subpattern" -> CircleTimes[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]], "MatchingConstruct" -> {"Axiom", 1}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 4} -> Association["Statement" -> CirclePlus[
          CircleTimes[$CellContext`x1, 
           OverBar[$CellContext`x1]], $CellContext`x2] == $CellContext`x2, 
       "Proof" -> Association[
        "Construct" -> {"Axiom", 6}, "Orientation" -> {-1, 1}, "Rule" -> 
         TwoWayRule[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]], "Side" -> 1, "Subpattern" -> CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"Axiom", 2}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 5} -> 
     Association[
      "Statement" -> 
       CirclePlus[$CellContext`x1, $CellContext`x2] == 
        CirclePlus[$CellContext`x1, 
          CircleTimes[
           OverBar[$CellContext`x1], $CellContext`x2]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 1}, "Orientation" -> 1, 
         "Rule" -> (CircleTimes[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]]], 
            Pattern[$CellContext`x2, 
             Blank[]]] -> $CellContext`x2), "Side" -> 1, "Subpattern" -> 
         CircleTimes[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"Axiom", 5}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CircleTimes[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, $CellContext`x3]]), "MatchingSide" -> 
         1]], {"CriticalPairLemma", 6} -> 
     Association[
      "Statement" -> 
       CircleTimes[$CellContext`x1, $CellContext`x2] == 
        CircleTimes[$CellContext`x1, 
          CirclePlus[
           OverBar[$CellContext`x1], $CellContext`x2]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 4}, "Orientation" -> 1, 
         "Rule" -> (CirclePlus[
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]]], 
            Pattern[$CellContext`x2, 
             Blank[]]] -> $CellContext`x2), "Side" -> 1, "Subpattern" -> 
         CirclePlus[
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"Axiom", 4}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CirclePlus[
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CircleTimes[$CellContext`x1, 
            CirclePlus[$CellContext`x2, $CellContext`x3]]), "MatchingSide" -> 
         1]], {"CriticalPairLemma", 7} -> 
     Association[
      "Statement" -> 
       CircleTimes[$CellContext`x1, $CellContext`x1] == $CellContext`x1, 
       "Proof" -> Association[
        "Construct" -> {"CriticalPairLemma", 2}, "Orientation" -> 1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
         "Side" -> 1, "Subpattern" -> CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]]], "MatchingConstruct" -> {"Axiom", 1}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 8} -> 
     Association["Statement" -> CircleTimes[$CellContext`x1, 
          CirclePlus[$CellContext`x1, $CellContext`x2]] == 
        CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x1, $CellContext`x2]], "Proof" -> 
       Association[
        "Construct" -> {"Axiom", 4}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CircleTimes[$CellContext`x1, 
            CirclePlus[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
         "Subpattern" -> CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 7}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 9} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          OverBar[
           OverBar[$CellContext`x1]]] == $CellContext`x1, "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 5}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
         "Side" -> 1, "Subpattern" -> CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CircleTimes[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            Pattern[$CellContext`x2, 
             Blank[]]]], "MatchingConstruct" -> {"Axiom", 2}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 10} -> 
     Association["Statement" -> CircleTimes[$CellContext`x1, 
          OverBar[
           OverBar[
            OverBar[$CellContext`x1]]]] == CircleTimes[$CellContext`x1, 
          OverBar[$CellContext`x1]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 6}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
         "Side" -> 1, "Subpattern" -> CirclePlus[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 9}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            OverBar[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 11} -> Association["Statement" -> CirclePlus[
          OverBar[
           OverBar[$CellContext`x1]], $CellContext`x1] == CirclePlus[
          OverBar[
           OverBar[$CellContext`x1]], 
          CircleTimes[$CellContext`x1, 
           OverBar[$CellContext`x1]]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 3}, "Orientation" -> 1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
         "Side" -> 1, "Subpattern" -> CircleTimes[
           Pattern[$CellContext`x2, 
            Blank[]], 
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]]], "MatchingConstruct" -> {"CriticalPairLemma", 10}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            OverBar[
             OverBar[
              OverBar[
               Pattern[$CellContext`x1, 
                Blank[]]]]]] -> CircleTimes[$CellContext`x1, 
            OverBar[$CellContext`x1]]), "MatchingSide" -> 1]], {
      "SubstitutionLemma", 1} -> Association["Statement" -> CirclePlus[
          OverBar[
           OverBar[$CellContext`x1]], $CellContext`x1] == OverBar[
          OverBar[$CellContext`x1]], "Proof" -> 
       Association[
        "Input" -> {"CriticalPairLemma", 11}, "Position" -> 2, 
         "Construct" -> {"Axiom", 2}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> $CellContext`x1), "OutputExpression" -> 
         CirclePlus[
            OverBar[
             OverBar[$CellContext`x1]], $CellContext`x1] == OverBar[
            OverBar[$CellContext`x1]]]], {"SubstitutionLemma", 2} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          OverBar[
           OverBar[$CellContext`x1]]] == OverBar[
          OverBar[$CellContext`x1]], "Proof" -> 
       Association[
        "Input" -> {"SubstitutionLemma", 1}, "Position" -> 1, 
         "Construct" -> {"Axiom", 6}, "Orientation" -> {-1, 1}, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]] -> CirclePlus[$CellContext`x2, $CellContext`x1]), 
         "OutputExpression" -> CirclePlus[$CellContext`x1, 
            OverBar[
             OverBar[$CellContext`x1]]] == OverBar[
            OverBar[$CellContext`x1]]]], {"SubstitutionLemma", 3} -> 
     Association["Statement" -> $CellContext`x1 == OverBar[
          OverBar[$CellContext`x1]], "Proof" -> 
       Association[
        "Input" -> {"SubstitutionLemma", 2}, "Position" -> 1, 
         "Construct" -> {"CriticalPairLemma", 9}, "Orientation" -> 1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            OverBar[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]]]] -> $CellContext`x1), 
         "OutputExpression" -> $CellContext`x1 == OverBar[
            OverBar[$CellContext`x1]]]], {"CriticalPairLemma", 12} -> 
     Association["Statement" -> CircleTimes[
          OverBar[$CellContext`x1], $CellContext`x2] == CircleTimes[
          OverBar[$CellContext`x1], 
          CirclePlus[$CellContext`x1, $CellContext`x2]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 6}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
         "Side" -> 1, "Subpattern" -> OverBar[
           Pattern[$CellContext`x1, 
            Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 3}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (OverBar[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 13} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CirclePlus[$CellContext`x1, $CellContext`x2]] == 
        CirclePlus[$CellContext`x1, 
          CircleTimes[
           OverBar[$CellContext`x1], $CellContext`x2]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 5}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
         "Side" -> 1, "Subpattern" -> CircleTimes[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 12}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CircleTimes[
            OverBar[$CellContext`x1], $CellContext`x2]), "MatchingSide" -> 
         1]], {"SubstitutionLemma", 4} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CirclePlus[$CellContext`x1, $CellContext`x2]] == 
        CirclePlus[$CellContext`x1, $CellContext`x2], "Proof" -> 
       Association[
        "Input" -> {"CriticalPairLemma", 13}, "Position" -> 2, 
         "Construct" -> {"CriticalPairLemma", 5}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
         "OutputExpression" -> CirclePlus[$CellContext`x1, 
            CirclePlus[$CellContext`x1, $CellContext`x2]] == 
          CirclePlus[$CellContext`x1, $CellContext`x2]]], {
      "CriticalPairLemma", 14} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x2, 
           CirclePlus[$CellContext`x1, $CellContext`x3]]] == CircleTimes[
          CirclePlus[$CellContext`x1, $CellContext`x2], 
          CirclePlus[$CellContext`x1, $CellContext`x3]], "Proof" -> 
       Association[
        "Construct" -> {"Axiom", 5}, "Orientation" -> 1, 
         "Rule" -> (CircleTimes[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
         "Subpattern" -> CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x3, 
            Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 4}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
         "MatchingSide" -> 1]], {"SubstitutionLemma", 5} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x2, 
           CirclePlus[$CellContext`x1, $CellContext`x3]]] == 
        CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x2, $CellContext`x3]], "Proof" -> 
       Association[
        "Input" -> {"CriticalPairLemma", 14}, "Position" -> 2, 
         "Construct" -> {"Axiom", 5}, "Orientation" -> 1, 
         "Rule" -> (CircleTimes[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, $CellContext`x3]]), 
         "OutputExpression" -> CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, 
             CirclePlus[$CellContext`x1, $CellContext`x3]]] == 
          CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, $CellContext`x3]]]], {
      "CriticalPairLemma", 15} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x2, 
           OverBar[$CellContext`x2]]] == CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x2, $CellContext`x1]], "Proof" -> 
       Association[
        "Construct" -> {"SubstitutionLemma", 5}, "Orientation" -> 1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             Pattern[$CellContext`x2, 
              Blank[]], 
             CirclePlus[
              Pattern[$CellContext`x1, 
               Blank[]], 
              Pattern[$CellContext`x3, 
               Blank[]]]]] -> CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
         "Subpattern" -> CircleTimes[
           Pattern[$CellContext`x2, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]], "MatchingConstruct" -> {"CriticalPairLemma", 2}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
         "MatchingSide" -> 1]], {"SubstitutionLemma", 6} -> 
     Association["Statement" -> $CellContext`x1 == CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x2, $CellContext`x1]], "Proof" -> 
       Association[
        "Input" -> {"CriticalPairLemma", 15}, "Position" -> 1, 
         "Construct" -> {"Axiom", 2}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> $CellContext`x1), 
         "OutputExpression" -> $CellContext`x1 == 
          CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, $CellContext`x1]]]], {
      "SubstitutionLemma", 7} -> Association["Statement" -> CircleTimes[
          CirclePlus[$CellContext`b, $CellContext`c], 
          CircleTimes[$CellContext`a, 
           CirclePlus[$CellContext`a, $CellContext`c]]] == CirclePlus[
          CircleTimes[$CellContext`a, $CellContext`b], 
          CircleTimes[$CellContext`a, $CellContext`c]], "Proof" -> 
       Association[
        "Input" -> {"Hypothesis", 1}, "Position" -> 1, 
         "Construct" -> {"Axiom", 3}, "Orientation" -> {-1, 1}, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]] -> CircleTimes[$CellContext`x2, $CellContext`x1]), 
         "OutputExpression" -> CircleTimes[
            CirclePlus[$CellContext`b, $CellContext`c], 
            CircleTimes[$CellContext`a, 
             CirclePlus[$CellContext`a, $CellContext`c]]] == CirclePlus[
            CircleTimes[$CellContext`a, $CellContext`b], 
            CircleTimes[$CellContext`a, $CellContext`c]]]], {
      "SubstitutionLemma", 8} -> Association["Statement" -> CircleTimes[
          CirclePlus[$CellContext`b, $CellContext`c], 
          CircleTimes[$CellContext`a, 
           CirclePlus[$CellContext`a, $CellContext`c]]] == 
        CircleTimes[$CellContext`a, 
          CirclePlus[$CellContext`b, $CellContext`c]], "Proof" -> 
       Association[
        "Input" -> {"SubstitutionLemma", 7}, "Position" -> 2, 
         "Construct" -> {"Axiom", 4}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CircleTimes[$CellContext`x1, 
            CirclePlus[$CellContext`x2, $CellContext`x3]]), 
         "OutputExpression" -> CircleTimes[
            CirclePlus[$CellContext`b, $CellContext`c], 
            CircleTimes[$CellContext`a, 
             CirclePlus[$CellContext`a, $CellContext`c]]] == 
          CircleTimes[$CellContext`a, 
            CirclePlus[$CellContext`b, $CellContext`c]]]], {
      "SubstitutionLemma", 9} -> Association["Statement" -> CircleTimes[
          CirclePlus[$CellContext`b, $CellContext`c], 
          CircleTimes[$CellContext`a, 
           CirclePlus[$CellContext`a, $CellContext`c]]] == CircleTimes[
          CirclePlus[$CellContext`b, $CellContext`c], $CellContext`a], 
       "Proof" -> Association[
        "Input" -> {"SubstitutionLemma", 8}, "Position" -> 2, 
         "Construct" -> {"Axiom", 3}, "Orientation" -> {-1, 1}, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]] -> CircleTimes[$CellContext`x2, $CellContext`x1]), 
         "OutputExpression" -> CircleTimes[
            CirclePlus[$CellContext`b, $CellContext`c], 
            CircleTimes[$CellContext`a, 
             CirclePlus[$CellContext`a, $CellContext`c]]] == CircleTimes[
            CirclePlus[$CellContext`b, $CellContext`c], $CellContext`a]]], {
      "SubstitutionLemma", 10} -> Association["Statement" -> CircleTimes[
          CirclePlus[$CellContext`c, $CellContext`b], 
          CircleTimes[$CellContext`a, 
           CirclePlus[$CellContext`a, $CellContext`c]]] == CircleTimes[
          CirclePlus[$CellContext`b, $CellContext`c], $CellContext`a], 
       "Proof" -> Association[
        "Input" -> {"SubstitutionLemma", 9}, "Position" -> {1, 1}, 
         "Construct" -> {"Axiom", 6}, "Orientation" -> {-1, 1}, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]] -> CirclePlus[$CellContext`x2, $CellContext`x1]), 
         "OutputExpression" -> CircleTimes[
            CirclePlus[$CellContext`c, $CellContext`b], 
            CircleTimes[$CellContext`a, 
             CirclePlus[$CellContext`a, $CellContext`c]]] == CircleTimes[
            CirclePlus[$CellContext`b, $CellContext`c], $CellContext`a]]], {
      "SubstitutionLemma", 11} -> Association["Statement" -> CircleTimes[
          CirclePlus[$CellContext`c, $CellContext`b], 
          CircleTimes[$CellContext`a, 
           CirclePlus[$CellContext`a, $CellContext`c]]] == CircleTimes[
          CirclePlus[$CellContext`c, $CellContext`b], $CellContext`a], 
       "Proof" -> 
       Association[
        "Input" -> {"SubstitutionLemma", 10}, "Position" -> {2, 1}, 
         "Construct" -> {"Axiom", 6}, "Orientation" -> {-1, 1}, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]] -> CirclePlus[$CellContext`x2, $CellContext`x1]), 
         "OutputExpression" -> CircleTimes[
            CirclePlus[$CellContext`c, $CellContext`b], 
            CircleTimes[$CellContext`a, 
             CirclePlus[$CellContext`a, $CellContext`c]]] == CircleTimes[
            CirclePlus[$CellContext`c, $CellContext`b], $CellContext`a]]], {
      "SubstitutionLemma", 12} -> Association["Statement" -> CircleTimes[
          CirclePlus[$CellContext`c, $CellContext`b], 
          CirclePlus[$CellContext`a, 
           CircleTimes[$CellContext`a, $CellContext`c]]] == CircleTimes[
          CirclePlus[$CellContext`c, $CellContext`b], $CellContext`a], 
       "Proof" -> Association[
        "Input" -> {"SubstitutionLemma", 11}, "Position" -> {1, 2}, 
         "Construct" -> {"CriticalPairLemma", 8}, "Orientation" -> 1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x1, $CellContext`x2]]), 
         "OutputExpression" -> CircleTimes[
            CirclePlus[$CellContext`c, $CellContext`b], 
            CirclePlus[$CellContext`a, 
             CircleTimes[$CellContext`a, $CellContext`c]]] == CircleTimes[
            CirclePlus[$CellContext`c, $CellContext`b], $CellContext`a]]], {
      "SubstitutionLemma", 13} -> Association["Statement" -> CircleTimes[
          CirclePlus[$CellContext`c, $CellContext`b], 
          CirclePlus[$CellContext`a, 
           CircleTimes[$CellContext`c, $CellContext`a]]] == CircleTimes[
          CirclePlus[$CellContext`c, $CellContext`b], $CellContext`a], 
       "Proof" -> Association[
        "Input" -> {"SubstitutionLemma", 12}, "Position" -> {1, 2, 2}, 
         "Construct" -> {"Axiom", 3}, "Orientation" -> {-1, 1}, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]] -> CircleTimes[$CellContext`x2, $CellContext`x1]), 
         "OutputExpression" -> CircleTimes[
            CirclePlus[$CellContext`c, $CellContext`b], 
            CirclePlus[$CellContext`a, 
             CircleTimes[$CellContext`c, $CellContext`a]]] == CircleTimes[
            CirclePlus[$CellContext`c, $CellContext`b], $CellContext`a]]], {
      "Conclusion", 1} -> 
     Association[
      "Statement" -> True, "Proof" -> 
       Association[
        "Input" -> {"SubstitutionLemma", 13}, "Position" -> 1, 
         "Construct" -> {"SubstitutionLemma", 6}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             Pattern[$CellContext`x2, 
              Blank[]], 
             Pattern[$CellContext`x1, 
              Blank[]]]] -> $CellContext`x1), "OutputExpression" -> True]]}],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", "\"\<ProofFunction\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.771182583151144*^9, 3.771182585935183*^9}, {
  3.771182972563139*^9, 3.771182976994981*^9}},
 CellLabel->
  "In[676]:=",ExpressionUUID->"16970045-182f-4f2c-be0d-73138e8648b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ProofObject", "[", 
   RowBox[{"\"\<BooleanLogic\>\"", ",", "axioms", ",", 
    RowBox[{"theorem", 
     RowBox[{"(", "s", ")"}]}], ",", "proofList"}], "]"}], "[", 
  RowBox[{"[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7711826129731207`*^9, 3.771182660398295*^9}, {
  3.771182743819318*^9, 3.7711827470373287`*^9}},
 CellLabel->
  "In[673]:=",ExpressionUUID->"88c3b8b1-e2f3-4a59-a3c2-7d8ed7e63f6e"],

Cell[BoxData["proofList"], "Output",
 CellChangeTimes->{3.7711827474464083`*^9},
 CellLabel->
  "Out[673]=",ExpressionUUID->"351c5e77-6d22-47ca-ad2d-7351646c6367"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getProofList", "[", "proofObject", "]"}]], "Input",
 CellChangeTimes->{{3.771182734203418*^9, 
  3.771182753918952*^9}},ExpressionUUID->"6574713f-8734-48a0-a60d-\
7fca53b3f538"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ProofObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {
               Directive[
                Hue[0.6, 0.2, 0.8], 
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.7]]]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], 
               TagBox[
                TooltipBox[
                 DiskBox[{0.00001, -0.00001}, 8.447808521751884*^-7], 
                 TagBox[
                  GridBox[{{
                    RowBox[{
                    RowBox[{"1", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "<>", 
                    "\" 1[[1,2]]\""}]}, {
                    RowBox[{"1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{
                   StringJoin[
                    Part[1, 1, 1], " 1[[1,2]]"], 
                   Part[1, 2, 1]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 
                 DiskBox[{0.00001, -0.000030000000000000004`}, 
                  8.447808521751884*^-7], 
                 TagBox[
                  GridBox[{{
                    RowBox[{
                    RowBox[{"2", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "<>", 
                    "\" 2[[1,2]]\""}]}, {
                    RowBox[{"2", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{
                   StringJoin[
                    Part[2, 1, 1], " 2[[1,2]]"], 
                   Part[2, 2, 1]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 
                 DiskBox[{0.000030000000000000004`, -0.00001}, 
                  8.447808521751884*^-7], 
                 TagBox[
                  GridBox[{{
                    RowBox[{
                    RowBox[{"3", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "<>", 
                    "\" 3[[1,2]]\""}]}, {
                    RowBox[{"3", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{
                   StringJoin[
                    Part[3, 1, 1], " 3[[1,2]]"], 
                   Part[3, 2, 1]}], "Tooltip"]& ]}}, {
             BaseStyle -> RGBColor[0.368417, 0.506779, 0.709798], FormatType -> 
              TraditionalForm, Frame -> True, FrameStyle -> Directive[
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
              ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], PlotRangePadding -> Scaled[0.15]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"BooleanLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"a", "\[Equal]", "b"}], Short[#, 1]& ], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {
               Directive[
                Hue[0.6, 0.2, 0.8], 
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.7]]]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], 
               TagBox[
                TooltipBox[
                 DiskBox[{0.00001, -0.00001}, 8.447808521751884*^-7], 
                 TagBox[
                  GridBox[{{
                    RowBox[{
                    RowBox[{"1", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "<>", 
                    "\" 1[[1,2]]\""}]}, {
                    RowBox[{"1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{
                   StringJoin[
                    Part[1, 1, 1], " 1[[1,2]]"], 
                   Part[1, 2, 1]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 
                 DiskBox[{0.00001, -0.000030000000000000004`}, 
                  8.447808521751884*^-7], 
                 TagBox[
                  GridBox[{{
                    RowBox[{
                    RowBox[{"2", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "<>", 
                    "\" 2[[1,2]]\""}]}, {
                    RowBox[{"2", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{
                   StringJoin[
                    Part[2, 1, 1], " 2[[1,2]]"], 
                   Part[2, 2, 1]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{0.000030000000000000004`, -0.00001}, 
                  8.447808521751884*^-7], 
                 TagBox[
                  GridBox[{{
                    RowBox[{
                    RowBox[{"3", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "<>", 
                    "\" 3[[1,2]]\""}]}, {
                    RowBox[{"3", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{
                   StringJoin[
                    Part[3, 1, 1], " 3[[1,2]]"], 
                   Part[3, 2, 1]}], "Tooltip"]& ]}}, {
             BaseStyle -> RGBColor[0.368417, 0.506779, 0.709798], FormatType -> 
              TraditionalForm, Frame -> True, FrameStyle -> Directive[
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
              ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], PlotRangePadding -> Scaled[0.15]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"BooleanLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"a", "\[Equal]", "b"}], Short[#, 1]& ], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Axioms: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"c", "\[Equal]", "d"}], Short[#, 1]& ], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ProofObject[
  "BooleanLogic", $CellContext`a == $CellContext`b, $CellContext`c == \
$CellContext`d, {1, 2, 3}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7711825862333612`*^9, 3.7711826264111757`*^9},
 CellLabel->
  "Out[671]=",ExpressionUUID->"fe3f5a9d-6c01-490c-a7d1-818ce331572b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "[", "\"\<Axioms\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7711826357026463`*^9, 3.771182637727474*^9}},
 CellLabel->
  "In[672]:=",ExpressionUUID->"c0f358bc-5b44-4e3a-add8-dbeebb5df1e4"],

Cell[BoxData[
 RowBox[{"c", "\[Equal]", "d"}]], "Output",
 CellChangeTimes->{3.771182637939754*^9},
 CellLabel->
  "Out[672]=",ExpressionUUID->"1efdc9a1-fb49-4992-b34d-56b2f1dedb1c"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771166242752821*^9, 3.771166253072966*^9}, {
  3.77116847350317*^9, 
  3.771168475664616*^9}},ExpressionUUID->"a50a5aa7-19b3-42e1-9fcf-\
dd598dcd4825"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findStep", "[", 
  RowBox[{"and", "[", 
   RowBox[{"a", ",", 
    RowBox[{"or", "[", 
     RowBox[{"b", ",", "c"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.771154761123768*^9, 3.771154770823275*^9}},
 CellLabel->
  "In[583]:=",ExpressionUUID->"74b17f2c-5950-49f4-999a-cc5d2ae242e0"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.771154771776845*^9, 3.7711550574588614`*^9},
 CellLabel->
  "Out[583]=",ExpressionUUID->"c6c507b9-1962-49b3-b385-46ab2a8d61bf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ProofObject", "[", 
  RowBox[{"\"\<BasicLogic\>\"", ",", "axioms", ",", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Initial\>\"", ",", "\"\<\>\"", ",", 
       RowBox[{"or", "[", 
        RowBox[{"p", ",", 
         RowBox[{"and", "[", 
          RowBox[{"p", ",", "q"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.77118311178622*^9, 
  3.771183130170018*^9}},ExpressionUUID->"4c226274-b790-4479-85c2-\
f15bd8c6673e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stepList", "[", 
  RowBox[{"or", "[", 
   RowBox[{"p", ",", 
    RowBox[{"and", "[", 
     RowBox[{"p", ",", "q"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.771110765285769*^9, 3.771110794028084*^9}, {
  3.771183105755031*^9, 3.7711831062924643`*^9}},
 CellLabel->
  "In[678]:=",ExpressionUUID->"ac67edd0-426a-4b24-a24e-c1a5f519a06d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Initial\"\>", ",", "\<\"\"\>", ",", 
     RowBox[{"or", "[", 
      RowBox[{"p", ",", 
       RowBox[{"and", "[", 
        RowBox[{"p", ",", "q"}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7711107808193417`*^9, 3.7711107945748167`*^9}, 
   3.7711499539267063`*^9, 3.771154723750513*^9, 3.771155057519227*^9, 
   3.77118310663134*^9},
 CellLabel->
  "Out[678]=",ExpressionUUID->"4950a8ec-7273-4e49-94f1-dd0938bed3e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Highlight the relevant parts in each step", "Subsection",
 CellChangeTimes->{{3.7710161524133472`*^9, 3.7710161821909227`*^9}, {
  3.771070293404805*^9, 3.771070301098194*^9}, {3.771087636589881*^9, 
  3.77108769004841*^9}, {3.771110720343369*^9, 
  3.771110730613524*^9}},ExpressionUUID->"5bb2b9d6-d410-4dff-9398-\
30b2c31df1cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"deepHighlight", "[", "expression_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{"{", "}"}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.771110141744762*^9, 3.771110163458528*^9}},
 CellLabel->
  "In[585]:=",ExpressionUUID->"18f22f68-f570-4f0b-abcc-e9290b2ca2d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"styling", "[", "result_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "highlightIndex", ",", " ", "expression", ",", " ", "highlighted"}], 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"highlightIndex", " ", "=", " ", 
      RowBox[{"First", " ", "@", " ", 
       RowBox[{
       "result", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
     ";", "\n", "\t", "\n", "\t", 
     RowBox[{"expression", " ", "=", " ", 
      RowBox[{"result", "\[LeftDoubleBracket]", 
       RowBox[{"3", ",", " ", "highlightIndex"}], "\[RightDoubleBracket]"}]}],
      ";", "\n", "\t", 
     RowBox[{"highlighted", " ", "=", " ", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Text", "[", "expression", "]"}], ",", " ", "Red"}], "]"}]}], 
     ";", "\n", "\t", 
     RowBox[{"result", " ", "/.", " ", 
      RowBox[{"expression", " ", "\[Rule]", " ", "highlighted"}]}]}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.771109543289981*^9, 3.771109874749971*^9}, 
   3.7711099097020197`*^9, 3.771109979296639*^9},
 CellLabel->
  "In[586]:=",ExpressionUUID->"d004e8ac-1081-47d8-b40d-bf4602baeb00"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"styling", "/@", 
  RowBox[{"(", 
   RowBox[{"Rest", "[", 
    RowBox[{"stepList", "[", 
     RowBox[{"or", "[", 
      RowBox[{
       RowBox[{"and", "[", 
        RowBox[{"a", ",", "b"}], "]"}], ",", 
       RowBox[{"and", "[", 
        RowBox[{"c", ",", "d"}], "]"}]}], "]"}], "]"}], "]"}], 
   ")"}]}]], "Input",
 CellChangeTimes->{
  3.771109810106176*^9, {3.771109848708399*^9, 3.771109862496632*^9}},
 CellLabel->
  "In[587]:=",ExpressionUUID->"c08897f9-e8fd-4706-b80b-86576ef6ecae"],

Cell[BoxData[
 TemplateBox[{
  "First","nofirst",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) has zero length and no first \
element.\"",2,587,134,25593562398627614713,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771109912517432*^9, 3.7711103192383547`*^9, 
  3.771155057598956*^9},
 CellLabel->
  "During evaluation of \
In[587]:=",ExpressionUUID->"5a54d1f2-2c9c-456a-94e8-d1a3f6b74ed0"],

Cell[BoxData[
 TemplateBox[{
  "Part","pkspec1",
   "\"The expression \\!\\(\\*RowBox[{\\\"First\\\", \\\"[\\\", RowBox[{\\\"{\
\\\", \\\"}\\\"}], \\\"]\\\"}]\\) cannot be used as a part specification.\"",
   2,587,135,25593562398627614713,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771109912517432*^9, 3.7711103192383547`*^9, 
  3.771155057614129*^9},
 CellLabel->
  "During evaluation of \
In[587]:=",ExpressionUUID->"c2b8b22d-89f2-41fd-b5ac-f8b9fb3f8f23"],

Cell[BoxData[
 TemplateBox[{
  "First","nofirst",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) has zero length and no first \
element.\"",2,587,136,25593562398627614713,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771109912517432*^9, 3.7711103192383547`*^9, 
  3.7711550576192837`*^9},
 CellLabel->
  "During evaluation of \
In[587]:=",ExpressionUUID->"d4a37622-8ae9-47c7-b5ac-0e750fcf1cd1"],

Cell[BoxData[
 TemplateBox[{
  "Part","pkspec1",
   "\"The expression \\!\\(\\*RowBox[{\\\"First\\\", \\\"[\\\", RowBox[{\\\"{\
\\\", \\\"}\\\"}], \\\"]\\\"}]\\) cannot be used as a part specification.\"",
   2,587,137,25593562398627614713,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771109912517432*^9, 3.7711103192383547`*^9, 
  3.771155057624978*^9},
 CellLabel->
  "During evaluation of \
In[587]:=",ExpressionUUID->"be82713a-d778-4c00-aa00-94f14eaa4668"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Distribution\"\>", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"and", "[", 
      RowBox[{
       RowBox[{"or", "[", 
        RowBox[{"a", ",", 
         RowBox[{"and", "[", 
          RowBox[{"c", ",", "d"}], "]"}]}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", 
         RowBox[{"and", "[", 
          RowBox[{"c", ",", "d"}], "]"}]}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Distribution\"\>", ",", 
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"and", "[", 
      RowBox[{
       RowBox[{"or", "[", 
        RowBox[{"b", ",", 
         RowBox[{"and", "[", 
          RowBox[{"c", ",", "d"}], "]"}]}], "]"}], ",", 
       StyleBox[
        InterpretationBox[Cell[BoxData[
          FormBox[
           RowBox[{"and", "[", 
            RowBox[{
             RowBox[{"or", "[", 
              RowBox[{"a", ",", "c"}], "]"}], ",", 
             RowBox[{"or", "[", 
              RowBox[{"a", ",", "d"}], "]"}]}], "]"}], TextForm]], 
          "InlineText",ExpressionUUID->"51495e9e-f118-4c60-81f5-2f861838c9ca"],
         Text[
          $CellContext`and[
           $CellContext`or[$CellContext`a, $CellContext`c], 
           $CellContext`or[$CellContext`a, $CellContext`d]]]],
        StripOnInput->False,
        LineColor->RGBColor[1, 0, 0],
        FrontFaceColor->RGBColor[1, 0, 0],
        BackFaceColor->RGBColor[1, 0, 0],
        GraphicsColor->RGBColor[1, 0, 0],
        FontColor->RGBColor[1, 0, 0]]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Association\"\>", ",", 
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"and", "[", 
      RowBox[{
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "d"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", 
         RowBox[{"and", "[", 
          RowBox[{"c", ",", "d"}], "]"}]}], "]"}], ",", 
       StyleBox[
        InterpretationBox[Cell[BoxData[
          FormBox[
           RowBox[{"or", "[", 
            RowBox[{"a", ",", "c"}], "]"}], TextForm]], "InlineText",
          ExpressionUUID->"34d29050-f413-4265-b869-cf675ee63927"],
         Text[
          $CellContext`or[$CellContext`a, $CellContext`c]]],
        StripOnInput->False,
        LineColor->RGBColor[1, 0, 0],
        FrontFaceColor->RGBColor[1, 0, 0],
        BackFaceColor->RGBColor[1, 0, 0],
        GraphicsColor->RGBColor[1, 0, 0],
        FontColor->RGBColor[1, 0, 0]]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Distribution\"\>", ",", 
     RowBox[{"{", "3", "}"}], ",", 
     RowBox[{"and", "[", 
      RowBox[{
       RowBox[{"and", "[", 
        RowBox[{
         RowBox[{"or", "[", 
          RowBox[{"b", ",", "c"}], "]"}], ",", 
         RowBox[{"or", "[", 
          RowBox[{"b", ",", "d"}], "]"}]}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "c"}], "]"}], ",", 
       StyleBox[
        InterpretationBox[Cell[BoxData[
          FormBox[
           RowBox[{"or", "[", 
            RowBox[{"a", ",", "d"}], "]"}], TextForm]], "InlineText",
          ExpressionUUID->"b47dd2dc-7991-417e-971a-67eaeb39b490"],
         Text[
          $CellContext`or[$CellContext`a, $CellContext`d]]],
        StripOnInput->False,
        LineColor->RGBColor[1, 0, 0],
        FrontFaceColor->RGBColor[1, 0, 0],
        BackFaceColor->RGBColor[1, 0, 0],
        GraphicsColor->RGBColor[1, 0, 0],
        FontColor->RGBColor[1, 0, 0]]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Association\"\>", ",", 
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"and", "[", 
      RowBox[{
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "d"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", "c"}], "]"}], ",", 
       RowBox[{"or", "[", 
        RowBox[{"b", ",", "d"}], "]"}], ",", 
       StyleBox[
        InterpretationBox[Cell[BoxData[
          FormBox[
           RowBox[{"or", "[", 
            RowBox[{"a", ",", "c"}], "]"}], TextForm]], "InlineText",
          ExpressionUUID->"21c20604-9afa-408e-8c38-9ffa27086435"],
         Text[
          $CellContext`or[$CellContext`a, $CellContext`c]]],
        StripOnInput->False,
        LineColor->RGBColor[1, 0, 0],
        FrontFaceColor->RGBColor[1, 0, 0],
        BackFaceColor->RGBColor[1, 0, 0],
        GraphicsColor->RGBColor[1, 0, 0],
        FontColor->RGBColor[1, 0, 0]]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.771109863091114*^9, 3.771109912535742*^9, 
  3.771110319257917*^9, 3.7711550576319113`*^9},
 CellLabel->
  "Out[587]=",ExpressionUUID->"a46a37da-dc5e-41a3-b42f-e4830f56b73d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Style", "[", 
  RowBox[{
   RowBox[{"Text", "[", 
    RowBox[{"r", "[", 
     RowBox[{
      RowBox[{"and", "[", 
       RowBox[{"a", ",", "b"}], "]"}], ",", 
      RowBox[{"and", "[", 
       RowBox[{"c", ",", "d"}], "]"}]}], "]"}], "]"}], ",", "Red"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.771109465052823*^9, 3.771109494048108*^9}},
 CellLabel->
  "In[588]:=",ExpressionUUID->"3a1be935-f3b8-4ff0-a5b0-8ba80f274a98"],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox[
     RowBox[{"r", "[", 
      RowBox[{
       RowBox[{"and", "[", 
        RowBox[{"a", ",", "b"}], "]"}], ",", 
       RowBox[{"and", "[", 
        RowBox[{"c", ",", "d"}], "]"}]}], "]"}], TextForm]], "InlineText",
    ExpressionUUID->"a0f1c42b-a3f2-4072-8ff2-f384a03da891"],
   Text[
    $CellContext`r[
     $CellContext`and[$CellContext`a, $CellContext`b], 
     $CellContext`and[$CellContext`c, $CellContext`d]]]],
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontColor->RGBColor[1, 0, 0]]], "Output",
 CellChangeTimes->{3.7711094947981253`*^9, 3.771109532332593*^9, 
  3.771155057689333*^9},
 CellLabel->
  "Out[588]=",ExpressionUUID->"0c781850-6d72-4852-80e6-70a6a86000cb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 324, 6, 30, "Input",ExpressionUUID->"664bef8e-7fed-422c-9b6e-ba252071622d"],
Cell[CellGroupData[{
Cell[907, 30, 227, 4, 54, "Subsection",ExpressionUUID->"fc8a6b34-7a4a-4fce-bd95-5a50cd83977e"],
Cell[1137, 36, 407, 6, 35, "Text",ExpressionUUID->"5cfe9ccb-73c8-4493-830a-6727d1b7e680"],
Cell[1547, 44, 439, 10, 52, "Input",ExpressionUUID->"62ca0365-b5d0-4cf8-b6fe-4cc1fcb85f7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2023, 59, 333, 6, 54, "Subsection",ExpressionUUID->"e437783f-e4b5-400f-abaa-71aeab37c962"],
Cell[2359, 67, 706, 14, 81, "Text",ExpressionUUID->"409cdfa9-1d09-4438-8c1c-83733c47e1fa"],
Cell[3068, 83, 2890, 59, 136, "Input",ExpressionUUID->"f60bcc8c-4d31-4016-90f8-cee06bb523c8"],
Cell[5961, 144, 627, 13, 35, "Text",ExpressionUUID->"96918e48-559c-4683-adea-4c8afbc9f94a"],
Cell[6591, 159, 3129, 63, 115, "Input",ExpressionUUID->"5ebcef0d-6d6a-435b-916f-35adde93b208"],
Cell[9723, 224, 633, 13, 35, "Text",ExpressionUUID->"cbceafae-36fc-4845-a5b2-50717a1f0de3"],
Cell[10359, 239, 3934, 95, 241, "Input",ExpressionUUID->"a2032300-e7bd-4dac-8bb6-ee357e0106a8"],
Cell[14296, 336, 635, 13, 35, "Text",ExpressionUUID->"58afb677-dd78-4763-82f2-96041936b1ec"],
Cell[14934, 351, 2852, 59, 94, "Input",ExpressionUUID->"08aea677-86ab-43e6-a205-d74969b263ad"],
Cell[17789, 412, 676, 14, 35, "Text",ExpressionUUID->"d9eeb8de-7142-4de0-bd5a-7ea8f02aff10"],
Cell[18468, 428, 3148, 69, 115, "Input",ExpressionUUID->"eb0fa907-f0db-4cb1-b787-e89bd9556215"],
Cell[21619, 499, 676, 14, 35, "Text",ExpressionUUID->"b1ffac4e-63ed-4ac1-9fea-31839df7e846"],
Cell[22298, 515, 1582, 29, 94, "Input",ExpressionUUID->"b04bc00a-77b2-4056-9ffc-2d7cdf9ba466"],
Cell[23883, 546, 720, 15, 35, "Text",ExpressionUUID->"ac130562-1d89-4a52-9c73-4b34380f5d35"],
Cell[24606, 563, 1175, 25, 73, "Input",ExpressionUUID->"a1955a9a-4308-449b-94e9-047bb5ca5361"],
Cell[25784, 590, 756, 15, 35, "Text",ExpressionUUID->"baadfbad-6364-46ab-977c-980cc24e69a4"],
Cell[26543, 607, 3227, 82, 136, "Input",ExpressionUUID->"762118ee-588b-4b8b-9e5e-302ff05201a2"],
Cell[29773, 691, 807, 16, 35, "Text",ExpressionUUID->"c195e7e0-1ec6-4b5b-b4b1-aac28a526eaf"],
Cell[30583, 709, 2690, 68, 115, "Input",ExpressionUUID->"425c3aea-2897-4720-9998-84666cf73776"],
Cell[33276, 779, 815, 16, 35, "Text",ExpressionUUID->"a3bd9b47-7851-4a30-b5ef-81dabccc358f"],
Cell[34094, 797, 1206, 31, 52, "Input",ExpressionUUID->"dc15280b-9ab1-4dc4-a1d5-0f9770e9ea2d"],
Cell[35303, 830, 2753, 59, 94, "Input",ExpressionUUID->"23c31092-215a-4b54-8fd3-aea5f116e1c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38093, 894, 279, 6, 54, "Subsection",ExpressionUUID->"6614ac33-d494-4bb0-95d8-696b01008f6d"],
Cell[38375, 902, 882, 17, 35, "Text",ExpressionUUID->"0b413272-d19e-4fec-88f5-7f754b5205fb"],
Cell[39260, 921, 3108, 62, 304, "Input",ExpressionUUID->"7067600c-7be7-4994-a62f-ae34228338b3"],
Cell[42371, 985, 929, 17, 35, "Text",ExpressionUUID->"52339c3e-f2d8-416b-bf3c-3cdb61fc504e"],
Cell[43303, 1004, 691, 16, 52, "Input",ExpressionUUID->"aa4c1922-644a-40c7-bd8a-40119305c437"],
Cell[43997, 1022, 463, 12, 52, "Input",ExpressionUUID->"7dd26ac3-9937-4af4-a837-b71584c300e6"],
Cell[44463, 1036, 959, 17, 35, "Text",ExpressionUUID->"8ea7d019-fe19-48f6-9c3a-8ac01a084aaa"],
Cell[45425, 1055, 504, 12, 30, "Input",ExpressionUUID->"b18aea46-5290-45c2-bb7d-2e38a645c228"],
Cell[45932, 1069, 953, 17, 35, "Text",ExpressionUUID->"db3f1214-15ad-4093-a60f-ac88cd700d51"],
Cell[46888, 1088, 1557, 33, 30, "Input",ExpressionUUID->"92fd511b-3094-4297-bdde-fe37b8eed635"],
Cell[48448, 1123, 981, 18, 35, "Text",ExpressionUUID->"483716ad-d538-4e70-9be6-26f0bb41c5fa"],
Cell[49432, 1143, 1211, 27, 52, "Input",ExpressionUUID->"8fa2ae9a-50e8-4381-81d1-8095389b57ab"],
Cell[50646, 1172, 1032, 18, 35, "Text",ExpressionUUID->"6746a5b6-1bd1-49e8-9e76-ff322efc46bb"],
Cell[51681, 1192, 1076, 25, 52, "Input",ExpressionUUID->"8a762784-d42f-4a9c-a2c9-20e40eac5d29"],
Cell[52760, 1219, 1154, 20, 35, "Text",ExpressionUUID->"541f7c9c-3335-4548-b5e9-b1d1e2ffa5b0"],
Cell[53917, 1241, 1119, 27, 30, "Input",ExpressionUUID->"16cf8ca5-252d-4c8f-9be6-0bca73a24552"],
Cell[55039, 1270, 1128, 20, 35, "Text",ExpressionUUID->"e09281b9-9a93-4dcc-afa7-9ba04559d58c"],
Cell[56170, 1292, 1074, 26, 52, "Input",ExpressionUUID->"63bf0f30-27aa-4ddf-a1bc-46a0c0a21eb7"],
Cell[57247, 1320, 1166, 20, 35, "Text",ExpressionUUID->"832d960f-a2e1-440e-ad37-81ff4e05edc6"],
Cell[58416, 1342, 967, 22, 30, "Input",ExpressionUUID->"524e8ca1-3c29-4afe-91d0-1d99d4901e18"],
Cell[59386, 1366, 1198, 21, 35, "Text",ExpressionUUID->"0ab64af2-f68e-46b1-a992-64140045c1db"],
Cell[60587, 1389, 1789, 38, 52, "Input",ExpressionUUID->"2c9ce2ea-2cec-40e4-ab58-d184cc206747"],
Cell[62379, 1429, 1264, 22, 35, "Text",ExpressionUUID->"95323f73-eff9-4f16-8f8c-bd9918edd730"],
Cell[63646, 1453, 2291, 62, 136, "Input",ExpressionUUID->"cf6311cd-c71b-4e23-8f96-1005981a55a8"],
Cell[65940, 1517, 1205, 21, 35, "Text",ExpressionUUID->"e1ac3e41-cb67-4306-94be-82c541db8cf8"],
Cell[67148, 1540, 1431, 31, 30, "Input",ExpressionUUID->"eb2e9ba2-3d37-4cf6-a7b9-47e9bb50270d"],
Cell[68582, 1573, 1229, 21, 35, "Text",ExpressionUUID->"b4b69c60-c493-44fe-b415-6c8b96d86ab3"],
Cell[69814, 1596, 788, 20, 30, "Input",ExpressionUUID->"117c25b1-9000-4e60-b1f2-425b2a73a461"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70639, 1621, 335, 7, 54, "Subsection",ExpressionUUID->"cc49cbd2-5397-4501-b93a-881194b4f229"],
Cell[70977, 1630, 711, 21, 94, "Input",ExpressionUUID->"2dfb3a73-3cfa-40d5-9259-522f9b0802dc"],
Cell[71691, 1653, 2215, 51, 73, "Input",ExpressionUUID->"cd9a14e9-be6d-447c-98c0-44f9930a6f35"],
Cell[CellGroupData[{
Cell[73931, 1708, 321, 6, 30, "Input",ExpressionUUID->"e0cbfb3b-fec7-4429-8d36-02a8c492f314"],
Cell[74255, 1716, 919, 21, 60, "Output",ExpressionUUID->"ab1c0294-31d7-49e8-b864-b4632e75a893"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75211, 1742, 350, 7, 30, "Input",ExpressionUUID->"0c6902c3-1a53-43a1-8aa8-9bb9f8f0927e"],
Cell[75564, 1751, 1466, 36, 80, "Output",ExpressionUUID->"9da430fe-c536-4746-aeae-2505627da153"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77067, 1792, 884, 19, 30, "Input",ExpressionUUID->"1fd68e43-6dad-4d63-a72c-5eb7aeea0e61"],
Cell[77954, 1813, 5931, 161, 154, "Output",ExpressionUUID->"9938a377-5e55-4c6b-8e9c-cf3df42f4ad2"]
}, Open  ]],
Cell[83900, 1977, 479, 10, 58, "Text",ExpressionUUID->"50ec7c0a-8bbc-4503-9319-4637f47c9ecc"],
Cell[84382, 1989, 807, 14, 104, "Text",ExpressionUUID->"39be2831-662d-47d1-825d-a176dc6a648f"],
Cell[CellGroupData[{
Cell[85214, 2007, 605, 15, 30, "Input",ExpressionUUID->"8eccbb9a-53da-4a69-bd41-3cdf562184e7"],
Cell[85822, 2024, 7199, 196, 222, "Output",ExpressionUUID->"a86b2eb4-f75a-4d51-8a3c-ec4804cd4448"]
}, Open  ]],
Cell[93036, 2223, 517, 14, 30, "Input",ExpressionUUID->"1555a37e-3213-4d10-be7d-d5cbb2945a30"],
Cell[CellGroupData[{
Cell[93578, 2241, 432, 12, 30, "Input",ExpressionUUID->"2bc7d537-7ef1-4c51-88ca-4a000eb7e515"],
Cell[94013, 2255, 4769, 136, 204, "Output",ExpressionUUID->"a1b298a2-595a-45ec-a5b3-88a3c9bb502b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98819, 2396, 720, 17, 30, "Input",ExpressionUUID->"fa1bae7f-1344-4456-ac70-b453767b912f"],
Cell[99542, 2415, 369, 10, 34, "Output",ExpressionUUID->"40066542-6165-4b07-9a4b-bb09499e56ee"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99960, 2431, 153, 3, 67, "Section",ExpressionUUID->"6de69abd-b9c0-41be-bb71-e6b18a84cbd5"],
Cell[100116, 2436, 643, 20, 30, "Input",ExpressionUUID->"d26d8791-bf86-4e9c-85a0-74dd92c6b6b4"],
Cell[CellGroupData[{
Cell[100784, 2460, 997, 26, 52, "Input",ExpressionUUID->"5acbacff-8651-455f-8f1e-6e89165459c8"],
Cell[101784, 2488, 47725, 991, 63, "Output",ExpressionUUID->"0dc98ed1-5e94-4404-88b7-ba19705ed4d3"]
}, Open  ]],
Cell[149524, 3482, 195, 4, 35, "Text",ExpressionUUID->"4766412a-c5fe-43d8-959c-91be775847fc"],
Cell[CellGroupData[{
Cell[149744, 3490, 48956, 1002, 59, InheritFromParent,ExpressionUUID->"f4e1e392-6752-4453-bb5b-93dc959bfc0b"],
Cell[198703, 4494, 251, 4, 34, "Output",ExpressionUUID->"385a977d-ed4f-4ea3-a5c0-7f2bef84e2f3"]
}, Open  ]],
Cell[198969, 4501, 651, 17, 30, "Input",ExpressionUUID->"84afbebc-68de-4230-8338-877c0cd72188"],
Cell[199623, 4520, 327, 8, 81, "Text",ExpressionUUID->"e180275a-03ec-46e8-bebd-373601ce1591"],
Cell[CellGroupData[{
Cell[199975, 4532, 1118, 30, 52, "Input",ExpressionUUID->"84bff99c-4cb4-47ca-bd13-b9b8c08f707c"],
Cell[201096, 4564, 25082, 541, 63, "Output",ExpressionUUID->"24800c76-b224-48c3-8e73-3f8d3c67bad3"]
}, Open  ]],
Cell[226193, 5108, 824, 22, 52, "Input",ExpressionUUID->"0de1bf49-52a9-473b-accd-7fbedd8310c7"],
Cell[227020, 5132, 48387, 1110, 59, "Input",ExpressionUUID->"16970045-182f-4f2c-be0d-73138e8648b5"],
Cell[CellGroupData[{
Cell[275432, 6246, 445, 10, 30, "Input",ExpressionUUID->"88c3b8b1-e2f3-4a59-a3c2-7d8ed7e63f6e"],
Cell[275880, 6258, 163, 3, 34, "Output",ExpressionUUID->"351c5e77-6d22-47ca-ad2d-7351646c6367"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276080, 6266, 201, 4, 30, "Input",ExpressionUUID->"6574713f-8734-48a0-a60d-7fca53b3f538"],
Cell[276284, 6272, 12344, 269, 62, "Output",ExpressionUUID->"fe3f5a9d-6c01-490c-a7d1-818ce331572b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288665, 6546, 218, 4, 30, "Input",ExpressionUUID->"c0f358bc-5b44-4e3a-add8-dbeebb5df1e4"],
Cell[288886, 6552, 182, 4, 34, "Output",ExpressionUUID->"1efdc9a1-fb49-4992-b34d-56b2f1dedb1c"]
}, Open  ]],
Cell[289083, 6559, 200, 4, 30, "Input",ExpressionUUID->"a50a5aa7-19b3-42e1-9fcf-dd598dcd4825"],
Cell[CellGroupData[{
Cell[289308, 6567, 321, 8, 30, "Input",ExpressionUUID->"74b17f2c-5950-49f4-999a-cc5d2ae242e0"],
Cell[289632, 6577, 194, 4, 34, "Output",ExpressionUUID->"c6c507b9-1962-49b3-b385-46ab2a8d61bf"]
}, Open  ]],
Cell[289841, 6584, 645, 18, 30, "Input",ExpressionUUID->"4c226274-b790-4479-85c2-f15bd8c6673e"],
Cell[CellGroupData[{
Cell[290511, 6606, 372, 9, 30, "Input",ExpressionUUID->"ac67edd0-426a-4b24-a24e-c1a5f519a06d"],
Cell[290886, 6617, 648, 18, 34, "Output",ExpressionUUID->"4950a8ec-7273-4e49-94f1-dd0938bed3e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291571, 6640, 336, 5, 54, "Subsection",ExpressionUUID->"5bb2b9d6-d410-4dff-9398-30b2c31df1cd"],
Cell[291910, 6647, 323, 7, 91, "Code",ExpressionUUID->"18f22f68-f570-4f0b-abcc-e9290b2ca2d7"],
Cell[292236, 6656, 1224, 30, 186, "Code",ExpressionUUID->"d004e8ac-1081-47d8-b40d-bf4602baeb00"],
Cell[CellGroupData[{
Cell[293485, 6690, 513, 15, 30, "Input",ExpressionUUID->"c08897f9-e8fd-4706-b80b-86576ef6ecae"],
Cell[294001, 6707, 420, 10, 24, "Message",ExpressionUUID->"5a54d1f2-2c9c-456a-94e8-d1a3f6b74ed0"],
Cell[294424, 6719, 487, 11, 24, "Message",ExpressionUUID->"c2b8b22d-89f2-41fd-b5ac-f8b9fb3f8f23"],
Cell[294914, 6732, 422, 10, 24, "Message",ExpressionUUID->"d4a37622-8ae9-47c7-b5ac-0e750fcf1cd1"],
Cell[295339, 6744, 487, 11, 24, "Message",ExpressionUUID->"be82713a-d778-4c00-aa00-94f14eaa4668"],
Cell[295829, 6757, 4759, 130, 83, "Output",ExpressionUUID->"a46a37da-dc5e-41a3-b42f-e4830f56b73d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300625, 6892, 447, 13, 30, "Input",ExpressionUUID->"3a1be935-f3b8-4ff0-a5b0-8ba80f274a98"],
Cell[301075, 6907, 873, 24, 34, "Output",ExpressionUUID->"0c781850-6d72-4852-80e6-70a6a86000cb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

